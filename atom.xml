<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>黄重庆</title>
  <subtitle>Never Never Give Up</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-03-11T19:02:13.468Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>黄重庆</name>
    <email>1756260160@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git 多分支管理亲手操作一波</title>
    <link href="http://yoursite.com/2018/01/21/Git-%E5%A4%9A%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86%E4%BA%B2%E6%89%8B%E6%93%8D%E4%BD%9C%E4%B8%80%E6%B3%A2/"/>
    <id>http://yoursite.com/2018/01/21/Git-多分支管理亲手操作一波/</id>
    <published>2018-01-21T09:50:33.000Z</published>
    <updated>2018-03-11T19:02:13.468Z</updated>
    
    <content type="html"><![CDATA[<p>文 | 阿小庆  2018-01-21❤<br><img src="http://upload-images.jianshu.io/upload_images/4340772-9fd73f39e9bd784a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2018-01-21"></p>
<p>快过年了，是时候对以前的知识总结一波了！</p>
<p>先问大家一个问题：<br>问：如果一个人想<strong>针对项目不同阶段都有个备份</strong>，在一台电脑上多分支管理一个项目，应该怎么搞呢？<br>答：我给你用电脑操作一下吧，哈哈，下面带大家实际操作一波。<br><a id="more"></a></p>
<ol>
<li>首先我建立一个仓库，clone到本地，建立了<code>README.md  主分支master.txt</code><br><img src="http://upload-images.jianshu.io/upload_images/4340772-57ab0ee0856fe943.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/4340772-09d55e06ba07e340.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ol>
<ul>
<li>新建branch1分支，并切换到branch1分支（<code>git branch</code> 可以查看所有分支）<br><code>git branch 分支名</code><br><code>git checkout 想要切换的分支名</code><br><img src="http://upload-images.jianshu.io/upload_images/4340772-3764314fa110f952.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ul>
<ol>
<li><p>新建次分支branch1.txt并提交<br>在此分支下提交可能会报错，报错后再执行下一句就可以<br><code>git push -u origin dev</code><br>表示本地分支将<strong>建立对远程仓库目标分支的检测</strong>，如果远程仓库<strong>目标分支</strong>不存在，将新建分支再push；如果存在，将进行push更新。<br>具体解决方法见下link:<br><a href="http://blog.csdn.net/qqb123456/article/details/25319659" target="_blank" rel="external"> git：fatal the current branch master has no upstream branch</a></p>
</li>
<li><p>提交成功后 ，在github上查看，就能看到新建的branch1分支提交了<code>次分支branch1.txt</code><br><img src="http://upload-images.jianshu.io/upload_images/4340772-775ac31c872fe32e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
</li>
</ol>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-c8b59f1808524d81.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>而主分支master内容没变<br><img src="http://upload-images.jianshu.io/upload_images/4340772-18bb371d745e1335.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ul>
<p>好，这样就大功告成了，如果自己一个人开发，为了不容易乱，<strong>我是把不同的分支放在不同的文件夹下</strong>，如下图，当然，你也可以用你自己的方法<br><img src="http://upload-images.jianshu.io/upload_images/4340772-56e3e2ff37437364.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>我把代码放在Github上了，供大家参考<br><a href="https://github.com/HuangCongQing/branch" target="_blank" rel="external">https://github.com/HuangCongQing/branch</a></p>
<hr>
<p>好看的人儿，点个喜欢❤ 你会更好看哦~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文 | 阿小庆  2018-01-21❤&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-9fd73f39e9bd784a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;2018-01-21&quot;&gt;&lt;/p&gt;
&lt;p&gt;快过年了，是时候对以前的知识总结一波了！&lt;/p&gt;
&lt;p&gt;先问大家一个问题：&lt;br&gt;问：如果一个人想&lt;strong&gt;针对项目不同阶段都有个备份&lt;/strong&gt;，在一台电脑上多分支管理一个项目，应该怎么搞呢？&lt;br&gt;答：我给你用电脑操作一下吧，哈哈，下面带大家实际操作一波。&lt;br&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络考试 复习时你应该要看的几道题！</title>
    <link href="http://yoursite.com/2018/01/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%80%83%E8%AF%95-%E5%A4%8D%E4%B9%A0%E6%97%B6%E4%BD%A0%E5%BA%94%E8%AF%A5%E8%A6%81%E7%9C%8B%E7%9A%84%E5%87%A0%E9%81%93%E9%A2%98%EF%BC%81/"/>
    <id>http://yoursite.com/2018/01/13/计算机网络考试-复习时你应该要看的几道题！/</id>
    <published>2018-01-13T09:50:33.000Z</published>
    <updated>2018-03-11T17:57:52.759Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/4340772-52d53828985a9863.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="计算机网络"><br><a id="more"></a><br>计算机网络考试 复习时你应该要看的几道题！<br>文 |  <a href="https://www.jianshu.com/u/781142899214" target="_blank" rel="external">阿小庆</a> |  2018-01-03</p>
<p>在学校马上就要考《计算机网络》这门课了，复习的过程中，发现有些题目很经典，特地整理总结了一下，我只挑了有用的以期回顾，若有观者阅，悦，那自己更是欣喜！☺</p>
<p>下面即是计算机网络一些题目的解析：</p>
<hr>
<h3 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h3><p>1、假定站点A和B在同一个10Mb/s以太网网段上。这两个站点之间的传播时延为225比特时间。现假定A开始发送一帧，并且在A发送结束之前B也发送一帧。如果A发送的是以太网所容许的最短的帧，那么A在检测到和B发生碰撞之前能否把自己的数据发送完毕？换言之，如果A在发送完毕之前并没有检测到碰撞，那么能否肯定A所发送的帧不会和B发送的帧发生碰撞？（提示：在计算时应当考虑到每一个以太网帧在发送到信道上时，在MAC帧前面还要增加若干字节的前同步码和帧定界符）<br>2、在上题中的站点A和B在t=0时同时发送了数据帧。当t=255比特时间，A和B同时检测到发生了碰撞，并且在t=255+48=273比特时间完成了干扰信号的传输。A和B在CSMA/CD算法中选择不同的r值退避。假定A和B选择的随机数分别是rA=0和rB=1。试问A和B各在什么时间开始重传其数据帧？A重传的数据帧在什么时间到达B？A重传的数据会不会和B重传的数据再次发生碰撞？B会不会在预定的重传时间停止发送数据？<br>这道题，开始我是懵的，在网上搜了下资料，发现下面这篇文章很好，就不再赘述，直接附链接：<br><a href="http://blog.csdn.net/angelniu1024/article/details/23793373" target="_blank" rel="external">http://blog.csdn.net/angelniu1024/article/details/23793373</a><br>下面是课本参考答案：</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><img src="http://upload-images.jianshu.io/upload_images/4340772-05dcfa5d979964f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="课后答案"></h2><p>19.主机A发送IP数据报给主机B，途中经过了5个路由器。试问在IP数据报的发送过程中总共使用了几次ARP？ </p>
<h2 id="6次，主机用一次，每个路由器各使用一次。"><a href="#6次，主机用一次，每个路由器各使用一次。" class="headerlink" title="   6次，主机用一次，每个路由器各使用一次。"></a>   6次，主机用一次，每个路由器各使用一次。</h2><h3 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h3><p>5—21        假定使用连续ARQ协议中，发送窗口大小事3，而序列范围[0,15],而传输媒体保证在接收方能够按序收到分组。在某时刻，接收方，下一个期望收到序号是5.<br>试问：<br>（1）      在发送方的发送窗口中可能有出现的序号组合有哪几种？<br>（2）      接收方已经发送出去的、但在网络中（即还未到达发送方）的确认分组可能有哪些？说明这些确认分组是用来确认哪些序号的分组。</p>
<h2 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="http://upload-images.jianshu.io/upload_images/4340772-536ae19d497670e6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="课后答案"></h2><h3 id="运输层"><a href="#运输层" class="headerlink" title="运输层"></a>运输层</h3><p>假定TCP在开始建立连接时，发送方设定超时重传时间是RTO=6s。<br>（1）当发送方接到对方的连接确认报文段时，测量出RTT样本值为1.5s。试计算现在的RTO值。<br>（2）当发送方发送数据报文段并接收到确认时，测量出RTT样本值为2.5s。试计算现在的RTO值。<br>课后答案是下面这样的<br><img src="http://upload-images.jianshu.io/upload_images/4340772-ffca1008037492d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>不过，我看和公式不符啊，网上搜罗了下，发现有位已经有了先见之明，下面这张图应该是对的！<br><img src="http://upload-images.jianshu.io/upload_images/4340772-0740d7b33c10edde.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="上图来源文章：TCP-IP详解-RTT和RTO的计算方法-CSDN博客"><a href="#上图来源文章：TCP-IP详解-RTT和RTO的计算方法-CSDN博客" class="headerlink" title=" 上图来源文章：TCP-IP详解: RTT和RTO的计算方法 - CSDN博客"></a> <a href="http://blog.csdn.net/wdscq1234/article/details/52505191" target="_blank" rel="external">上图来源文章：<em>TCP</em>-IP详解: RTT和<em>RTO的</em>计算方法 - CSDN博客</a></h2><p>5—13        一个UDP用户数据的数据字段为8192季节。在数据链路层要使用以太网来传送。试问应当划分为几个IP数据报片？说明每一个IP数据报字段长度和片偏移字段的值。</p>
<p>答：6个<br>       数据字段的长度：前5个是1480字节，最后一个是800字节。<br>       片偏移字段的值分别是：0，1480，2960，4440，5920和7400.<br><strong>因为UDP用户数据报的数据字段为8192字节，所以数据报文的长度是8192+upd首部8字节=8200。</strong><br>所以第6个数据报片使8200-1480*5=800</p>
<p><strong>注意</strong>：链路层具有最大传输单元<a href="https://www.baidu.com/s?wd=MTU&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1dbPhN9ujT3uhczuhn1Py7W0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPj6knW0dn1bz" target="_blank" rel="external">MTU</a>这个特性，它限制了数据帧的最大长度<br><strong>以太网的MTU为1500字节，一般IP首部为20字节，UDP首部为8字节，数据的净荷（payload）部分预留是1500-20-8=1472字节。如果数据部分大于1472字节，就会出现分片现象。</strong></p>
<hr>
<p>5—23        主机A向主机B连续发送了两个TCP报文段，其序号分别为70和100。试问：<br>（1）      第一个报文段携带了多少个字节的数据？<br>（2）      主机B收到第一个报文段后发回的确认中的确认号应当是多少？<br>（3）      如果主机B收到第二个报文段后发回的确认中的确认号是180，试问A发送的第二个报文段中的数据有多少字节？<br>（4）      如果A发送的第一个报文段丢失了，但第二个报文段到达了B。B在第二个报文段到达后向A发送确认。试问这个确认号应为多少？</p>
<p><strong>解</strong>：（1）第一个报文段的数据序号是70到99，共30字节的数据。<br>（2）确认号应为100.<br>（3）80字节。</p>
<h2 id="（4）70"><a href="#（4）70" class="headerlink" title="（4）70"></a>（4）70</h2><p>5—39        TCP的拥塞窗口cwnd大小与传输轮次n的关系如下所示：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-d77a09fe70d12d11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p> （1）试画出如图5-25所示的拥塞窗口与传输轮次的关系曲线。<br>（2）指明TCP工作在慢开始阶段的时间间隔。<br>（3）指明TCP工作在拥塞避免阶段的时间间隔。<br>（4）在第16轮次和第22轮次之后发送方是通过收到三个重复的确认还是通过超市检测到丢失了报文段？<br>（5）在第1轮次，第18轮次和第24轮次发送时，门限ssthresh分别被设置为多大？<br>（6）在第几轮次发送出第70个报文段？<br>（7）假定在第26轮次之后收到了三个重复的确认，因而检测出了报文段的丢失，那么拥塞窗口cwnd和门限ssthresh应设置为多大？</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-b185b55f5cdae75d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<h2 id="-2"><a href="#-2" class="headerlink" title=""></a><img src="http://upload-images.jianshu.io/upload_images/4340772-7e4f29a5f0b2348c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></h2><p>好了，总结基本到这里了，其实还有很多内容，我只是挑了一些重要的点出来，大家接着复习吧，哈哈！</p>
<hr>
<p>好看的人儿，点个喜欢❤ 你会更好看哦~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-52d53828985a9863.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;计算机网络&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="网络" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>MySQL——修改root密码的4种方法(以windows为例)</title>
    <link href="http://yoursite.com/2017/11/22/MySQL%E2%80%94%E2%80%94%E4%BF%AE%E6%94%B9root%E5%AF%86%E7%A0%81%E7%9A%844%E7%A7%8D%E6%96%B9%E6%B3%95(%E4%BB%A5windows%E4%B8%BA%E4%BE%8B)/"/>
    <id>http://yoursite.com/2017/11/22/MySQL——修改root密码的4种方法(以windows为例)/</id>
    <published>2017-11-22T09:50:33.000Z</published>
    <updated>2018-03-11T17:53:43.073Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/4340772-c71ef5e52855736d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改密码"></p>
<a id="more"></a>
<h3 id="方法1：-用SET-PASSWORD命令"><a href="#方法1：-用SET-PASSWORD命令" class="headerlink" title="方法1： 用SET PASSWORD命令"></a>方法1： 用SET PASSWORD命令</h3><p>首先登录MySQL。<br>格式：<code>mysql&gt; set password for 用户名@localhost = password(&#39;新密码&#39;);</code><br>例子：<code>mysql&gt; set password for root@localhost = password(&#39;123&#39;);</code></p>
<h3 id="方法2：用mysqladmin"><a href="#方法2：用mysqladmin" class="headerlink" title="方法2：用mysqladmin"></a>方法2：用mysqladmin</h3><p>格式：<code>mysqladmin -u用户名 -p旧密码 password 新密码</code><br>例子：<code>mysqladmin -uroot -p123456 password 123</code></p>
<h3 id="方法3：用UPDATE直接编辑user表"><a href="#方法3：用UPDATE直接编辑user表" class="headerlink" title="方法3：用UPDATE直接编辑user表"></a>方法3：用UPDATE直接编辑user表</h3><p>首先登录MySQL。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql&gt; use mysql; </div><div class="line">mysql&gt; update user set password=password(&apos;123&apos;) where user=&apos;root&apos; and host=&apos;localhost&apos;; </div><div class="line">mysql&gt; flush privileges;</div></pre></td></tr></table></figure></p>
<h3 id="方法4：在忘记root密码的时候，可以这样"><a href="#方法4：在忘记root密码的时候，可以这样" class="headerlink" title="方法4：在忘记root密码的时候，可以这样"></a>方法4：在忘记root密码的时候，可以这样</h3><p>以windows为例： </p>
<ol>
<li>关闭正在运行的MySQL服务。 </li>
<li>打开DOS窗口，转到mysql\bin目录。 </li>
<li>输入mysqld –skip-grant-tables 回车。–skip-grant-tables 的意思是启动MySQL服务的时候跳过权限表认证。 </li>
<li>再开一个DOS窗口（因为刚才那个DOS窗口已经不能动了），转到mysql\bin目录。 </li>
<li>输入mysql回车，如果成功，将出现MySQL提示符 &gt;。 </li>
<li>连接权限数据库： use mysql; 。 </li>
<li>改密码：update user set password=password(“123”) where user=”root”;（别忘了最后加分号） 。 </li>
<li>刷新权限（必须步骤）：flush privileges;　。 </li>
<li>退出 quit。 </li>
<li>注销系统，再进入，使用用户名root和刚才设置的新密码123登录。</li>
</ol>
<p>参考转载：</p>
<h2 id="http-www-jb51-net-article-39454-htm"><a href="#http-www-jb51-net-article-39454-htm" class="headerlink" title="http://www.jb51.net/article/39454.htm"></a><a href="http://www.jb51.net/article/39454.htm" target="_blank" rel="external">http://www.jb51.net/article/39454.htm</a></h2><p>好看的人儿，点个喜欢❤ 你会更好看哦~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-c71ef5e52855736d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;修改密码&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>如何用css和js禁止网页选择文字(兼容) 保护版权呢？（附代码）</title>
    <link href="http://yoursite.com/2017/11/14/%E5%A6%82%E4%BD%95%E7%94%A8css%E5%92%8Cjs%E7%A6%81%E6%AD%A2%E7%BD%91%E9%A1%B5%E9%80%89%E6%8B%A9%E6%96%87%E5%AD%97(%E5%85%BC%E5%AE%B9)-%E4%BF%9D%E6%8A%A4%E7%89%88%E6%9D%83%E5%91%A2%EF%BC%9F%EF%BC%88%E9%99%84%E4%BB%A3%E7%A0%81%EF%BC%89/"/>
    <id>http://yoursite.com/2017/11/14/如何用css和js禁止网页选择文字(兼容)-保护版权呢？（附代码）/</id>
    <published>2017-11-14T09:50:33.000Z</published>
    <updated>2018-03-11T19:02:30.462Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>现在有好多人为了省事直接复制他人的文章，从而损害到别人的利益，那么如何从技术上保护呢？</p>
</blockquote>
<p>问： 前端开发css禁止选中文本如何禁止选中文字？？？</p>
<p>禁止选中的方法很简单，有两种方法：JS和CSS两种<br><a id="more"></a></p>
<h3 id="js方法（onselectstart-”return-false-）"><a href="#js方法（onselectstart-”return-false-）" class="headerlink" title="js方法（onselectstart=”return false;）"></a>js方法（onselectstart=”return false;）</h3><p>直接干货<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">if(document.all)&#123;</div><div class="line">    document.onselectstart= function()&#123;return false;&#125;; //for ie</div><div class="line">&#125;else&#123;</div><div class="line">    document.onmousedown= function()&#123;return false;&#125;;</div><div class="line">    document.onmouseup= function()&#123;return true;&#125;;</div><div class="line">&#125;</div><div class="line">document.onselectstart = new Function(&apos;event.returnValue=false;&apos;);</div><div class="line"> </div><div class="line">//劫持开始选择事件和（或）鼠标按下、抬起事件。</div></pre></td></tr></table></figure></p>
<p>简单方法，可以直接在标签里添加<br><code>onselectstart=&quot;return false;</code><br>例子如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;div onselectstart=&quot;return false&quot;&gt;  </div><div class="line">    adasdasdasdasdasdasdad  </div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<h3 id="css方法（user-select）"><a href="#css方法（user-select）" class="headerlink" title="css方法（user-select）"></a>css方法（user-select）</h3><p><strong>user-select</strong>有两个值：</p>
<ul>
<li>none：用户不能选择文本</li>
<li>text：用户可以选择文本<blockquote>
<p>需要注意的是：user-select并不是一个W3C的CSS标准属性，浏览器支持的不完整，需要对每种浏览器进行调整</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">body&#123;</div><div class="line">-moz-user-select: none; /*火狐*/</div><div class="line">-webkit-user-select: none; /*webkit浏览器*/</div><div class="line">-ms-user-select: none; /*IE10*/</div><div class="line">-khtml-user-select: none; /*早期浏览器*/</div><div class="line">user-select: none;</div><div class="line">&#125;</div><div class="line">IE6-9还没发现相关的CSS属性</div><div class="line">//IE6-9</div><div class="line">document.body.onselectstart = document.body.ondrag = function()&#123;</div><div class="line">return false;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<p><a href="https://github.com/HuangCongQing/useful-Demo/blob/master/%E7%A6%81%E6%AD%A2%E7%BD%91%E9%A1%B5%E9%80%89%E6%8B%A9%E6%96%87%E5%AD%97.html" target="_blank" rel="external">附GitHub代码</a></p>
<hr>
<p>好看的人儿，点个喜欢❤ 你会更好看哦~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;现在有好多人为了省事直接复制他人的文章，从而损害到别人的利益，那么如何从技术上保护呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;问： 前端开发css禁止选中文本如何禁止选中文字？？？&lt;/p&gt;
&lt;p&gt;禁止选中的方法很简单，有两种方法：JS和CSS两种&lt;br&gt;
    
    </summary>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Github contribution settings 提交颜色说明（绿的程度）</title>
    <link href="http://yoursite.com/2017/11/12/Github-contribution-settings-%E6%8F%90%E4%BA%A4%E9%A2%9C%E8%89%B2%E8%AF%B4%E6%98%8E%EF%BC%88%E7%BB%BF%E7%9A%84%E7%A8%8B%E5%BA%A6%EF%BC%89/"/>
    <id>http://yoursite.com/2017/11/12/Github-contribution-settings-提交颜色说明（绿的程度）/</id>
    <published>2017-11-12T09:50:33.000Z</published>
    <updated>2018-03-11T17:54:30.702Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/4340772-74f05d2fe3968760.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="颜色深度"></p>
<a id="more"></a>
<p>经常玩github的朋友都知道github有个Your Contributions，每天的contributions 会点亮相应的表格。<br>很多刚玩github对于contribution settings 颜色存有疑问，比如什么时候是深绿色，什么时候是浅绿色。 </p>
<ul>
<li>其实这个跟你<strong>提交的次数</strong>有关的，提交一次的时候就是浅绿，<strong>随着提交次数的增多，颜色也会加深。</strong><br>比如下图：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-299265d9db67127b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ul>
<p>更多知识：<br> <a href="https://segmentfault.com/q/1010000000431610" target="_blank" rel="external">github 的 Your Contributions 是根据什么判断 Myday？</a></p>
<hr>
<p>好看的人儿，点个喜欢❤ 你会更好看哦~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-74f05d2fe3968760.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;颜色深度&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="GitHub" scheme="http://yoursite.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>xgboost python包的完美安装（附包链接）</title>
    <link href="http://yoursite.com/2017/10/27/xgboost-python%E5%8C%85%E7%9A%84%E5%AE%8C%E7%BE%8E%E5%AE%89%E8%A3%85%EF%BC%88%E9%99%84%E5%8C%85%E9%93%BE%E6%8E%A5%EF%BC%89/"/>
    <id>http://yoursite.com/2017/10/27/xgboost-python包的完美安装（附包链接）/</id>
    <published>2017-10-27T09:50:33.000Z</published>
    <updated>2018-03-11T17:52:35.315Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>在<a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#xgboost网站上找到xgboost现成的whl文件" target="_blank" rel="external">http://www.lfd.uci.edu/~gohlke/pythonlibs/#xgboost网站上找到xgboost现成的whl文件</a></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-6f8312b56bff72ec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><a id="more"></a></p>
<ul>
<li>进入’C:\Users\hasee\AppData\Local\Programs\Python\Python35\Scripts’目录下执行</li>
</ul>
<p><code>pip install &quot;C:\Users\hasee\AppData\Local\Programs\Python\Python35\Scripts&quot;</code></p>
<p><strong>注意：安装包要用英文状态下的双引号括住</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-f5e168e1b09127f5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>好了，这样就成功了！</p>
<hr>
<p>运行<code>import xgboost</code>出现警告，不知怎么回事，望见过此错误的能回答一下呀？：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.</div><div class="line"> &quot;This module will be removed in 0.20.&quot;, DeprecationWarning)</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-adc7cb06467f957f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<hr>
<p>扩展阅读：<br><a href="http://blog.csdn.net/sb19931201/article/details/52557382" target="_blank" rel="external">xgboost入门与实战（原理篇）</a><br><a href="https://bulvbuting.github.io/2017/02/23/xgboost.html" target="_blank" rel="external">python xgboost 运行异常</a><br><a href="http://blog.csdn.net/u010035907/article/details/70195429?locationNum=15&amp;fps=1" target="_blank" rel="external">在windows 10环境下安装xgboost</a><br><a href="https://bulvbuting.github.io/2017/02/23/xgboost.html" target="_blank" rel="external">python <em>xgboost</em> 运行异常 | ZL</a></p>
<hr>
<p>好看的人儿，点个喜欢❤ 你会更好看哦~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;在&lt;a href=&quot;http://www.lfd.uci.edu/~gohlke/pythonlibs/#xgboost网站上找到xgboost现成的whl文件&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.lfd.uci.edu/~gohlke/pythonlibs/#xgboost网站上找到xgboost现成的whl文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-6f8312b56bff72ec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>最新版-windows安装TensorFlow（踩了多少坑）（附下载链接）</title>
    <link href="http://yoursite.com/2017/10/26/%E6%9C%80%E6%96%B0%E7%89%88-windows%E5%AE%89%E8%A3%85TensorFlow%EF%BC%88%E8%B8%A9%E4%BA%86%E5%A4%9A%E5%B0%91%E5%9D%91%EF%BC%89%EF%BC%88%E9%99%84%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%EF%BC%89/"/>
    <id>http://yoursite.com/2017/10/26/最新版-windows安装TensorFlow（踩了多少坑）（附下载链接）/</id>
    <published>2017-10-26T09:50:33.000Z</published>
    <updated>2018-03-11T17:52:55.394Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>摘要: 利用Anaconda安装python环境，并安装TensorFlow</p>
</blockquote>
<p>网上有很多之类的文章，但是还是会很难安装成功,根据网上的及自己的经验，其间跳坑无数，摔得遍体鳞伤，曾一度怀疑自己廉颇老矣。最终吐血总结出来这篇博文，希望对大家有帮助！<br>先说下我的电脑是<strong>win7,64位系统，支持</strong>（tensorflow在windows下只支持python 3.5以上、amd64）<br><a id="more"></a></p>
<h3 id="大致步骤"><a href="#大致步骤" class="headerlink" title="大致步骤"></a>大致步骤</h3><ul>
<li>先安装Anaconda（<strong>利用Anaconda创建python35的环境</strong>）</li>
<li>安装CUDA,CUDNN（GPU运行要用到）</li>
<li>安装 TensorFlow</li>
</ul>
<h3 id="什么是-Anaconda？"><a href="#什么是-Anaconda？" class="headerlink" title="什么是 Anaconda？"></a>什么是 Anaconda？</h3><blockquote>
<p>Anaconda is the leading open data science platform powered by Python.<br>Anaconda 是一个由 Python 语言编写领先的开放数据科学平台</p>
</blockquote>
<h3 id="神魔是cuDnn和CUDA"><a href="#神魔是cuDnn和CUDA" class="headerlink" title="神魔是cuDnn和CUDA"></a>神魔是cuDnn和CUDA</h3><p><a href="http://blog.csdn.net/fangjin_kl/article/details/53906874" target="_blank" rel="external">CPU、GPU、CUDA，CuDNN 简介</a></p>
<h3 id="什么是-TensorFlow？"><a href="#什么是-TensorFlow？" class="headerlink" title="什么是 TensorFlow？"></a>什么是 TensorFlow？</h3><blockquote>
<p>TensorFlow is an open source software library for numerical computation using data flow graphs.<br>TensorFlow是一个开源软件库，用于使用数据流图进行数值计算。</p>
</blockquote>
<h3 id="具体安装步骤"><a href="#具体安装步骤" class="headerlink" title="具体安装步骤"></a>具体安装步骤</h3><p>####1. 下载 Anaconda<br><strong>tensorflow在windows下只支持python 3.5以上、amd64</strong></p>
<p>Anaconda3-4.2.0-Windows-x86_64.exe<br>由于国外网站下载极慢，给下百度链接：<a href="http://pan.baidu.com/s/1jHNoIwu" target="_blank" rel="external">http://pan.baidu.com/s/1jHNoIwu</a> 密码：uvbg<br>Anaconda安装过程见下面教程（只需看到Anaconda这一步就行）<br><a href="http://blog.csdn.net/ztf312/article/details/56018891" target="_blank" rel="external">【<em>Tensorflow</em>】Windows下基于<em>Anaconda</em>的<em>Tensorflow</em>环境…_CSDN博客</a></p>
<h3 id="2-1-安装CUDA（为了GPU）"><a href="#2-1-安装CUDA（为了GPU）" class="headerlink" title="2.1 安装CUDA（为了GPU）"></a>2.1 安装CUDA（为了GPU）</h3><p>cuda_8.0.61_windows.exe<br>链接：<a href="http://pan.baidu.com/s/1c2cZPNM" target="_blank" rel="external">http://pan.baidu.com/s/1c2cZPNM</a> 密码：o9x2<br>下面是安装步骤<br><a href="http://blog.csdn.net/jiugeshao/article/details/76370137" target="_blank" rel="external">win7 CUDA8.0下tensorflow gpu版环境搭配(亲测）</a><br>重新启动计算机。至此，cuda的安装就搞定了。</p>
<h3 id="2-2-安装CUDNN（这里只有win10和win7安装包）（为了GPU）"><a href="#2-2-安装CUDNN（这里只有win10和win7安装包）（为了GPU）" class="headerlink" title="2.2 安装CUDNN（这里只有win10和win7安装包）（为了GPU）"></a>2.2 安装CUDNN（这里只有win10和win7安装包）（为了GPU）</h3><p>cudnn-8.0-windows7-x64-v6.0.zip<br>win7链接：<a href="http://pan.baidu.com/s/1o8qmH7c" target="_blank" rel="external">http://pan.baidu.com/s/1o8qmH7c</a> 密码：l9zm<br>wn10链接：<a href="http://pan.baidu.com/s/1pLmhiqR" target="_blank" rel="external">http://pan.baidu.com/s/1pLmhiqR</a> 密码：puk1<br>安装步骤：<br><a href="http://blog.csdn.net/jiugeshao/article/details/76370137" target="_blank" rel="external">http://blog.csdn.net/jiugeshao/article/details/76370137</a><br>              <a href="http://blog.csdn.net/jiugeshao/article/details/76370137" target="_blank" rel="external">win7 CUDA8.0下tensorflow gpu版环境搭配(亲测）</a></p>
<p>####3.安装 TensorFlow<br>目前Google的TensorFlow是增加了Windows版本的支持，以前是只有Linux和MacOs版本。好了，那么我们就按照官方文档来安装吧。</p>
<p>首先在安装上有2个区分，如果<strong>你电脑支持GPU（一般都支持）</strong>，那么你可以安装GPU版本，如果你的电脑不支持GPU，那么安装CPU版本。</p>
<p>先看看GPU版本需要多安装哪些。需要安装下面这2个驱动。</p>
<ul>
<li>CPU版本命令输入：(不建议)</li>
</ul>
<p><code>pip3 install --upgrade tensorflow</code></p>
<ul>
<li>GPU版本命令输入：（<strong>用此方法安装，运行代码速度快的多</strong>）</li>
</ul>
<p><code>pip3 install --upgrade tensorflow-gpu</code></p>
<p>如下图：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-4e14fe375b52efae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="如图：pip3 install --upgrade tensorflow-gpu "></p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>安装完后shell进入,输入<code>python</code>回车<br>输入<code>import tensorflow</code>试试，没报错，就证明可以</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-cfe10cbf953edded.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="耶，可以好好玩tensorflow"><a href="#耶，可以好好玩tensorflow" class="headerlink" title="耶，可以好好玩tensorflow!"></a>耶，可以好好玩tensorflow!</h2><p>可参考：<br><a href="https://zhuanlan.zhihu.com/p/25340037" target="_blank" rel="external">如何安装<em>支持GPU</em>运算的<em>TensorFlow</em> 1.0? - 知乎专栏</a><br><a href="http://blog.csdn.net/roach_zfq/article/details/78121743" target="_blank" rel="external">ubuntu16.04+cuda8.0+cudnn6+tensorflow安装</a><br><a href="http://blog.csdn.net/u010417185/article/details/51899364" target="_blank" rel="external">Tensorflow常见错误</a><br><a href="http://www.cnblogs.com/shihuc/p/6593041.html" target="_blank" rel="external">安装tensorflow，那叫一个坑啊</a><br><a href="http://blog.csdn.net/jasonzzj/article/details/53490674" target="_blank" rel="external">在Windows下直接安装Tensorflow的Windows版本</a><br><a href="http://blog.csdn.net/ztf312/article/details/56018891" target="_blank" rel="external">【<em>Tensorflow</em>】Windows下基于<em>Anaconda</em>的<em>Tensorflow</em>环境…_CSDN博客</a><br><a href="http://blog.csdn.net/u010858605/article/details/64128466" target="_blank" rel="external">Win10下用<em>Anaconda安装TensorFlow</em>- CSDN博客</a></p>
<hr>
<p>好看的人儿，点个喜欢❤ 你会更好看哦~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要: 利用Anaconda安装python环境，并安装TensorFlow&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;网上有很多之类的文章，但是还是会很难安装成功,根据网上的及自己的经验，其间跳坑无数，摔得遍体鳞伤，曾一度怀疑自己廉颇老矣。最终吐血总结出来这篇博文，希望对大家有帮助！&lt;br&gt;先说下我的电脑是&lt;strong&gt;win7,64位系统，支持&lt;/strong&gt;（tensorflow在windows下只支持python 3.5以上、amd64）&lt;br&gt;
    
    </summary>
    
    
      <category term="TensorFlow" scheme="http://yoursite.com/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow版本更新后运行代码所遇到的error（持续更新）</title>
    <link href="http://yoursite.com/2017/10/25/TensorFlow%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E5%90%8E%E8%BF%90%E8%A1%8C%E4%BB%A3%E7%A0%81%E6%89%80%E9%81%87%E5%88%B0%E7%9A%84error%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
    <id>http://yoursite.com/2017/10/25/TensorFlow版本更新后运行代码所遇到的error（持续更新）/</id>
    <published>2017-10-25T09:50:33.000Z</published>
    <updated>2018-03-11T17:49:16.971Z</updated>
    
    <content type="html"><![CDATA[<p>本博客会<strong>持续更新</strong>，如果遇到新的问题，欢迎大家提问，大家一起进步！</p>
<h2 id="AttributeError-module-‘tensorflow’-has-no-attribute-‘mul’"><a href="#AttributeError-module-‘tensorflow’-has-no-attribute-‘mul’" class="headerlink" title="AttributeError: module ‘tensorflow’ has no attribute ‘mul’"></a>AttributeError: module ‘tensorflow’ has no attribute ‘mul’</h2><p><img src="http://upload-images.jianshu.io/upload_images/4340772-1c99e17cc1b70071.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><a id="more"></a></p>
<ul>
<li>原因：TensorFlow 发布的新版本的 API 修改了<br><strong>tf.mul, tf.sub and tf.neg are deprecated in favor of tf.multiply, tf.subtract and tf.negative.</strong></li>
<li>解决方法：使用时将 tf.mul 改成 tf.multiply 即可<br>其余的 tf.sub 和 tf.neg 也要相应修改为 tf.subtract 和 tf.negative。</li>
</ul>
<hr>
<p>相關學習：<br><a href="http://www.infoq.com/cn/news/2017/08/changes-tensorflow-1-3" target="_blank" rel="external">Tensorflow 1.3版本更新概览</a></p>
<h2 id="windows-tensorflow-版本与升级"><a href="#windows-tensorflow-版本与升级" class="headerlink" title="windows tensorflow 版本与升级"></a><a href="http://blog.csdn.net/lanchunhui/article/details/72892258" target="_blank" rel="external">windows tensorflow 版本与升级</a></h2><p>好看的人儿，点个喜欢❤ 你会更好看哦~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本博客会&lt;strong&gt;持续更新&lt;/strong&gt;，如果遇到新的问题，欢迎大家提问，大家一起进步！&lt;/p&gt;
&lt;h2 id=&quot;AttributeError-module-‘tensorflow’-has-no-attribute-‘mul’&quot;&gt;&lt;a href=&quot;#AttributeError-module-‘tensorflow’-has-no-attribute-‘mul’&quot; class=&quot;headerlink&quot; title=&quot;AttributeError: module ‘tensorflow’ has no attribute ‘mul’&quot;&gt;&lt;/a&gt;AttributeError: module ‘tensorflow’ has no attribute ‘mul’&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-1c99e17cc1b70071.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="TensorFlow" scheme="http://yoursite.com/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow版本-如何更新？（踩坑版）</title>
    <link href="http://yoursite.com/2017/10/25/TensorFlow%E7%89%88%E6%9C%AC-%E5%A6%82%E4%BD%95%E6%9B%B4%E6%96%B0%EF%BC%9F%EF%BC%88%E8%B8%A9%E5%9D%91%E7%89%88%EF%BC%89/"/>
    <id>http://yoursite.com/2017/10/25/TensorFlow版本-如何更新？（踩坑版）/</id>
    <published>2017-10-25T09:50:33.000Z</published>
    <updated>2018-03-11T17:51:31.977Z</updated>
    
    <content type="html"><![CDATA[<p>2017/10/26,我的tensorflow是从0.12版本升级到最新版本（1.3）的，基于python3.5的</p>
<h3 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h3><p>升级很简单（在这里感谢一下为简化 TensorFlow 安装过程的工程师们），就是一行语句，这也是安装命令：<br>对于 GPU 版本：<br><code>pip3 install --upgrade tensorflow-gpu</code></p>
<p>对于 CPU 版本：<br><code>pip3 install --upgrade tensorflow</code><br><img src="http://upload-images.jianshu.io/upload_images/4340772-85596acfd641e49f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="版本更新前"><br><a id="more"></a><br><img src="http://upload-images.jianshu.io/upload_images/4340772-ca31f64b6f27bf22.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="版本更新后"></p>
<h3 id="可能踩得坑！！"><a href="#可能踩得坑！！" class="headerlink" title="可能踩得坑！！"></a>可能踩得坑！！</h3><p>说到命令行，大家可能习惯性的就敲个cmd进去了。但是如果就这么简单的输入命令开始安装，会发现整个下载过程非常顺利，但是到了安装步骤的时候就出现异常了。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-4c55433be4520df4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><strong>最关键的错误在最后两行：PermissionError: [WinError 5] 拒绝访问。 涉及到权限问题了。 </strong></p>
<p>暗红色的报错信息洋洋洒洒一整屏，最后还有一个换色的提示，说pip已经有9了建议升级，看到这个可能会被带到另外一个沟里，以为是pip版本太低导致的。实际上最关键的错误在最后两行：PermissionError: [WinError 5] 拒绝访问。 涉及到权限问题了。<br>我们知道win7开始有严格的用户账户控制，大部分安装程序在安装的时候都会跳出对话框让你授权。这给系统安全带来了好处，但是也会带来一些莫名其妙的问题（之前写过一篇关于win7下装oracle10g，其中一个坑也是用户账户控制带来的）。出现这种情况一般两种情况：1、降低用户账户控制级别 2、用更高的权限来运行程序。我个人反对前者，<strong>建议从开始菜单中找到Windows PowerShell，然后从右击菜单中选择以管理员身份运行</strong>。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-6105b576a50120a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="打开power shell"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-237e5b58eb81d3cf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>好了，终于可以啦！！如果遇到其他问题，欢迎大家提问！</p>
<hr>
<p>参考：<br><a href="http://blog.csdn.net/u010099080/article/details/55260055" target="_blank" rel="external">【TensorFlow | 升级】TensorFlow 1.0 发布</a><br><a href="http://blog.csdn.net/u010682375/article/details/72587962" target="_blank" rel="external">Tensorflow升级1.0版本</a></p>
<h2 id="win10安装TensorFlow填坑笔记"><a href="#win10安装TensorFlow填坑笔记" class="headerlink" title="win10安装TensorFlow填坑笔记"></a><a href="http://blog.csdn.net/chewinggum/article/details/70373098" target="_blank" rel="external">win10安装TensorFlow填坑笔记</a></h2><p>好看的人儿，点个喜欢❤ 你会更好看哦~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2017/10/26,我的tensorflow是从0.12版本升级到最新版本（1.3）的，基于python3.5的&lt;/p&gt;
&lt;h3 id=&quot;升级&quot;&gt;&lt;a href=&quot;#升级&quot; class=&quot;headerlink&quot; title=&quot;升级&quot;&gt;&lt;/a&gt;升级&lt;/h3&gt;&lt;p&gt;升级很简单（在这里感谢一下为简化 TensorFlow 安装过程的工程师们），就是一行语句，这也是安装命令：&lt;br&gt;对于 GPU 版本：&lt;br&gt;&lt;code&gt;pip3 install --upgrade tensorflow-gpu&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对于 CPU 版本：&lt;br&gt;&lt;code&gt;pip3 install --upgrade tensorflow&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-85596acfd641e49f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;版本更新前&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="TensorFlow" scheme="http://yoursite.com/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>coursera视频无法播放（翻墙也无效）？看这里就全懂了</title>
    <link href="http://yoursite.com/2017/09/17/coursera%E8%A7%86%E9%A2%91%E6%97%A0%E6%B3%95%E6%92%AD%E6%94%BE%EF%BC%88%E7%BF%BB%E5%A2%99%E4%B9%9F%E6%97%A0%E6%95%88%EF%BC%89%EF%BC%9F%E7%9C%8B%E8%BF%99%E9%87%8C%E5%B0%B1%E5%85%A8%E6%87%82%E4%BA%86/"/>
    <id>http://yoursite.com/2017/09/17/coursera视频无法播放（翻墙也无效）？看这里就全懂了/</id>
    <published>2017-09-17T09:50:33.000Z</published>
    <updated>2018-03-11T17:30:43.659Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/4340772-b5cbc22de794143d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Coursera"></p>
<blockquote>
<p>Coursera是国外的一款非常有名的公开课网站，值得大家一起学习,但有时候要在coursera上看个课程，发现看不了，爬墙各种方法都试了，特意在网上搜集了解决方案，亲测有效，现在特意记录下来，希望能帮到你。好好学习，天天向上。</p>
</blockquote>
<p>该方法针对Windows用户(<strong>win7，win8，win10</strong>)，亲测有效。<strong>Mac电脑</strong>的可参考我最后发的链接<br><a id="more"></a></p>
<ol>
<li>用管理员权限记事本打开host文件，地址如下: <code>C:\Windows\System32\drivers\etc</code>，（以文本格式打开hosts就好）</li>
</ol>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-35d38c5130f91d51.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="hosts"></p>
<ol>
<li>将如下内容复制到文件末尾<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">52.84.246.90    d3c33hcgiwev3.cloudfront.net</div><div class="line">52.84.246.252    d3c33hcgiwev3.cloudfront.net</div><div class="line">52.84.246.144    d3c33hcgiwev3.cloudfront.net</div><div class="line">52.84.246.72    d3c33hcgiwev3.cloudfront.net</div><div class="line">52.84.246.106    d3c33hcgiwev3.cloudfront.net</div><div class="line">52.84.246.135    d3c33hcgiwev3.cloudfront.net</div><div class="line">52.84.246.114    d3c33hcgiwev3.cloudfront.net</div><div class="line">52.84.246.90    d3c33hcgiwev3.cloudfront.net</div><div class="line">52.84.246.227    d3c33hcgiwev3.cloudfront.net</div></pre></td></tr></table></figure>
</li>
</ol>
<p>如下图：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-a389baea939beb8f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="解决DNS污染"></p>
<ol>
<li>打开cmd命令行，输入如下命令<br><code>ipconfig/flushdns</code></li>
</ol>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-36fdba9a9a223084.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ipconfig/flushdns"></p>
<ol>
<li>刷新页面即可，终于可以看视频啦</li>
</ol>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-0310da00d6088fa3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="看看看"></p>
<p>参考链接：<br><a href="http://www.baidu.com/link?url=f9TFhOk7zUavTew3dtbGN0XmdvRtgX6RQAcSG58fWFvWdJb0FjDbEX1pr1PQWGibzLMTrLmodUcwSRqDzAUjt_" target="_blank" rel="external"><em>coursera 视频</em>总是缓冲或者<em>无法观看</em>,有什么方法解决? - 知乎</a><br><a href="http://blog.csdn.net/sinat_15443203/article/details/71694554" target="_blank" rel="external">coursera无法观看视频解决方法</a><br><a href="https://jingyan.baidu.com/article/6f2f55a14059eeb5b93e6cab.html" target="_blank" rel="external">Coursera无法观看课程解决方案-百度经验</a></p>
<h2 id="Mac和windows国内coursera官网看不了视频怎么办"><a href="#Mac和windows国内coursera官网看不了视频怎么办" class="headerlink" title="Mac和windows国内coursera官网看不了视频怎么办**"></a><a href="http://jingyan.baidu.com/article/e6c8503c5ea596e54f1a18a8.html" target="_blank" rel="external">Mac和windows国内coursera官网看不了视频怎么办</a>**</h2><p>好看的人儿，点个喜欢❤ 你会更好看哦~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-b5cbc22de794143d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Coursera&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Coursera是国外的一款非常有名的公开课网站，值得大家一起学习,但有时候要在coursera上看个课程，发现看不了，爬墙各种方法都试了，特意在网上搜集了解决方案，亲测有效，现在特意记录下来，希望能帮到你。好好学习，天天向上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该方法针对Windows用户(&lt;strong&gt;win7，win8，win10&lt;/strong&gt;)，亲测有效。&lt;strong&gt;Mac电脑&lt;/strong&gt;的可参考我最后发的链接&lt;br&gt;
    
    </summary>
    
    
      <category term="技术杂谈" scheme="http://yoursite.com/tags/%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%88/"/>
    
      <category term="coursera" scheme="http://yoursite.com/tags/coursera/"/>
    
  </entry>
  
  <entry>
    <title>25分钟学会使用MySQL基本操作</title>
    <link href="http://yoursite.com/2017/09/17/25%E5%88%86%E9%92%9F%E5%AD%A6%E4%BC%9A%E4%BD%BF%E7%94%A8MySQL%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2017/09/17/25分钟学会使用MySQL基本操作/</id>
    <published>2017-09-17T09:50:33.000Z</published>
    <updated>2018-03-11T17:29:11.185Z</updated>
    
    <content type="html"><![CDATA[<p>###1 MySQL登录与退出</p>
<ul>
<li><p>MySQL登陆<br><code>MySQL 参数</code>(在cmd命令框中输入)</p>
</li>
<li><p>登陆MySql<br><code>mysql -uroot -p -P3306 -h127.0.0.1</code></p>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-7c1ec9cb6fcb9921.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mysql -uroot -p -P3306 -h127.0.0.1"><br><a id="more"></a><br><img src="http://upload-images.jianshu.io/upload_images/4340772-6b56090b52efc767.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mysql 参数"></p>
<ul>
<li>MySql退出<br><img src="http://upload-images.jianshu.io/upload_images/4340772-5a2dd466d42f95ee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="退出"></li>
<li>MySQL修改root密码</li>
</ul>
<p><a href="http://www.jb51.net/article/39454.htm" target="_blank" rel="external">MySQL修改root密码链接
</a></p>
<h3 id="2-修改MySQL提示符及语法规范"><a href="#2-修改MySQL提示符及语法规范" class="headerlink" title="2  修改MySQL提示符及语法规范"></a>2  修改MySQL提示符及语法规范</h3><p>先说一个小技巧，cmd命令框清屏用<code>cls</code></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-ea34478e4f1030e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="cls清屏"></p>
<p>首先说一下神魔是MySql提示符？看下面图就懂了</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-fa496e99df25a6a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="MySQL提示符"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-13cf08b40ca40733.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改MySql提示符"></p>
<ul>
<li>连接客户端即登录时通过参数指定<br><code>mysql -uroot -proot --prompt 提示符</code></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-86199cda8dac41ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mysql -uroot -p -P3306 -h127.0.0.1 --prompt 提示符"></p>
<ul>
<li>连接上客户端后，通过prompt命令修改<br><code>prompt  提示符</code></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-577a3f68f16f5150.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="prompt"></p>
<p>下面是MySql具体可更更改的操作</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-64b55a857963e5c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="\D\d\h\u"><br><code>PROMPT \u@\h \d</code>  修改为用户名@主机名 数据库名称</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-798f09b8a1438de4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h3 id="3-MySQL常用命令"><a href="#3-MySQL常用命令" class="headerlink" title="3 MySQL常用命令"></a>3 MySQL常用命令</h3><p><img src="http://upload-images.jianshu.io/upload_images/4340772-936a9fabf9a0af5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="常用命令"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-bc08f795b85880b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="实例"></p>
<h3 id="4-MySQL语句规范"><a href="#4-MySQL语句规范" class="headerlink" title="4 MySQL语句规范"></a>4 MySQL语句规范</h3><p><img src="http://upload-images.jianshu.io/upload_images/4340772-c25a2befce1ae7dc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="语句规范"><br>特别注意分号，因为不加分号，这段语句不执行，如下图</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-e9ab52531a4419b2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=";"></p>
<h3 id="5-数据库操作"><a href="#5-数据库操作" class="headerlink" title="5 数据库操作"></a>5 数据库操作</h3><p>{}必选项，[]可选项</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-59cae233ede058c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-e1ca842ee156e56f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="CREATE DATABASE 数据库名"></p>
<p>数据库怎么看呢？<br>当前服务器下到底有多少数据库(正确安装之后，默认有四个数据库)<br><code>show DATABASES</code><br><img src="http://upload-images.jianshu.io/upload_images/4340772-56c467cc0a19e478.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Database lists"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-4d2fda01dbf809ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="show DATABASES"></p>
<ul>
<li>创建数据库编码方式是什么？不加，默认是配置文件设置的编码方式</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-c8a8ebaca6a6c4d3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="utf8"></p>
<ul>
<li>如果想创建一个GBK的编码方式的数据库怎么来？<br><code>CREATE DATABASE IF NOT EXISTS Hello2 CHARACTER SET gbk</code><br><img src="http://upload-images.jianshu.io/upload_images/4340772-01ba35bd92c4e8df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ul>
<ul>
<li>修改数据库<ul>
<li>修改编码方式<br><code>ALTER DATABASE Hello2 CHARACTER  SET utf8</code></li>
</ul>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-8c9da553a5117bca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-7933a1ab59c861d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>删除数据库<br>DROP DATABASE 数据库名</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-987b749ee414e464.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="drop DATABASE"></p>
<p>基本操作就这样了！<br>回顾下重点：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-71ef9c3830a0f69f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="重点"></p>
<h2 id="对了，还要说下，写SQL每句语句的后面，一定要加分号-哦！！"><a href="#对了，还要说下，写SQL每句语句的后面，一定要加分号-哦！！" class="headerlink" title="对了，还要说下，写SQL每句语句的后面，一定要加分号 ;哦！！"></a>对了，还要说下，写SQL每句语句的后面，一定要加<strong>分号 ;</strong>哦！！</h2><ul>
<li>可参考的常用命令链接：</li>
</ul>
<p><a href="http://www.cnblogs.com/hateislove214/archive/2010/11/05/1869889.html" target="_blank" rel="external">MYSQL常用命令</a><br><a href="https://www.baidu.com/link?url=OasvgcmO7JPV5_IhO4prskNhbV7VpGAggdekFmJdt95uBgezFkZcocFE3x5tK4xdL8-WjXhp9qBvsWoivigkLGPF_hgwGkBB5B4U1fIhVcW&amp;wd=&amp;eqid=a07b6514000420a70000000559bdc633" target="_blank" rel="external"><em>Mysql命令</em>大全 - 宁静.致远 - 博客园</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###1 MySQL登录与退出&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;MySQL登陆&lt;br&gt;&lt;code&gt;MySQL 参数&lt;/code&gt;(在cmd命令框中输入)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;登陆MySql&lt;br&gt;&lt;code&gt;mysql -uroot -p -P3306 -h127.0.0.1&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-7c1ec9cb6fcb9921.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;mysql -uroot -p -P3306 -h127.0.0.1&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>吴恩达-神经网络和深度学习（ 第三周 浅层神经网络：）</title>
    <link href="http://yoursite.com/2017/09/14/%E5%90%B4%E6%81%A9%E8%BE%BE-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%92%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%88-%E7%AC%AC%E4%B8%89%E5%91%A8--%E6%B5%85%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%9A%EF%BC%89/"/>
    <id>http://yoursite.com/2017/09/14/吴恩达-神经网络和深度学习（-第三周--浅层神经网络：）/</id>
    <published>2017-09-14T09:50:33.000Z</published>
    <updated>2018-03-11T17:28:02.378Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>学习使用前向传播和反向传播搭建出有一个隐藏层的神经网络。</p>
</blockquote>
<ul>
<li>hidden layer Neural Network</li>
</ul>
<p>###3.1  神经网络概览</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-9d7700eb910aea5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Neutral Network"></p>
<a id="more"></a>
<p>###3.2  神经网络表示</p>
<ul>
<li>双层神经网络（只有一个隐藏层，单隐层神经网络）</li>
<li>输入层-四个隐藏层单元-输出层</li>
<li>双层神经网络。不把输入层看做一个标准的层 </li>
<li>这里的隐藏层有两个相关的参数w和b,使用上标[1]表示这些参数，w是4x3矩阵,b是4x1向量（4代表有四个节点或者隐藏单元，3来自于3个输入特征）</li>
<li>输出层也有相关的参数w^[2]  (1x4,隐藏层有四个隐藏单元，输出层只有一个单元),b^[2]【1x1】</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-bebf4cc9908dab48.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="神经网络表示"></p>
<p>###3.3  计算神经网络的输出</p>
<blockquote>
<p>gengrate 生成<br>compute 计算<br>matrix 矩阵</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-986017821bad5a5f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-efce896fa844db88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<ul>
<li>神经网络只不过是计算这些步骤很多次</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-fd26de856acca219.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-45e07aeec5b0a344.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>###3.4  多个例子中的向量化</p>
<blockquote>
<p>训练样本横向堆叠构成矩阵X</p>
</blockquote>
<ul>
<li>m个训练样本</li>
<li>用激活函数来表示这些式子<code>a^[2](i)</code>【i是训练样本i,2指的是第二层】</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-449861dd7dee81f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<ul>
<li>一个for循环遍历所有的m训练样本</li>
<li>向量化</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-cc5e1fa3aaa3d854.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>###3.5  向量化实现的解释</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-cd2684cca6922347.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>这就是对不同训练样本向量化的神经网络，接下来，我们目前为止我们一直都是用sigmoid函数</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-4ae6e75a8b9b04ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>###3.6  激活函数（activation function）</p>
<blockquote>
<p>如何使用不同种类的激活函数，simoid只是其中的一个可能选择</p>
</blockquote>
<ul>
<li>为了搭建神经网络，可以选择的是选择隐层里用哪个激活函数，还有神经网络的输出单元用什么激活函数<br>有一个函数总比sigmoid函数表现好，那就是a=tanh(z)（双曲正切函数），<br>函数介于+1和-1之间，意味着激活函数的平均值更接近0</li>
</ul>
<p>但 二分分类是，输出层最好用sigmoid,因为y输出介于0-1更合理</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-4f9007ef5b15cf2e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>不过，sigmoid和tanh函数都有一个缺点，如果z非常大，或非常小，函数的斜率很接近0，这样会拖慢梯度下降算法</p>
<p>修正线性单元（ReLU）就派上用场了（z为正，斜率为1，为负，斜率为0）</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-baf970658fb23bc6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>在选择激活函数时有一些经验法则</p>
<ul>
<li>如果你的输出值是0或1，如果你在做二元分类，那么sigmoid很适合作为输出层的激活函数，然后其他所有单元都用ReUL。<br>如果你不确定隐层应该用哪个，那就用ReUL作为激活函数</li>
</ul>
<p>还有个带泄露的ReUL（z小于0是有一个缓缓的斜率，）通常比ReUL激活函数好，不过实际中使用的频率没那么高</p>
<p>在实践中使用ReUL激活函数，学习速度通常会快得多，比使用tanh或sigmoid激活函数快得多，因为ReUL没有函数斜率接近0时，减慢学习速度的学习速度的效应</p>
<p>说一下几个激活函数</p>
<ul>
<li><p>sigmoid<br>除非用在二元分类的输出层，不然绝对不要用，或者几乎从来不会用</p>
</li>
<li><p>最常用的默认激活函数ReLU，不确定用哪个，就用这个，或者带泄露的ReLU（max(0.01z, z)）</p>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-a12eb94021d55e07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>###3.7  为什么需要非线性激活函数（nonlinear activation function）？</p>
<p>如果用线性激活函数（linear activation function）或者叫做恒等激活函数，那么神经网络只是把输入线性组合再输出，<br>无论你的神经网络多少层，一直在做的只是计算线性激活函数，和没有任何的标准Logistic回归是一样的，因为两个线性函数组合的本身就是线性函数，除非你引用非线性，</p>
<ul>
<li>只有一个地方可以使用线性激活函数g（z） = z，就是你要机器学习的是回归问题，所以y是一个实数，</li>
<li>线性激活函数不可能用在隐藏层（除压缩），要用，也是用在输出层，<br><img src="http://upload-images.jianshu.io/upload_images/4340772-eddcd1e14e9259c8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></li>
</ul>
<p>###3.8  激活函数的导数</p>
<p>接下来讨论梯度下降的基础，如何估计，如何计算单个激活函数的导数，斜率，</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-14b2e0de1b445a63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-6e9e705bcb8f3e77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-90a6b87258f2585e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-efaa0dcfff5f9aa0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>###3.9  神经网络的梯度下降法<br>梯度下降算法的具体实现，如何处理单隐层神经网络，<br>提供所需的方程，来实现反向传播，或者说梯度下降算法，</p>
<p>keepdims = true(确保python输出的是矩阵)</p>
<ul>
<li>正向传播 4个方程</li>
<li>反向传播 6个方程</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-a29e026c3008e8cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>###3.10  （选修）直观理解反向传播</p>
<p>###3.11  随机初始化</p>
<p>当你训练神经网络时，随机初始化权重非常重要，对于logistic回归，可以将权重初始化为零，<br>但如果将神经网络各参数数组初始化为0，再使用梯度下降算法（gredient descent），那会完全失效</p>
<p>因为我们需要两个不同的隐藏单元，去计算不同的函数，<strong>这个问题的解决方案是随机初始化所有参数，</strong></p>
<ul>
<li>可以令W^[1] = np.random,randn, 这可以产生参数为（2， 2）的高斯分布随机变量，然后你再乘以一个很小的数字【因为通常喜欢把权重矩阵初始化非常小的随机数】，所有你将权重初始化很小的随机数，</li>
<li>如果训练单隐层神经网络时，没有太多的隐藏层，设为0.01还可以，但当训练一个很深的神经网络时，可能要试试0.01以外的常数，</li>
<li>把b初始化0是可以的</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-4f5e7d7d5861f341.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="随机初始化"></p>
<blockquote>
<p>所以，在这周的视频里，你知道如何设立单隐层神经网络，初始化参数，并用正向传播计算预测值，还有计算导数，然后使用梯度下降，反向传播</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;学习使用前向传播和反向传播搭建出有一个隐藏层的神经网络。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;hidden layer Neural Network&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;###3.1  神经网络概览&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-9d7700eb910aea5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Neutral Network&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="神经网络" scheme="http://yoursite.com/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
      <category term="深度学习" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>看透神经网络和深度学习的脉络，终于不迷糊了</title>
    <link href="http://yoursite.com/2017/09/09/%E7%9C%8B%E9%80%8F%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%92%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E8%84%89%E7%BB%9C%EF%BC%8C%E7%BB%88%E4%BA%8E%E4%B8%8D%E8%BF%B7%E7%B3%8A%E4%BA%86/"/>
    <id>http://yoursite.com/2017/09/09/看透神经网络和深度学习的脉络，终于不迷糊了/</id>
    <published>2017-09-09T09:50:33.000Z</published>
    <updated>2018-03-11T17:25:05.865Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>神经网络和深度学习近几年好多人在学习，但是他们具体是什么关系，又有什么联系，众说纷纭，<br>有人说：深度学习可以理解成用深度神经网络（DNN，Deep Neural Network）来进行机器学习，<br>有人说：深度学习是一种方法，神经网络是个模型。用了深度学习可以有效解决层数多的网络不好学习的问题<br>还有人说：本是同根生，相煎何太急<br>接下来，下面这张图，能帮助大家更好地学习<strong>神经网络和深度学习</strong>，掌握理清脉络</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-bb38c57504d4a1a1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>线性回归是最基本的<br>注释：红色是基础</p>
<ul>
<li><p>ＮＬＰ自然语言处理(nlp,natural language processing)</p>
</li>
<li><p>机器学习(machine learning)</p>
</li>
<li>ＣＮＮ卷积神经网络（convolutional neural network）</li>
<li>ＲＮＮ递归神经网络(Recurrent Neural Network)</li>
<li>LSTM Long Short Term Memory长的短时记忆长短时记忆长短时记忆模型<a id="more"></a>
</li>
</ul>
<blockquote>
<p>CNN：卷积神经网络【<strong>空间</strong>】<br>RNN: 递归神经网络【<strong>时域</strong>】<br>神经网络中，隐含层网络的输出作为下一时刻自身的输入–&gt;一级一级会衰弱–》需要记忆封存的结构（LSTM）<br>RNN-&gt;LSTM【记忆量的扩充】</p>
<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><ul>
<li>非线性的运算关系叠加起来就是一个<strong>神经网络</strong></li>
<li>神经网络到CNN，RNN（空间和时间的扩展）</li>
<li>卷积核：二维的处理算组，图像的处理</li>
<li>神经网络到CNN就是一维到二维三维的转化，在空间上进行扩展</li>
<li>神经网络到RNN（神经网络一维有个时间的延续，比如说语音）</li>
<li>记忆GATE-根据输入的信息判断哪些是需要提前记下来的，在之后处理的时候选择要不要释放</li>
</ul>
</blockquote>
<p>小象学院公开课具体讲述了这一内容，下面是视频链接：<br><a href="http://www.chinahadoop.cn/course/854/learn#lesson/16579" target="_blank" rel="external">视频连接</a></p>
<p>本文转载自微信公众号：<strong>重庆小哥稳</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-cd40a159c0f512b4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="重庆.jpg"></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;神经网络和深度学习近几年好多人在学习，但是他们具体是什么关系，又有什么联系，众说纷纭，&lt;br&gt;有人说：深度学习可以理解成用深度神经网络（DNN，Deep Neural Network）来进行机器学习，&lt;br&gt;有人说：深度学习是一种方法，神经网络是个模型。用了深度学习可以有效解决层数多的网络不好学习的问题&lt;br&gt;还有人说：本是同根生，相煎何太急&lt;br&gt;接下来，下面这张图，能帮助大家更好地学习&lt;strong&gt;神经网络和深度学习&lt;/strong&gt;，掌握理清脉络&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-bb38c57504d4a1a1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;mark&quot;&gt;&lt;br&gt;线性回归是最基本的&lt;br&gt;注释：红色是基础&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ＮＬＰ自然语言处理(nlp,natural language processing)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;机器学习(machine learning)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;ＣＮＮ卷积神经网络（convolutional neural network）&lt;/li&gt;
&lt;li&gt;ＲＮＮ递归神经网络(Recurrent Neural Network)&lt;/li&gt;
&lt;li&gt;LSTM Long Short Term Memory长的短时记忆长短时记忆长短时记忆模型
    
    </summary>
    
    
      <category term="神经网络" scheme="http://yoursite.com/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
      <category term="深度学习" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>吴恩达-神经网络和深度学习(第二周神经网络基础)</title>
    <link href="http://yoursite.com/2017/09/07/%E5%90%B4%E6%81%A9%E8%BE%BE-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%92%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0(%E7%AC%AC%E4%BA%8C%E5%91%A8%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80)/"/>
    <id>http://yoursite.com/2017/09/07/吴恩达-神经网络和深度学习(第二周神经网络基础)/</id>
    <published>2017-09-07T09:50:33.000Z</published>
    <updated>2018-03-11T17:23:40.266Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>学习如何用神经网络的思维模式提出机器学习问题、如何使用向量化加速你的模型。</p>
</blockquote>
<ul>
<li>先介绍一些名词<ul>
<li>training set (训练集)</li>
<li>feature vector(特征向量)</li>
<li>classifier(分类器)</li>
<li>calculus（微积分）</li>
<li>循环（loop）</li>
<li>数据集（datasets）</li>
<li>vectorization (向量化)</li>
<li>matrix(矩阵)</li>
<li>vector(向量) <a id="more"></a></li>
</ul>
</li>
<li>本周用到的一些符号【Notation】<ul>
<li>（x,y）表示一个单独的样本</li>
<li>x是xn维的特征向量</li>
<li>标签y值为0/1</li>
<li>训练集由m个训练样本构成</li>
<li>(x^(1), y^(1))表示样本一输入和输出，</li>
<li>{x^(1), y^(1),…..x^(n), y^(n).}整个训练集</li>
<li>测试集的 样本数。训练集的样本数</li>
<li>矩阵也可表示训练集输入x,输出标签y</li>
<li>注意：<strong>训练样本作为行向量堆叠</strong></li>
<li>输出y是1xm矩阵</li>
</ul>
</li>
</ul>
<p>如下图：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-ace3010bd66a3dc3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Notation"></p>
<h3 id="二分分类【Binary-Classification】"><a href="#二分分类【Binary-Classification】" class="headerlink" title="二分分类【Binary Classification】"></a>二分分类【Binary Classification】</h3><ul>
<li><p>神经网络的计算过程中，通常有一个正向过程【forward  pass】（或者正向传播步骤）,接着有一个反向过程【backward pass】(或者反向传播步骤)</p>
</li>
<li><p>logistic回归是一个用于二分分类的算法</p>
</li>
<li><p>计算机保存图片，要保存<strong>三个独立矩阵</strong>（Red红 blue绿 Green蓝）<br>如果有64X64的一张图片，则<strong>输入向量的维度n=64X64X3=12288</strong></p>
</li>
<li><p>在二分分类问题中，目标是训练出一个<strong>分类器</strong>，他以图片的特征向量x作为输入，，预测输出的结果y(<strong>只有两个值</strong>)</p>
</li>
</ul>
<h3 id="logistic回归"><a href="#logistic回归" class="headerlink" title="logistic回归"></a>logistic回归</h3><p>这是一个学习算法，用在监督学习中，<br>如下图：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-be2183af3f59d818.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="logistic"></p>
<h3 id="logistic回归损失函数"><a href="#logistic回归损失函数" class="headerlink" title="logistic回归损失函数"></a>logistic回归损失函数</h3><p>损失函数【error function】在单个训练样本中定义的，他衡量了在单个训练样本上的表现<br>成本函数【cost function 】在全体训练集样本下的表现–&gt;对损失函数求和<br>对以上函数要找到合适的<strong>参数w和b</strong><br>成本函数用于衡量参数w和b的效果</p>
<p>如下图：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-d24d5e999f6e5713.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br><img src="http://upload-images.jianshu.io/upload_images/4340772-0427fc753f631b58.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<h3 id="梯度下降法【Gradient-Descent】"><a href="#梯度下降法【Gradient-Descent】" class="headerlink" title="梯度下降法【Gradient Descent】"></a>梯度下降法【Gradient Descent】</h3><ul>
<li>训练或学习训练集上的参数w和b<br><img src="http://upload-images.jianshu.io/upload_images/4340772-8acc29d69d9d10d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="梯度下降法"><br><img src="http://upload-images.jianshu.io/upload_images/4340772-fd93c51f67066567.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="求最小值"></li>
</ul>
<h3 id="导数"><a href="#导数" class="headerlink" title="导数"></a>导数</h3><p>等于= be equal to </p>
<ul>
<li>pluse</li>
</ul>
<ul>
<li>minus<br>X times<br>/ divide</li>
</ul>
<h3 id="计算图"><a href="#计算图" class="headerlink" title="计算图"></a>计算图</h3><blockquote>
<p>可以说，一个神经网络的计算都是按照前向或者反向传播过程来实现的，<br>首先计算出神经网络的输出<br>首先计算出神经网络的输出，紧接着一个反向传播操作，后者我们用来计算出对应的梯度或者导数，流程图解释了为什么这样实现<br>流程图，是用蓝色箭头画出来的的，从左到右的计算</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-e97c6467621cc516.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="流程图"></p>
<h3 id="计算图的导数计算"><a href="#计算图的导数计算" class="headerlink" title="计算图的导数计算"></a>计算图的导数计算</h3><p>从右到左计算导数<br><img src="http://upload-images.jianshu.io/upload_images/4340772-da5ef2c60f6ae2d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<h3 id="logistic回归中的梯度下降法（用偏导数实现）"><a href="#logistic回归中的梯度下降法（用偏导数实现）" class="headerlink" title="logistic回归中的梯度下降法（用偏导数实现）"></a>logistic回归中的梯度下降法（用偏导数实现）</h3><p>导数流程图来计算梯度用偏导数有点大材小用，但对理解比较好<br><img src="http://upload-images.jianshu.io/upload_images/4340772-8eea77bbbe6c0632.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<h3 id="m个样本的梯度下降"><a href="#m个样本的梯度下降" class="headerlink" title="m个样本的梯度下降"></a>m个样本的梯度下降</h3><p>运用到整个样本集中<br><img src="http://upload-images.jianshu.io/upload_images/4340772-a457f3d3e4260106.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="for循环"></p>
<h3 id="向量化"><a href="#向量化" class="headerlink" title="向量化"></a>向量化</h3><p>循环很低效率，用向量化来加速运算(np.function)<br><code>z=np.dot(w, x) + b</code><br><img src="http://upload-images.jianshu.io/upload_images/4340772-e902e7f515075452.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>可能有人说：可扩展深度学习实现是在GPU(图像处理单元)上做的，而我们做的再jupyter notebook上（CPU）<br>但GPU和CPU都有并行化的指令，SIMD单指令流多数据流，这点对GPU和CPU上面是成立的，只是GPU更擅长SIMD运算</p>
<ul>
<li>for循环能不用就不用，如果可以使用内置函数或者其他方法计算循环，会比for循环更快<br><img src="http://upload-images.jianshu.io/upload_images/4340772-a95281da70ed860e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br><img src="http://upload-images.jianshu.io/upload_images/4340772-2e0b31d42927905e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></li>
</ul>
<h3 id="进一步向量化logistic回归"><a href="#进一步向量化logistic回归" class="headerlink" title="进一步向量化logistic回归"></a>进一步向量化logistic回归</h3><p><img src="http://upload-images.jianshu.io/upload_images/4340772-a3e45618ebeadbda.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<h3 id="向量化logistic回归的梯度输出"><a href="#向量化logistic回归的梯度输出" class="headerlink" title="向量化logistic回归的梯度输出"></a>向量化logistic回归的梯度输出</h3><p><img src="http://upload-images.jianshu.io/upload_images/4340772-311ff1bbbbce2c8d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>这就得到高度向量化的，高效的logistic回归梯度下降法</p>
<h3 id="python中的广播（使python和Numpy部分代码更高效）"><a href="#python中的广播（使python和Numpy部分代码更高效）" class="headerlink" title="python中的广播（使python和Numpy部分代码更高效）"></a>python中的广播（使python和Numpy部分代码更高效）</h3><p>广播（broadcasting）对列向量，行向量都有效<br>例子：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-114b9bd2669c3e05.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-61ed179a1a902989.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<p>实现神经网络算法时主要用到的广播形式<br><img src="http://upload-images.jianshu.io/upload_images/4340772-65f31aa1feadaf7f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<h3 id="关于python-numpy向量的说明"><a href="#关于python-numpy向量的说明" class="headerlink" title="关于python/numpy向量的说明"></a>关于python/numpy向量的说明</h3><p>千万不要用秩为1的数组<br>随意插入assert()声明，要仔细检查矩阵和数组的维度<br>不要害怕调用reshape,来确保你的矩阵和向量</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-2fa688c563527064.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<p>可以排除，简化甚至消灭代码中各种奇怪的bug</p>
<p>学习链接<br><a href="http://www.missshi.cn/api/view/blog/59aa08fee519f50d04000170" target="_blank" rel="external">4. Logistic代码实战</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;学习如何用神经网络的思维模式提出机器学习问题、如何使用向量化加速你的模型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;先介绍一些名词&lt;ul&gt;
&lt;li&gt;training set (训练集)&lt;/li&gt;
&lt;li&gt;feature vector(特征向量)&lt;/li&gt;
&lt;li&gt;classifier(分类器)&lt;/li&gt;
&lt;li&gt;calculus（微积分）&lt;/li&gt;
&lt;li&gt;循环（loop）&lt;/li&gt;
&lt;li&gt;数据集（datasets）&lt;/li&gt;
&lt;li&gt;vectorization (向量化)&lt;/li&gt;
&lt;li&gt;matrix(矩阵)&lt;/li&gt;
&lt;li&gt;vector(向量)
    
    </summary>
    
    
      <category term="神经网络" scheme="http://yoursite.com/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
      <category term="深度学习" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>吴恩达-神经网络和深度学习(第一周深度学习概论)</title>
    <link href="http://yoursite.com/2017/09/01/%E5%90%B4%E6%81%A9%E8%BE%BE-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%92%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0(%E7%AC%AC%E4%B8%80%E5%91%A8%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%AE%BA)/"/>
    <id>http://yoursite.com/2017/09/01/吴恩达-神经网络和深度学习(第一周深度学习概论)/</id>
    <published>2017-09-01T09:50:33.000Z</published>
    <updated>2018-03-11T17:24:10.467Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>学习驱动神经网络兴起的主要技术趋势，了解现今深度学习在哪里应用、如何应用。</p>
<p>8 月 8 日，吴恩达正式发布了 Deepleanring.ai——基于 Coursera 的系列深度学习课程，但在中国无法访问这套课程（除非你连VPN），还有Coursera中是英文授课，就有点尴尬。幸好，之后，吴恩达和网易合作，将课程内容免费放到网易的教育平台上.所以，终于有机会学这门课了！特记下笔记，以备忘！</p>
</blockquote>
<ul>
<li>可以先看一下人工智能的完整学习图<br><img src="http://upload-images.jianshu.io/upload_images/4340772-21510de02952b0e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="原理"></li>
</ul>
<blockquote>
<p>有一起学习的同学，可以联系我，一起进步哦！！！<br><a id="more"></a><br><a href="https://www.coursera.org/specializations/deep-learning" target="_blank" rel="external">Coursera学习Deep Learning Specialization</a><br><a href="https://study.163.com/my#/smarts" target="_blank" rel="external">网易云学习地址</a></p>
</blockquote>
<h3 id="什么是神经网络"><a href="#什么是神经网络" class="headerlink" title="什么是神经网络"></a>什么是神经网络</h3><p>由输入到输出<br>修正线性单元（ReLU）</p>
<h3 id="用神经网络进行监督学习"><a href="#用神经网络进行监督学习" class="headerlink" title="用神经网络进行监督学习"></a>用神经网络进行监督学习</h3><p>神经网络（neutral networks）</p>
<ul>
<li>机器学习–&gt;监督学习</li>
<li><p>监督学习</p>
<ul>
<li>standard NN – 房屋价格预测，广告点金</li>
<li>卷积神经网络（CNN）—图像领域</li>
<li>循环神经网络（RNN）—一维序列，时间，音频(机器翻译，语音变文本)</li>
<li>复杂，混合神经网络（complex,hybrid,NN）—（无人驾驶）<br><img src="http://upload-images.jianshu.io/upload_images/4340772-ad9d565ad67bf421.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="supervised Learning"><br>基本图例：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-3dbe43160a7574c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="神经网络图"></li>
</ul>
</li>
<li><p>结构化数据和非结构化数据</p>
<ul>
<li>结构化数据：数据的数据库</li>
<li>非结构化数据：机器不容易理解的<strong>语音,图片,文本</strong>(用于<strong>语音识别，图像识别，自然语言文字处理</strong>)</li>
</ul>
</li>
</ul>
<p>如下图理解：</p>
<blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-4ba78efd91eadc78.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="结构化数据和非结构化数据"></p>
</blockquote>
<ul>
<li><p>符号规定<br>m–训练集的规模（训练样本的数量）</p>
</li>
<li><p>深度学习进行过程<br><img src="http://upload-images.jianshu.io/upload_images/4340772-f605b811f831e0a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="process"></p>
</li>
</ul>
<p>学完第一周的课程，特意找了一张图片，宏观把控，今后一定非常有用</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-21510de02952b0e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="原理"><br>待续…….</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;学习驱动神经网络兴起的主要技术趋势，了解现今深度学习在哪里应用、如何应用。&lt;/p&gt;
&lt;p&gt;8 月 8 日，吴恩达正式发布了 Deepleanring.ai——基于 Coursera 的系列深度学习课程，但在中国无法访问这套课程（除非你连VPN），还有Coursera中是英文授课，就有点尴尬。幸好，之后，吴恩达和网易合作，将课程内容免费放到网易的教育平台上.所以，终于有机会学这门课了！特记下笔记，以备忘！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;可以先看一下人工智能的完整学习图&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-21510de02952b0e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;原理&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;有一起学习的同学，可以联系我，一起进步哦！！！&lt;br&gt;
    
    </summary>
    
    
      <category term="神经网络" scheme="http://yoursite.com/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
      <category term="深度学习" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>mongoexport导出数据时遇到的种种问题（好坑）</title>
    <link href="http://yoursite.com/2017/08/26/mongoexport%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E7%A7%8D%E7%A7%8D%E9%97%AE%E9%A2%98%EF%BC%88%E5%A5%BD%E5%9D%91%EF%BC%89/"/>
    <id>http://yoursite.com/2017/08/26/mongoexport导出数据时遇到的种种问题（好坑）/</id>
    <published>2017-08-26T09:50:33.000Z</published>
    <updated>2018-03-11T17:12:43.286Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>想导出mongodb数据库里的数据，结果，搞了一天，踩了无数的坑，才终于导出数据，真的，要哭了，赶紧记录下来（说实话，网上有些文章真的随着版本的更新，有些过时了，真的是助我踩坑耶）<br>我主要讲我踩得坑哈，顺便说下！</p>
</blockquote>
<p>首先要开启服务，进入命令框<br><code>NET START MongoDB</code><br>然后进入安装目录（我的安装目录）：<code>cd D:\Program Files\Work\MongoDB\Server\3.4\bin</code>，执行<br><code>mongo</code></p>
<p>执行以上两步后，就可以输入有用的命令了<br>导出数据：<br><code>mongoexport -h 127.0.0.1 -u root -p
 12345 -d taobao -c prodect --type=cvs  -o D:\data\prodect_cvs.dat</code><br>不知上述意思的可以参见： <a href="http://www.cnblogs.com/limingluzhu/p/4323146.html" target="_blank" rel="external">Mongo的导出工具mongoexport介绍</a><br>然后就报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">2017-08-26T15:48:30.940+0800    error connecting to db server: server returned e</div><div class="line">rror on SASL authentication step: Authentication failed.</div></pre></td></tr></table></figure></p>
<p>网上搜了一下，说<strong>–authenticationDatabase admin   这是是必须的，否则会报上述错误：</strong><br>解决办法<br>再添加一串代码： <code>--authenticationDatabase admin</code><br>但是添加了之后还是报相同的错，又搜了一下,看了下面一篇博文</p>
<p><a href="http://blog.csdn.net/allen_jinjie/article/details/9235073" target="_blank" rel="external">mongoDB authentication</a></p>
<blockquote>
<p>连接到admin数据库，在admin数据库上创建一个用户，这个用户保存在admin.system.users中，它的权限比在其它数据库中设置的用户权限更大。（当admin.system.users中一个用户都没有时，即使mongod启动时添加了–auth参数，如果没有在admin数据库中添加用户，此时不进行任何认证还是可以做任何操作，直到在admin.system.users中添加了一个用户。）</p>
</blockquote>
<p>原来是我没<strong>创建一个用户</strong>，<strong>但大家要注意创建用户的命令版本不同，命令也有可能不同</strong>，我就遇到了这个问题，<br><img src="http://upload-images.jianshu.io/upload_images/4340772-89217a2bec8657c5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>mongodb3.X用的方法： <a href="http://blog.csdn.net/unixpro/article/details/47302855" target="_blank" rel="external">mongoDB add user in v3.0 问题的解决（Property ‘addUser’ of object admin is not a func）</a></p>
<p>我的版本是3.X的，所有我应该执行下面</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">use admin</div><div class="line">db.createUser(</div><div class="line">   &#123;</div><div class="line">     user: &quot;appAdmin&quot;,</div><div class="line">     pwd: &quot;password&quot;,</div><div class="line">     roles:</div><div class="line">       [</div><div class="line">         &#123; role: &quot;readWrite&quot;, db: &quot;config&quot; &#125;,</div><div class="line">         &quot;clusterAdmin&quot;</div><div class="line">       ]</div><div class="line">   &#125;</div><div class="line">)</div></pre></td></tr></table></figure>
<p>旧点的版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">use admin</div><div class="line">db.addUser(&apos;appAdmin&apos;, &apos;password&apos;)</div></pre></td></tr></table></figure></p>
<p>创建完成之后如下图：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-a20c1dedae69628b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<p>然后又遇到一个问题<code>csv mode requires a field list</code><br>,原因是<strong>第一次没有指明要导出的列，所以只是实现一个空的文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">user@user-xubuntu:/usr/lib/mongodb/bin$ sudo ./mongoexport -d wx_connect -c template --csv -o template_csv.dat  </div><div class="line">connected to: 127.0.0.1  </div><div class="line">csv mode requires a field list　　　　　　　　　　　　　　　　　　　　　------第一次没有指明要导出的列，所以只是实现一个空的文件  </div><div class="line">user@user-xubuntu:/usr/lib/mongodb/bin$ sudo ./mongoexport -d wx_connect -c template --csv -f msgId,templateId,status,toUser -o template_csv_new.dat  </div><div class="line">connected to: 127.0.0.1  </div><div class="line">exported 28 records　　　　　　　　　　　　　　　　　　　　　　　　　　　------导出成功</div></pre></td></tr></table></figure>
<p>所以在末尾再加上<code>-f 一列的名字</code><br><code>mongoexport -h 127.0.0.1 -u root -p
 12345 -d taobao -c prodect --type=cvs  -o D:\data\prodect_cvs.dat  --authenticationDatabase admin -f shop</code></p>
<p>参考博客：  <a href="http://blog.csdn.net/a25115/article/details/40862293" target="_blank" rel="external">mongoDB的基本操作以及数据的导入导出，备份和恢复</a><br>如下图<br><img src="http://upload-images.jianshu.io/upload_images/4340772-c9b2aac5e519d019.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<blockquote>
<p>哇。终于完成了，有点小激动啊！！</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;想导出mongodb数据库里的数据，结果，搞了一天，踩了无数的坑，才终于导出数据，真的，要哭了，赶紧记录下来（说实话，网上有些文章真的随着版本的更新，有些过时了，真的是助我踩坑耶）&lt;br&gt;我主要讲我踩得坑哈，顺便说下！&lt;/p&gt;
&lt;/blockquo
    
    </summary>
    
    
      <category term="mongodb" scheme="http://yoursite.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>windows下mongodb的安装与配置（全）</title>
    <link href="http://yoursite.com/2017/08/25/windows%E4%B8%8Bmongodb%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%EF%BC%88%E5%85%A8%EF%BC%89/"/>
    <id>http://yoursite.com/2017/08/25/windows下mongodb的安装与配置（全）/</id>
    <published>2017-08-25T09:50:33.000Z</published>
    <updated>2018-03-11T17:12:18.645Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/4340772-efb3b67cc9a34045.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mongodb"></p>
<blockquote>
<p>由于学Python存数据，需要用到mongodb数据库，自己在网上搜了很多教程，也踩了许多坑，特记录下来，希望能够对一些朋友有用,也记录下自己学的东西。</p>
</blockquote>
<h2 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h2><ol>
<li>下载地址：<a href="https://www.mongodb.com/download-center#community" target="_blank" rel="external">https://www.mongodb.com/download-center#community</a></li>
<li>下载符合你系统的版本，然后安装。默认安装到<code>C:\Program Files\MongoDB</code><br>,你也可以自定义安装目录。<br>我的目录是：·<code>D:\Program Files\Work\MongoDB\Server\3.4</code></li>
</ol>
<h2 id="创建数据目录"><a href="#创建数据目录" class="headerlink" title="创建数据目录"></a>创建数据目录</h2><p>MongoDB将数据目录存储在 db 目录下。但是这个数据目录<strong>不会主动创建</strong>，我们在安装完成后需要创建它。</p>
<p>请注意，数据目录应该放在<strong>根目录</strong>下（(如： C:\ 或者 D:\ 等 )。</p>
<p>这里我们新建<code>mongodb</code>文件夹在文件夹下新建各种东西<br>我们假设创建数据目录在<code>D:\mongodbData\data\db</code></p>
<h2 id="命令行运行mogondb服务"><a href="#命令行运行mogondb服务" class="headerlink" title="命令行运行mogondb服务"></a>命令行运行mogondb服务</h2><p>假设你的mongodb安装在<br><code>D:\Program Files\Work\MongoDB\Server\3.4</code></p>
<ul>
<li><p>打开cmd命令框进入<strong>安装目录</strong><br><code>D:\Program Files\Work\MongoDB\Server\3.4\bin</code></p>
</li>
<li><p>启动服务：<br><code>mongod.exe --dbpath D:\mongodbData\data\db</code></p>
</li>
</ul>
<p>出现下图数据即算成功<br><img src="http://upload-images.jianshu.io/upload_images/4340772-501e44701d615a0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mongod.exe --dbpath D:\mongodbData\data\db"></p>
<h2 id="将MongoDB服务器作为Windows服务运行"><a href="#将MongoDB服务器作为Windows服务运行" class="headerlink" title="将MongoDB服务器作为Windows服务运行"></a>将MongoDB服务器作为Windows服务运行</h2><p>先终止命令行，执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">D:\Program Files\Work\MongoDB\Server\3.4\bin&gt; mongod.exe --logpath &quot;D:\mongodbDa</div><div class="line">ta\data\log\mongodb.log&quot; --logappend --dbpath &quot;D:\mongodbData/data/db&quot; --port 27017 --serviceName &quot;MongoDB&quot; --install</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-3792bfb384bf1f45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="D:\Program Files\Work\MongoDB\Server\3.4\bin&gt; mongod.exe --logpath &quot;D:\mongodbDa
ta\data\log\mongodb.log&quot; --logappend --dbpath &quot;D:\mongodbData/data/db&quot; --port 27017 --serviceName &quot;MongoDB&quot; --install"></p>
<p>下表为mongodb启动的参数说明：<strong>自己注意按照自己的路径进行修改</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">--bind_ip	绑定服务IP，若绑定127.0.0.1，则只能本机访问，不指定默认本地所有IP</div><div class="line">--logpath	定MongoDB日志文件，注意是指定文件不是目录</div><div class="line">--logappend	使用追加的方式写日志</div><div class="line">--dbpath	指定数据库路径</div><div class="line">--port	    指定服务端口号，默认端口27017</div><div class="line">--serviceName	指定服务名称</div><div class="line">--serviceDisplayName	指定服务名称，有多个mongodb服务时执行。</div><div class="line">--install	指定作为一个Windows服务安装。</div></pre></td></tr></table></figure>
<p>终止命令行中的mongodb服务，打开刚才新建的mongodb服务：<br><code>NET START MongoDB</code><br>运行之后如下图<br><img src="http://upload-images.jianshu.io/upload_images/4340772-36bec45f50247d71.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="NET START MongoDB"></p>
<p>如果出现服务器无法正常启动的问题，是因为mongod.lock这个文件，在服务器异常退出时，该文件会影响下一次启动mongod服务的,我们首先关闭命令行mongodb服务，然后只需要删除该文件就行了：</p>
<p><code>mongod.exe --config e:\data\db\mongod.lock --remove</code></p>
<blockquote>
<p>windows删除服务命令： sc delete MongoDB</p>
</blockquote>
<h2 id="MongoDB后台管理-Shell"><a href="#MongoDB后台管理-Shell" class="headerlink" title="MongoDB后台管理 Shell"></a>MongoDB后台管理 Shell</h2><p>进入安装目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd D:\Program Files\Work\MongoDB\Server\3.4\bin`</div></pre></td></tr></table></figure></p>
<p>执行<code>mongo.exe</code>,如下图<br><img src="http://upload-images.jianshu.io/upload_images/4340772-acbcb771d56f9e3f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mongo.exe"></p>
<ul>
<li>启动MongoDB服务<br><code>net start MongoDB</code></li>
<li>关闭MongoDB服务<br><code>net stop MongoDB</code></li>
<li>移除MongoDB服务<br><code>D:\Program Files\Work\MongoDB\Server\3.4\bin\mongod.exe  --remove</code></li>
</ul>
<p>最后说一下：</p>
<ul>
<li><p>由于mongodb数据看不到摸不着，可视化工具是必须的<br>推荐，推荐一个<strong>MongoDB可视化工具RoboMongo</strong><br><a href="http://www.veryhuo.com/a/view/156974.html" target="_blank" rel="external">MongoDB可视化工具RoboMongo安装与连接教程</a><br>安装很简单，但是别忘了<strong>配置环境变量</strong></p>
</li>
<li><p>再推荐一个mongodbd的操作教程：<br><a href="http://wiki.jikexueyuan.com/project/mongodb/" target="_blank" rel="external">http://wiki.jikexueyuan.com/project/mongodb/</a></p>
</li>
</ul>
<p>好了接下来就可以好好玩数据了</p>
<p>参考文章：<br><a href="http://www.jianshu.com/p/4bda3b7a9ea6" target="_blank" rel="external">http://www.jianshu.com/p/4bda3b7a9ea6</a><br><a href="http://www.jianshu.com/p/bc088aa972e9" target="_blank" rel="external">http://www.jianshu.com/p/bc088aa972e9</a><br><a href="http://www.runoob.com/mongodb/mongodb-window-install.html" target="_blank" rel="external">http://www.runoob.com/mongodb/mongodb-window-install.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-efb3b67cc9a34045.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; 
    
    </summary>
    
    
      <category term="mongodb" scheme="http://yoursite.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>Python 爬虫必备-正则表达式（re模块）</title>
    <link href="http://yoursite.com/2017/08/19/Python-%E7%88%AC%E8%99%AB%E5%BF%85%E5%A4%87-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%88re%E6%A8%A1%E5%9D%97%EF%BC%89/"/>
    <id>http://yoursite.com/2017/08/19/Python-爬虫必备-正则表达式（re模块）/</id>
    <published>2017-08-19T09:50:33.000Z</published>
    <updated>2018-03-11T17:19:41.682Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/4340772-8403f99919beba25.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="正则表达式re模块"></p>
<h2 id="正则表达式须知"><a href="#正则表达式须知" class="headerlink" title="正则表达式须知"></a>正则表达式须知</h2><ul>
<li>正则表达式是用来匹配字符串非常强大的工具，在其他编程语言中同样有正则表达式的概念，Python同样不例外，利用了正则表达式，我们想要从返回的页面内容提取出我们想要的内容就易如反掌了。<blockquote>
<p>正则表达式的大致匹配过程是：<br>1.依次拿出表达式和文本中的字符比较，<br>2.如果每一个字符都能匹配，则匹配成功；一旦有匹配不成功的字符则匹配失败。<br>3.如果表达式中有量词或边界，这个过程会稍微有一些不同。</p>
</blockquote>
</li>
</ul>
<h2 id="正则表达式语法规则"><a href="#正则表达式语法规则" class="headerlink" title="正则表达式语法规则"></a>正则表达式语法规则</h2><p>下面是Python中正则表达式的一些匹配规则，图片资料来自CSDN<br><img src="http://upload-images.jianshu.io/upload_images/4340772-b0baf49f04744a80.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="正则表达式"><br><a id="more"></a></p>
<h2 id="正则表达式特别强调"><a href="#正则表达式特别强调" class="headerlink" title="正则表达式特别强调"></a>正则表达式特别强调</h2><ol>
<li><p>python转义字符</p>
<ul>
<li><p>正则表达式使用反斜杠” \ “来代表特殊形式或用作转义字符，这里跟Python的语法冲突，因此，Python用” \\ “表示正则表达式中的” \ “，因为正则表达式中如果要匹配” \ “，需要用\来转义，变成” \ “，而Python语法中又需要对字符串中每一个\进行转义，所以就变成了” \\ “。</p>
<ul>
<li>Python里的原生字符串很好地解决了这个问题，这个例子中的正则表达式可以使用r”\”表示。同样，匹配一个数字的”\d”可以写成r”\d”。有了原生字符串，妈妈也不用担心是不是漏写了反斜杠，写出来的表达式也更直观勒。</li>
</ul>
</li>
</ul>
</li>
<li>贪婪模式和非贪婪模式</li>
</ol>
<p>正则表达式通常用于在文本中查找匹配的字符串。Python里数量词默认是贪婪的（在少数语言里也可能是默认非贪婪），总是尝试匹配尽可能多的字符；非贪婪则相反，总是尝试匹配尽可能少的字符。在”*”,”?”,”+”,”{m,n}”后面加上？,使贪婪变成非贪婪。</p>
<p>可参考： <a href="http://blog.csdn.net/zcc_0015/article/details/53671189" target="_blank" rel="external">python 正则表达式的贪婪匹配与非贪婪匹配</a></p>
<h2 id="Python-Re模块"><a href="#Python-Re模块" class="headerlink" title="Python Re模块"></a>Python Re模块</h2><p>Python 自带了re模块，它提供了对正则表达式的支持。主要用到的方法列举如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#返回pattern对象</div><div class="line">re.compile(string[,flag])  </div><div class="line">#以下为匹配所用函数</div><div class="line">re.match(pattern, string[, flags])</div><div class="line">re.search(pattern, string[, flags])</div><div class="line">re.split(pattern, string[, maxsplit])</div><div class="line">re.findall(pattern, string[, flags])</div><div class="line">re.finditer(pattern, string[, flags])</div><div class="line">re.sub(pattern, repl, string[, count])</div><div class="line">re.subn(pattern, repl, string[, count])</div></pre></td></tr></table></figure>
<p>在介绍这几个方法之前，我们先来介绍一下pattern的概念，pattern可以理解为一个匹配模式，那么我们怎么获得这个<strong>匹配模式</strong>呢？很简单，我们需要利用re.compile方法就可以。例如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pattern = re.compile(r&apos;hello&apos;)</div></pre></td></tr></table></figure></p>
<p>另外大家可能注意到了另一个参数 flags，在这里解释一下这个参数的含义：</p>
<p>参数flag是匹配模式，取值可以使用按位或运算符’|’表示同时生效，比如re.I | re.M。</p>
<p>可选值有：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">• re.I(全拼：IGNORECASE): 忽略大小写（括号内是完整写法，下同）</div><div class="line">• re.M(全拼：MULTILINE): 多行模式，改变&apos;^&apos;和&apos;$&apos;的行为（参见上图）</div><div class="line">• re.S(全拼：DOTALL): 点任意匹配模式，改变&apos;.&apos;的行为</div><div class="line">• re.L(全拼：LOCALE): 使预定字符类 \w \W \b \B \s \S 取决于当前区域设定</div><div class="line">• re.U(全拼：UNICODE): 使预定字符类 \w \W \b \B \s \S \d \D 取决于unicode定义的字符属性</div><div class="line">• re.X(全拼：VERBOSE): 详细模式。这个模式下正则表达式可以是多行，忽略空白字符，并可以加入注释。</div></pre></td></tr></table></figure></p>
<p>在刚才所说的另外几个方法例如 re.match 里我们就需要用到这个pattern了，下面我们一一介绍。</p>
<h3 id="（1）re-match-pattern-string-flags"><a href="#（1）re-match-pattern-string-flags" class="headerlink" title="（1）re.match(pattern, string[, flags])"></a>（1）re.match(pattern, string[, flags])</h3><p>这个方法将会从string（我们要匹配的字符串）的开头开始，尝试匹配pattern，一直向后匹配，如果遇到无法匹配的字符，立即返回None，如果匹配未结束已经到达string的末尾，也会返回None。两个结果均表示匹配失败，否则匹配pattern成功，同时匹配终止，不再对string向后匹配。下面我们通过一个例子理解一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># 将正则表达式编译成Pattern对象，注意hello前面的r的意思是“原生字符串”</div><div class="line">pattern = re.compile(r&apos;hello&apos;)</div><div class="line"> </div><div class="line"># 使用re.match匹配文本，获得匹配结果，无法匹配时将返回None</div><div class="line">result1 = re.match(pattern,&apos;hello&apos;)</div><div class="line">result2 = re.match(pattern,&apos;helloo CQC!&apos;)</div><div class="line">result3 = re.match(pattern,&apos;helo CQC!&apos;)</div><div class="line">result4 = re.match(pattern,&apos;hello CQC!&apos;)</div><div class="line"> </div><div class="line">#如果1匹配成功</div><div class="line">if result1:</div><div class="line">    # 使用Match获得分组信息</div><div class="line">    print(result1.group())</div><div class="line">else:</div><div class="line">    print (&apos;1匹配失败！&apos;)</div><div class="line"> </div><div class="line"> </div><div class="line">#如果2匹配成功</div><div class="line">if result2:</div><div class="line">    # 使用Match获得分组信息</div><div class="line">    print(result2.group())</div><div class="line">else:</div><div class="line">    print( &apos;2匹配失败！&apos;)</div><div class="line"> </div><div class="line"> </div><div class="line">#如果3匹配成功</div><div class="line">if result3:</div><div class="line">    # 使用Match获得分组信息</div><div class="line">    print( result3.group())</div><div class="line">else:</div><div class="line">    print(&apos;3匹配失败！&apos;)</div><div class="line"> </div><div class="line">#如果4匹配成功</div><div class="line">if result4:</div><div class="line">    # 使用Match获得分组信息</div><div class="line">    print( result4.group())</div><div class="line">else:</div><div class="line">    print( &apos;4匹配失败！&apos;)</div></pre></td></tr></table></figure></p>
<p>我们还看到最后打印出了result.group()，这个是什么意思呢？下面我们说一下关于match对象的的属性和方法<br>Match对象是一次匹配的结果，包含了很多关于此次匹配的信息，可以使用Match提供的可读属性或方法来获取这些信息。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">1.group([group1, …]):</div><div class="line">获得一个或多个分组截获的字符串；指定多个参数时将以元组形式返回。group1可以使用编号也可以使用别名；编号0代表整个匹配的子串；不填写参数时，返回group(0)；没有截获字符串的组返回None；截获了多次的组返回最后一次截获的子串。</div><div class="line">2.groups([default]):</div><div class="line">以元组形式返回全部分组截获的字符串。相当于调用group(1,2,…last)。default表示没有截获字符串的组以这个值替代，默认为None。</div></pre></td></tr></table></figure>
<h3 id="（2）re-search-pattern-string-flags"><a href="#（2）re-search-pattern-string-flags" class="headerlink" title="（2）re.search(pattern, string[, flags])"></a>（2）re.search(pattern, string[, flags])</h3><p>search方法与match方法极其类似，区别在于match()函数只检测re是不是在string的开始位置匹配，search()会扫描整个string查找匹配，match（）只有在0位置匹配成功的话才有返回，如果不是开始位置匹配成功的话，match()就返回None。同样，search方法的返回对象同样match()返回对象的方法和属性。我们用一个例子感受一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># 将正则表达式编译成Pattern对象</div><div class="line">pattern = re.compile(r&apos;world&apos;)</div><div class="line"># 使用search()查找匹配的子串，不存在能匹配的子串时将返回None</div><div class="line"># 这个例子中使用match()无法成功匹配</div><div class="line">match = re.search(pattern,&apos;hello world!&apos;)</div><div class="line">if match:</div><div class="line">    # 使用Match获得分组信息</div><div class="line">    print( match.group())</div></pre></td></tr></table></figure>
<h3 id="（3）re-split-pattern-string-maxsplit"><a href="#（3）re-split-pattern-string-maxsplit" class="headerlink" title="（3）re.split(pattern, string[, maxsplit])"></a>（3）re.split(pattern, string[, maxsplit])</h3><p>按照能够匹配的子串将string分割后返回列表。maxsplit用于指定最大分割次数，不指定将全部分割。我们通过下面的例子感受一下。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">pattern = re.compile(r&apos;\d+&apos;)</div><div class="line">print( re.split(pattern,&apos;one1two2three3four4&apos;))</div><div class="line"> </div><div class="line">### 输出 ###</div><div class="line"># [&apos;one&apos;, &apos;two&apos;, &apos;three&apos;, &apos;four&apos;, &apos;&apos;]</div></pre></td></tr></table></figure>
<h3 id="（4）re-findall-pattern-string-flags"><a href="#（4）re-findall-pattern-string-flags" class="headerlink" title="（4）re.findall(pattern, string[, flags])"></a>（4）re.findall(pattern, string[, flags])</h3><p>搜索string，以列表形式返回全部能匹配的子串。我们通过这个例子来感受一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">pattern = re.compile(r&apos;\d+&apos;)</div><div class="line">print( re.findall(pattern,&apos;one1two2three3four4&apos;))</div><div class="line"> </div><div class="line">### 输出 ###</div><div class="line"># [&apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;4&apos;]</div></pre></td></tr></table></figure>
<h3 id="（5）re-finditer-pattern-string-flags"><a href="#（5）re-finditer-pattern-string-flags" class="headerlink" title="（5）re.finditer(pattern, string[, flags])"></a>（5）re.finditer(pattern, string[, flags])</h3><p>搜索string，返回一个顺序访问每一个匹配结果（Match对象）的迭代器。我们通过下面的例子来感受一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">pattern = re.compile(r&apos;\d+&apos;)</div><div class="line">for m in re.finditer(pattern,&apos;one1two2three3four4&apos;):</div><div class="line">    print( m.group()),</div><div class="line"> </div><div class="line">### 输出 ###</div><div class="line"># 1 2 3 4</div></pre></td></tr></table></figure>
<h3 id="（6）re-sub-pattern-repl-string-count"><a href="#（6）re-sub-pattern-repl-string-count" class="headerlink" title="（6）re.sub(pattern, repl, string[, count])"></a>（6）re.sub(pattern, repl, string[, count])</h3><p>使用repl替换string中每一个匹配的子串后返回替换后的字符串。<br>当repl是一个字符串时，可以使用\id或\g、\g引用分组，但不能使用编号0。<br>当repl是一个方法时，这个方法应当只接受一个参数（Match对象），并返回一个字符串用于替换（返回的字符串中不能再引用分组）。<br>count用于指定最多替换次数，不指定时全部替换。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">pattern = re.compile(r&apos;(\w+) (\w+)&apos;)</div><div class="line">s = &apos;i say, hello world!&apos;</div><div class="line"> </div><div class="line">print( re.sub(pattern,r&apos;\2 \1&apos;, s))</div><div class="line"> </div><div class="line">def func(m):</div><div class="line">    return m.group(1).title() + &apos; &apos; + m.group(2).title()</div><div class="line"> </div><div class="line">print( re.sub(pattern,func, s))</div></pre></td></tr></table></figure></p>
<h3 id="（7）re-subn-pattern-repl-string-count"><a href="#（7）re-subn-pattern-repl-string-count" class="headerlink" title="（7）re.subn(pattern, repl, string[, count])"></a>（7）re.subn(pattern, repl, string[, count])</h3><p>返回 (sub(repl, string[, count]), 替换次数)。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">pattern = re.compile(r&apos;(\w+) (\w+)&apos;)</div><div class="line">s = &apos;i say, hello world!&apos;</div><div class="line"> </div><div class="line">print( re.subn(pattern,r&apos;\2 \1&apos;, s))</div><div class="line"> </div><div class="line">def func1(m):</div><div class="line">    return m.group(1).title() + &apos; &apos; + m.group(2).title()</div><div class="line"> </div><div class="line">print( re.subn(pattern,func1, s))</div><div class="line"> </div><div class="line">### output ###</div><div class="line"># (&apos;say i, world hello!&apos;, 2)</div><div class="line"># (&apos;I Say, Hello World!&apos;, 2)</div></pre></td></tr></table></figure></p>
<p>参考：<a href="http://cuiqingcai.com/" target="_blank" rel="external">静觅</a> » <a href="http://cuiqingcai.com/977.html" target="_blank" rel="external">Python爬虫入门七之正则表达式</a><br><a href="http://lihuipeng.blog.51cto.com/3064864/1270525/" target="_blank" rel="external">python中re项目详解</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-8403f99919beba25.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;正则表达式re模块&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;正则表达式须知&quot;&gt;&lt;a href=&quot;#正则表达式须知&quot; class=&quot;headerlink&quot; title=&quot;正则表达式须知&quot;&gt;&lt;/a&gt;正则表达式须知&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;正则表达式是用来匹配字符串非常强大的工具，在其他编程语言中同样有正则表达式的概念，Python同样不例外，利用了正则表达式，我们想要从返回的页面内容提取出我们想要的内容就易如反掌了。&lt;blockquote&gt;
&lt;p&gt;正则表达式的大致匹配过程是：&lt;br&gt;1.依次拿出表达式和文本中的字符比较，&lt;br&gt;2.如果每一个字符都能匹配，则匹配成功；一旦有匹配不成功的字符则匹配失败。&lt;br&gt;3.如果表达式中有量词或边界，这个过程会稍微有一些不同。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;正则表达式语法规则&quot;&gt;&lt;a href=&quot;#正则表达式语法规则&quot; class=&quot;headerlink&quot; title=&quot;正则表达式语法规则&quot;&gt;&lt;/a&gt;正则表达式语法规则&lt;/h2&gt;&lt;p&gt;下面是Python中正则表达式的一些匹配规则，图片资料来自CSDN&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-b0baf49f04744a80.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;正则表达式&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python3X安装beautifulsoup&amp;&amp;BS64遇到的一些error</title>
    <link href="http://yoursite.com/2017/08/19/python3X%E5%AE%89%E8%A3%85beautifulsoup&amp;&amp;BS64%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9Berror/"/>
    <id>http://yoursite.com/2017/08/19/python3X安装beautifulsoup&amp;&amp;BS64遇到的一些error/</id>
    <published>2017-08-19T09:50:33.000Z</published>
    <updated>2018-03-11T17:11:18.856Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1503121701573&amp;di=6299ff4b6aefe2b11141cae630eb6da1&amp;imgtype=0&amp;src=http%3A%2F%2Fimage.lxway.com%2Fupload%2Fa%2F1b%2Fa1bc79d237bf05535330b1af1dc28afc_thumb.jpg" alt="beautifulsoup&amp;&amp;BS64"><br><a href="https://github.com/HuangCongQing/python-NLP/blob/master/%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96.py" target="_blank" rel="external">用beautifulsoup写的没错的小爬虫地址：</a><br><img src="http://upload-images.jianshu.io/upload_images/4340772-4cd3cf67dceb2a50.gif?imageMogr2/auto-orient/strip" alt=""></p>
<blockquote>
<p>前言: Beautiful Soup 3 目前已经停止开发，推荐在现在的项目中使用Beautiful Soup 4，不过它已经被移植到BS4了，也就是说导入时我们需要 import bs4 。所以这里我们用的版本是 Beautiful Soup 4.3.2 (简称BS4)，另外据说 BS4 对 Python3 的支持不够好，虽然我用的Python35，如果有小伙伴用的是 Python3 版本，可以考虑下载 BS3 版本。<br>自己搞网页数据爬取时，需要 <code>from bs4 import BeautifulSoup</code>,所以在py程序运行中遇到了一系列错误…….<br><a id="more"></a></p>
</blockquote>
<h2 id="错误一：ImportError-No-module-named-39-bs4-39"><a href="#错误一：ImportError-No-module-named-39-bs4-39" class="headerlink" title="错误一：ImportError: No module named &#39;bs4&#39;"></a>错误一：<code>ImportError: No module named &#39;bs4&#39;</code></h2><p>错误如下：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-b364e751ce6cbd53.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ImportError: No module named &#39;bs4"></p>
<ul>
<li>解决方法如下</li>
</ul>
<p>Python如何安装模块：</p>
<p>1.下载BS4模块：</p>
<p><a href="http://www.crummy.com/software/BeautifulSoup/bs4/download/4.3/beautifulsoup4-4.3.2.tar.gz" target="_blank" rel="external">http://www.crummy.com/software/BeautifulSoup/bs4/download/4.3/beautifulsoup4-4.3.2.tar.gz</a></p>
<p>2.解压到Python安装目录下的根目录中：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-7210e5b25ea26561.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="根目录"></p>
<p>3.运行cmd，进入解压缩后的目录（如果Python默认安装在C盘下，打开cmd之后可以使用cd …语句先返回根目录，再进入Python27\beautifulsoup4-4.3.2）<br><img src="http://upload-images.jianshu.io/upload_images/4340772-40d18bbfcd7bffb1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>4.进入Python27\beautifulsoup4-4.3.2之后安装BS4模块：<br>执行：<code>python setup.py install</code></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-ebac366f3a3386b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="python setup.py install"></p>
<p>可参考链接：<a href="http://www.cnblogs.com/victor5230/p/6397449.html" target="_blank" rel="external">http://www.cnblogs.com/victor5230/p/6397449.html</a></p>
<hr>
<p>然而又出现错误：</p>
<h2 id="错误二：-ImportError-cannot-import-name-39-HTMLParseError-39"><a href="#错误二：-ImportError-cannot-import-name-39-HTMLParseError-39" class="headerlink" title="错误二： ImportError: cannot import name &#39;HTMLParseError&#39;"></a>错误二： <code>ImportError: cannot import name &#39;HTMLParseError&#39;</code></h2><p>解决bs4在Python 3.5下出现“ImportError: cannot import name ‘HTMLParseError’”错误</p>
<ul>
<li>解决方法如下：<br>直接在cmd命令框中执行<code>pip --upgrade beautifulsoup4</code></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-5f48c2ff74be1dcd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="pip --upgrade beautifulsoup4"></p>
<p>可参考链接：<a href="http://blog.csdn.net/sinat_26599509/article/details/50609646" target="_blank" rel="external">http://blog.csdn.net/sinat_26599509/article/details/50609646</a></p>
<hr>
<h2 id="错误三：bs4-FeatureNotFound"><a href="#错误三：bs4-FeatureNotFound" class="headerlink" title="错误三：bs4.FeatureNotFound"></a>错误三：<code>bs4.FeatureNotFound</code></h2><p>又出现错误:如下<br>  <code>bs4.FeatureNotFound: Couldn&#39;t find a tree builder with the features you requested: lxml. Do you need to install a parser library?</code><br><img src="http://upload-images.jianshu.io/upload_images/4340772-0824f13ed3aa237d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="bs4.FeatureNotFound"></p>
<ul>
<li>解决方法：<br>首先安装’pip install wheel’<br><a href="https://www.zhihu.com/question/49221958/answer/115712155" target="_blank" rel="external">https://www.zhihu.com/question/49221958/answer/115712155</a><br><img src="http://upload-images.jianshu.io/upload_images/4340772-c64102d6ece6724a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="pip install wheel"></li>
</ul>
<p>安装<code>pip install lxml</code><br><img src="http://upload-images.jianshu.io/upload_images/4340772-e7ada87d9ee63707.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="pip install lxml"><br>可参考链接1：<a href="https://www.zhihu.com/question/49221958/answer/115712155" target="_blank" rel="external">https://www.zhihu.com/question/49221958/answer/115712155</a><br>可参考链接2：<a href="http://study.163.com/forum/detail/1002230039.htm" target="_blank" rel="external">http://study.163.com/forum/detail/1002230039.htm</a></p>
<p>竟然就好了！！！！！！！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1503121701573&amp;amp;di=6299ff4b6aefe2b11141cae630eb6da1&amp;amp;imgtype=0&amp;amp;src=http%3A%2F%2Fimage.lxway.com%2Fupload%2Fa%2F1b%2Fa1bc79d237bf05535330b1af1dc28afc_thumb.jpg&quot; alt=&quot;beautifulsoup&amp;amp;&amp;amp;BS64&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/HuangCongQing/python-NLP/blob/master/%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用beautifulsoup写的没错的小爬虫地址：&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-4cd3cf67dceb2a50.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;前言: Beautiful Soup 3 目前已经停止开发，推荐在现在的项目中使用Beautiful Soup 4，不过它已经被移植到BS4了，也就是说导入时我们需要 import bs4 。所以这里我们用的版本是 Beautiful Soup 4.3.2 (简称BS4)，另外据说 BS4 对 Python3 的支持不够好，虽然我用的Python35，如果有小伙伴用的是 Python3 版本，可以考虑下载 BS3 版本。&lt;br&gt;自己搞网页数据爬取时，需要 &lt;code&gt;from bs4 import BeautifulSoup&lt;/code&gt;,所以在py程序运行中遇到了一系列错误…….&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python35下的NLTK工具的安装和配置</title>
    <link href="http://yoursite.com/2017/08/17/python35%E4%B8%8B%E7%9A%84NLTK%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2017/08/17/python35下的NLTK工具的安装和配置/</id>
    <published>2017-08-17T09:50:33.000Z</published>
    <updated>2018-03-11T17:10:19.454Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>首先要说明的是我的安装环境是win7 64位，安装了python35</p>
</blockquote>
<ul>
<li>官网下载NLTK<br><a href="https://pypi.python.org/pypi/nltk" target="_blank" rel="external">https://pypi.python.org/pypi/nltk</a><br>我安装的是nltk-3.2.4.tar.gz<br>安装上述软件，我的安装目录是<br>D:\Program Files\Computer-learning<br>解压缩nltk-3.2.4.tar.gz，在 <strong>cmd</strong> 中进入到<code>D:\Program Files\Computer-learning\nltk-3.2.4</code>目录，执行</li>
<li><code>python setup.py install</code></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-8ba2cc3afcd51f17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="python setup.py install"><br><a id="more"></a><br>成功标志：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Installed c:\users\hasee\appdata\local\programs\python\python35\lib\site-package</div><div class="line">s\six-1.10.0-py3.5.egg</div><div class="line">Finished processing dependencies for nltk==3.2.4</div></pre></td></tr></table></figure></p>
<p>安装完成后，在IDLE中运行：执行下面两行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">import nltk</div><div class="line">nltk.download()</div></pre></td></tr></table></figure>
<p>出现一个NLTK Downloader对话框，修改Download Diretory（E盘或其他盘符下），我放在了C:\Users\hasee\AppData\Roaming\nltk_data。点击<code>all</code>开始下载，如下<br><img src="http://upload-images.jianshu.io/upload_images/4340772-add2072ff4e4636b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<p>下载完成后<br><img src="http://upload-images.jianshu.io/upload_images/4340772-d53a863c565b0757.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<p>下载慢还可以到<strong>NLTK Corpora</strong> <a href="http://nltk.org/nltk_data/" target="_blank" rel="external">http://nltk.org/nltk_data/</a>手工下载缺失的，然后放到Download Diretory，zip别删。重装系统后nltk_data文件夹可以保留，避免重复下载。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;首先要说明的是我的安装环境是win7 64位，安装了python35&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;官网下载NLTK&lt;br&gt;&lt;a href=&quot;https://pypi.python.org/pypi/nltk&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://pypi.python.org/pypi/nltk&lt;/a&gt;&lt;br&gt;我安装的是nltk-3.2.4.tar.gz&lt;br&gt;安装上述软件，我的安装目录是&lt;br&gt;D:\Program Files\Computer-learning&lt;br&gt;解压缩nltk-3.2.4.tar.gz，在 &lt;strong&gt;cmd&lt;/strong&gt; 中进入到&lt;code&gt;D:\Program Files\Computer-learning\nltk-3.2.4&lt;/code&gt;目录，执行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python setup.py install&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-8ba2cc3afcd51f17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;python setup.py install&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
</feed>
