<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>黄重庆</title>
  <subtitle>Never Never Give Up</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-03-11T17:29:11.185Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>黄重庆</name>
    <email>1756260160@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>25分钟学会使用MySQL基本操作</title>
    <link href="http://yoursite.com/2017/09/17/25%E5%88%86%E9%92%9F%E5%AD%A6%E4%BC%9A%E4%BD%BF%E7%94%A8MySQL%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2017/09/17/25分钟学会使用MySQL基本操作/</id>
    <published>2017-09-17T09:50:33.000Z</published>
    <updated>2018-03-11T17:29:11.185Z</updated>
    
    <content type="html"><![CDATA[<p>###1 MySQL登录与退出</p>
<ul>
<li><p>MySQL登陆<br><code>MySQL 参数</code>(在cmd命令框中输入)</p>
</li>
<li><p>登陆MySql<br><code>mysql -uroot -p -P3306 -h127.0.0.1</code></p>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-7c1ec9cb6fcb9921.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mysql -uroot -p -P3306 -h127.0.0.1"><br><a id="more"></a><br><img src="http://upload-images.jianshu.io/upload_images/4340772-6b56090b52efc767.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mysql 参数"></p>
<ul>
<li>MySql退出<br><img src="http://upload-images.jianshu.io/upload_images/4340772-5a2dd466d42f95ee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="退出"></li>
<li>MySQL修改root密码</li>
</ul>
<p><a href="http://www.jb51.net/article/39454.htm" target="_blank" rel="external">MySQL修改root密码链接
</a></p>
<h3 id="2-修改MySQL提示符及语法规范"><a href="#2-修改MySQL提示符及语法规范" class="headerlink" title="2  修改MySQL提示符及语法规范"></a>2  修改MySQL提示符及语法规范</h3><p>先说一个小技巧，cmd命令框清屏用<code>cls</code></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-ea34478e4f1030e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="cls清屏"></p>
<p>首先说一下神魔是MySql提示符？看下面图就懂了</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-fa496e99df25a6a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="MySQL提示符"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-13cf08b40ca40733.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改MySql提示符"></p>
<ul>
<li>连接客户端即登录时通过参数指定<br><code>mysql -uroot -proot --prompt 提示符</code></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-86199cda8dac41ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mysql -uroot -p -P3306 -h127.0.0.1 --prompt 提示符"></p>
<ul>
<li>连接上客户端后，通过prompt命令修改<br><code>prompt  提示符</code></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-577a3f68f16f5150.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="prompt"></p>
<p>下面是MySql具体可更更改的操作</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-64b55a857963e5c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="\D\d\h\u"><br><code>PROMPT \u@\h \d</code>  修改为用户名@主机名 数据库名称</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-798f09b8a1438de4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h3 id="3-MySQL常用命令"><a href="#3-MySQL常用命令" class="headerlink" title="3 MySQL常用命令"></a>3 MySQL常用命令</h3><p><img src="http://upload-images.jianshu.io/upload_images/4340772-936a9fabf9a0af5b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="常用命令"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-bc08f795b85880b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="实例"></p>
<h3 id="4-MySQL语句规范"><a href="#4-MySQL语句规范" class="headerlink" title="4 MySQL语句规范"></a>4 MySQL语句规范</h3><p><img src="http://upload-images.jianshu.io/upload_images/4340772-c25a2befce1ae7dc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="语句规范"><br>特别注意分号，因为不加分号，这段语句不执行，如下图</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-e9ab52531a4419b2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=";"></p>
<h3 id="5-数据库操作"><a href="#5-数据库操作" class="headerlink" title="5 数据库操作"></a>5 数据库操作</h3><p>{}必选项，[]可选项</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-59cae233ede058c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-e1ca842ee156e56f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="CREATE DATABASE 数据库名"></p>
<p>数据库怎么看呢？<br>当前服务器下到底有多少数据库(正确安装之后，默认有四个数据库)<br><code>show DATABASES</code><br><img src="http://upload-images.jianshu.io/upload_images/4340772-56c467cc0a19e478.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Database lists"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-4d2fda01dbf809ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="show DATABASES"></p>
<ul>
<li>创建数据库编码方式是什么？不加，默认是配置文件设置的编码方式</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-c8a8ebaca6a6c4d3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="utf8"></p>
<ul>
<li>如果想创建一个GBK的编码方式的数据库怎么来？<br><code>CREATE DATABASE IF NOT EXISTS Hello2 CHARACTER SET gbk</code><br><img src="http://upload-images.jianshu.io/upload_images/4340772-01ba35bd92c4e8df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ul>
<ul>
<li>修改数据库<ul>
<li>修改编码方式<br><code>ALTER DATABASE Hello2 CHARACTER  SET utf8</code></li>
</ul>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-8c9da553a5117bca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-7933a1ab59c861d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>删除数据库<br>DROP DATABASE 数据库名</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-987b749ee414e464.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="drop DATABASE"></p>
<p>基本操作就这样了！<br>回顾下重点：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-71ef9c3830a0f69f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="重点"></p>
<h2 id="对了，还要说下，写SQL每句语句的后面，一定要加分号-哦！！"><a href="#对了，还要说下，写SQL每句语句的后面，一定要加分号-哦！！" class="headerlink" title="对了，还要说下，写SQL每句语句的后面，一定要加分号 ;哦！！"></a>对了，还要说下，写SQL每句语句的后面，一定要加<strong>分号 ;</strong>哦！！</h2><ul>
<li>可参考的常用命令链接：</li>
</ul>
<p><a href="http://www.cnblogs.com/hateislove214/archive/2010/11/05/1869889.html" target="_blank" rel="external">MYSQL常用命令</a><br><a href="https://www.baidu.com/link?url=OasvgcmO7JPV5_IhO4prskNhbV7VpGAggdekFmJdt95uBgezFkZcocFE3x5tK4xdL8-WjXhp9qBvsWoivigkLGPF_hgwGkBB5B4U1fIhVcW&amp;wd=&amp;eqid=a07b6514000420a70000000559bdc633" target="_blank" rel="external"><em>Mysql命令</em>大全 - 宁静.致远 - 博客园</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###1 MySQL登录与退出&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;MySQL登陆&lt;br&gt;&lt;code&gt;MySQL 参数&lt;/code&gt;(在cmd命令框中输入)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;登陆MySql&lt;br&gt;&lt;code&gt;mysql -uroot -p -P3306 -h127.0.0.1&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-7c1ec9cb6fcb9921.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;mysql -uroot -p -P3306 -h127.0.0.1&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>coursera视频无法播放（翻墙也无效）？看这里就全懂了</title>
    <link href="http://yoursite.com/2017/09/17/coursera%E8%A7%86%E9%A2%91%E6%97%A0%E6%B3%95%E6%92%AD%E6%94%BE%EF%BC%88%E7%BF%BB%E5%A2%99%E4%B9%9F%E6%97%A0%E6%95%88%EF%BC%89%EF%BC%9F%E7%9C%8B%E8%BF%99%E9%87%8C%E5%B0%B1%E5%85%A8%E6%87%82%E4%BA%86/"/>
    <id>http://yoursite.com/2017/09/17/coursera视频无法播放（翻墙也无效）？看这里就全懂了/</id>
    <published>2017-09-17T09:50:33.000Z</published>
    <updated>2018-03-11T17:30:43.659Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/4340772-b5cbc22de794143d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Coursera"></p>
<blockquote>
<p>Coursera是国外的一款非常有名的公开课网站，值得大家一起学习,但有时候要在coursera上看个课程，发现看不了，爬墙各种方法都试了，特意在网上搜集了解决方案，亲测有效，现在特意记录下来，希望能帮到你。好好学习，天天向上。</p>
</blockquote>
<p>该方法针对Windows用户(<strong>win7，win8，win10</strong>)，亲测有效。<strong>Mac电脑</strong>的可参考我最后发的链接<br><a id="more"></a></p>
<ol>
<li>用管理员权限记事本打开host文件，地址如下: <code>C:\Windows\System32\drivers\etc</code>，（以文本格式打开hosts就好）</li>
</ol>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-35d38c5130f91d51.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="hosts"></p>
<ol>
<li>将如下内容复制到文件末尾<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">52.84.246.90    d3c33hcgiwev3.cloudfront.net</div><div class="line">52.84.246.252    d3c33hcgiwev3.cloudfront.net</div><div class="line">52.84.246.144    d3c33hcgiwev3.cloudfront.net</div><div class="line">52.84.246.72    d3c33hcgiwev3.cloudfront.net</div><div class="line">52.84.246.106    d3c33hcgiwev3.cloudfront.net</div><div class="line">52.84.246.135    d3c33hcgiwev3.cloudfront.net</div><div class="line">52.84.246.114    d3c33hcgiwev3.cloudfront.net</div><div class="line">52.84.246.90    d3c33hcgiwev3.cloudfront.net</div><div class="line">52.84.246.227    d3c33hcgiwev3.cloudfront.net</div></pre></td></tr></table></figure>
</li>
</ol>
<p>如下图：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-a389baea939beb8f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="解决DNS污染"></p>
<ol>
<li>打开cmd命令行，输入如下命令<br><code>ipconfig/flushdns</code></li>
</ol>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-36fdba9a9a223084.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ipconfig/flushdns"></p>
<ol>
<li>刷新页面即可，终于可以看视频啦</li>
</ol>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-0310da00d6088fa3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="看看看"></p>
<p>参考链接：<br><a href="http://www.baidu.com/link?url=f9TFhOk7zUavTew3dtbGN0XmdvRtgX6RQAcSG58fWFvWdJb0FjDbEX1pr1PQWGibzLMTrLmodUcwSRqDzAUjt_" target="_blank" rel="external"><em>coursera 视频</em>总是缓冲或者<em>无法观看</em>,有什么方法解决? - 知乎</a><br><a href="http://blog.csdn.net/sinat_15443203/article/details/71694554" target="_blank" rel="external">coursera无法观看视频解决方法</a><br><a href="https://jingyan.baidu.com/article/6f2f55a14059eeb5b93e6cab.html" target="_blank" rel="external">Coursera无法观看课程解决方案-百度经验</a></p>
<h2 id="Mac和windows国内coursera官网看不了视频怎么办"><a href="#Mac和windows国内coursera官网看不了视频怎么办" class="headerlink" title="Mac和windows国内coursera官网看不了视频怎么办**"></a><a href="http://jingyan.baidu.com/article/e6c8503c5ea596e54f1a18a8.html" target="_blank" rel="external">Mac和windows国内coursera官网看不了视频怎么办</a>**</h2><p>好看的人儿，点个喜欢❤ 你会更好看哦~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-b5cbc22de794143d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Coursera&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Coursera是国外的一款非常有名的公开课网站，值得大家一起学习,但有时候要在coursera上看个课程，发现看不了，爬墙各种方法都试了，特意在网上搜集了解决方案，亲测有效，现在特意记录下来，希望能帮到你。好好学习，天天向上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该方法针对Windows用户(&lt;strong&gt;win7，win8，win10&lt;/strong&gt;)，亲测有效。&lt;strong&gt;Mac电脑&lt;/strong&gt;的可参考我最后发的链接&lt;br&gt;
    
    </summary>
    
    
      <category term="技术杂谈" scheme="http://yoursite.com/tags/%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%88/"/>
    
      <category term="coursera" scheme="http://yoursite.com/tags/coursera/"/>
    
  </entry>
  
  <entry>
    <title>吴恩达-神经网络和深度学习（ 第三周 浅层神经网络：）</title>
    <link href="http://yoursite.com/2017/09/14/%E5%90%B4%E6%81%A9%E8%BE%BE-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%92%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%88-%E7%AC%AC%E4%B8%89%E5%91%A8--%E6%B5%85%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%9A%EF%BC%89/"/>
    <id>http://yoursite.com/2017/09/14/吴恩达-神经网络和深度学习（-第三周--浅层神经网络：）/</id>
    <published>2017-09-14T09:50:33.000Z</published>
    <updated>2018-03-11T17:28:02.378Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>学习使用前向传播和反向传播搭建出有一个隐藏层的神经网络。</p>
</blockquote>
<ul>
<li>hidden layer Neural Network</li>
</ul>
<p>###3.1  神经网络概览</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-9d7700eb910aea5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Neutral Network"></p>
<a id="more"></a>
<p>###3.2  神经网络表示</p>
<ul>
<li>双层神经网络（只有一个隐藏层，单隐层神经网络）</li>
<li>输入层-四个隐藏层单元-输出层</li>
<li>双层神经网络。不把输入层看做一个标准的层 </li>
<li>这里的隐藏层有两个相关的参数w和b,使用上标[1]表示这些参数，w是4x3矩阵,b是4x1向量（4代表有四个节点或者隐藏单元，3来自于3个输入特征）</li>
<li>输出层也有相关的参数w^[2]  (1x4,隐藏层有四个隐藏单元，输出层只有一个单元),b^[2]【1x1】</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-bebf4cc9908dab48.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="神经网络表示"></p>
<p>###3.3  计算神经网络的输出</p>
<blockquote>
<p>gengrate 生成<br>compute 计算<br>matrix 矩阵</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-986017821bad5a5f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-efce896fa844db88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<ul>
<li>神经网络只不过是计算这些步骤很多次</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-fd26de856acca219.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-45e07aeec5b0a344.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>###3.4  多个例子中的向量化</p>
<blockquote>
<p>训练样本横向堆叠构成矩阵X</p>
</blockquote>
<ul>
<li>m个训练样本</li>
<li>用激活函数来表示这些式子<code>a^[2](i)</code>【i是训练样本i,2指的是第二层】</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-449861dd7dee81f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<ul>
<li>一个for循环遍历所有的m训练样本</li>
<li>向量化</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-cc5e1fa3aaa3d854.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>###3.5  向量化实现的解释</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-cd2684cca6922347.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>这就是对不同训练样本向量化的神经网络，接下来，我们目前为止我们一直都是用sigmoid函数</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-4ae6e75a8b9b04ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>###3.6  激活函数（activation function）</p>
<blockquote>
<p>如何使用不同种类的激活函数，simoid只是其中的一个可能选择</p>
</blockquote>
<ul>
<li>为了搭建神经网络，可以选择的是选择隐层里用哪个激活函数，还有神经网络的输出单元用什么激活函数<br>有一个函数总比sigmoid函数表现好，那就是a=tanh(z)（双曲正切函数），<br>函数介于+1和-1之间，意味着激活函数的平均值更接近0</li>
</ul>
<p>但 二分分类是，输出层最好用sigmoid,因为y输出介于0-1更合理</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-4f9007ef5b15cf2e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>不过，sigmoid和tanh函数都有一个缺点，如果z非常大，或非常小，函数的斜率很接近0，这样会拖慢梯度下降算法</p>
<p>修正线性单元（ReLU）就派上用场了（z为正，斜率为1，为负，斜率为0）</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-baf970658fb23bc6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>在选择激活函数时有一些经验法则</p>
<ul>
<li>如果你的输出值是0或1，如果你在做二元分类，那么sigmoid很适合作为输出层的激活函数，然后其他所有单元都用ReUL。<br>如果你不确定隐层应该用哪个，那就用ReUL作为激活函数</li>
</ul>
<p>还有个带泄露的ReUL（z小于0是有一个缓缓的斜率，）通常比ReUL激活函数好，不过实际中使用的频率没那么高</p>
<p>在实践中使用ReUL激活函数，学习速度通常会快得多，比使用tanh或sigmoid激活函数快得多，因为ReUL没有函数斜率接近0时，减慢学习速度的学习速度的效应</p>
<p>说一下几个激活函数</p>
<ul>
<li><p>sigmoid<br>除非用在二元分类的输出层，不然绝对不要用，或者几乎从来不会用</p>
</li>
<li><p>最常用的默认激活函数ReLU，不确定用哪个，就用这个，或者带泄露的ReLU（max(0.01z, z)）</p>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-a12eb94021d55e07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>###3.7  为什么需要非线性激活函数（nonlinear activation function）？</p>
<p>如果用线性激活函数（linear activation function）或者叫做恒等激活函数，那么神经网络只是把输入线性组合再输出，<br>无论你的神经网络多少层，一直在做的只是计算线性激活函数，和没有任何的标准Logistic回归是一样的，因为两个线性函数组合的本身就是线性函数，除非你引用非线性，</p>
<ul>
<li>只有一个地方可以使用线性激活函数g（z） = z，就是你要机器学习的是回归问题，所以y是一个实数，</li>
<li>线性激活函数不可能用在隐藏层（除压缩），要用，也是用在输出层，<br><img src="http://upload-images.jianshu.io/upload_images/4340772-eddcd1e14e9259c8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></li>
</ul>
<p>###3.8  激活函数的导数</p>
<p>接下来讨论梯度下降的基础，如何估计，如何计算单个激活函数的导数，斜率，</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-14b2e0de1b445a63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-6e9e705bcb8f3e77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-90a6b87258f2585e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-efaa0dcfff5f9aa0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>###3.9  神经网络的梯度下降法<br>梯度下降算法的具体实现，如何处理单隐层神经网络，<br>提供所需的方程，来实现反向传播，或者说梯度下降算法，</p>
<p>keepdims = true(确保python输出的是矩阵)</p>
<ul>
<li>正向传播 4个方程</li>
<li>反向传播 6个方程</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-a29e026c3008e8cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>###3.10  （选修）直观理解反向传播</p>
<p>###3.11  随机初始化</p>
<p>当你训练神经网络时，随机初始化权重非常重要，对于logistic回归，可以将权重初始化为零，<br>但如果将神经网络各参数数组初始化为0，再使用梯度下降算法（gredient descent），那会完全失效</p>
<p>因为我们需要两个不同的隐藏单元，去计算不同的函数，<strong>这个问题的解决方案是随机初始化所有参数，</strong></p>
<ul>
<li>可以令W^[1] = np.random,randn, 这可以产生参数为（2， 2）的高斯分布随机变量，然后你再乘以一个很小的数字【因为通常喜欢把权重矩阵初始化非常小的随机数】，所有你将权重初始化很小的随机数，</li>
<li>如果训练单隐层神经网络时，没有太多的隐藏层，设为0.01还可以，但当训练一个很深的神经网络时，可能要试试0.01以外的常数，</li>
<li>把b初始化0是可以的</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-4f5e7d7d5861f341.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="随机初始化"></p>
<blockquote>
<p>所以，在这周的视频里，你知道如何设立单隐层神经网络，初始化参数，并用正向传播计算预测值，还有计算导数，然后使用梯度下降，反向传播</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;学习使用前向传播和反向传播搭建出有一个隐藏层的神经网络。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;hidden layer Neural Network&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;###3.1  神经网络概览&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-9d7700eb910aea5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Neutral Network&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="神经网络" scheme="http://yoursite.com/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
      <category term="深度学习" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>看透神经网络和深度学习的脉络，终于不迷糊了</title>
    <link href="http://yoursite.com/2017/09/09/%E7%9C%8B%E9%80%8F%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%92%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E8%84%89%E7%BB%9C%EF%BC%8C%E7%BB%88%E4%BA%8E%E4%B8%8D%E8%BF%B7%E7%B3%8A%E4%BA%86/"/>
    <id>http://yoursite.com/2017/09/09/看透神经网络和深度学习的脉络，终于不迷糊了/</id>
    <published>2017-09-09T09:50:33.000Z</published>
    <updated>2018-03-11T17:25:05.865Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>神经网络和深度学习近几年好多人在学习，但是他们具体是什么关系，又有什么联系，众说纷纭，<br>有人说：深度学习可以理解成用深度神经网络（DNN，Deep Neural Network）来进行机器学习，<br>有人说：深度学习是一种方法，神经网络是个模型。用了深度学习可以有效解决层数多的网络不好学习的问题<br>还有人说：本是同根生，相煎何太急<br>接下来，下面这张图，能帮助大家更好地学习<strong>神经网络和深度学习</strong>，掌握理清脉络</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-bb38c57504d4a1a1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>线性回归是最基本的<br>注释：红色是基础</p>
<ul>
<li><p>ＮＬＰ自然语言处理(nlp,natural language processing)</p>
</li>
<li><p>机器学习(machine learning)</p>
</li>
<li>ＣＮＮ卷积神经网络（convolutional neural network）</li>
<li>ＲＮＮ递归神经网络(Recurrent Neural Network)</li>
<li>LSTM Long Short Term Memory长的短时记忆长短时记忆长短时记忆模型<a id="more"></a>
</li>
</ul>
<blockquote>
<p>CNN：卷积神经网络【<strong>空间</strong>】<br>RNN: 递归神经网络【<strong>时域</strong>】<br>神经网络中，隐含层网络的输出作为下一时刻自身的输入–&gt;一级一级会衰弱–》需要记忆封存的结构（LSTM）<br>RNN-&gt;LSTM【记忆量的扩充】</p>
<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><ul>
<li>非线性的运算关系叠加起来就是一个<strong>神经网络</strong></li>
<li>神经网络到CNN，RNN（空间和时间的扩展）</li>
<li>卷积核：二维的处理算组，图像的处理</li>
<li>神经网络到CNN就是一维到二维三维的转化，在空间上进行扩展</li>
<li>神经网络到RNN（神经网络一维有个时间的延续，比如说语音）</li>
<li>记忆GATE-根据输入的信息判断哪些是需要提前记下来的，在之后处理的时候选择要不要释放</li>
</ul>
</blockquote>
<p>小象学院公开课具体讲述了这一内容，下面是视频链接：<br><a href="http://www.chinahadoop.cn/course/854/learn#lesson/16579" target="_blank" rel="external">视频连接</a></p>
<p>本文转载自微信公众号：<strong>重庆小哥稳</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-cd40a159c0f512b4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="重庆.jpg"></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;神经网络和深度学习近几年好多人在学习，但是他们具体是什么关系，又有什么联系，众说纷纭，&lt;br&gt;有人说：深度学习可以理解成用深度神经网络（DNN，Deep Neural Network）来进行机器学习，&lt;br&gt;有人说：深度学习是一种方法，神经网络是个模型。用了深度学习可以有效解决层数多的网络不好学习的问题&lt;br&gt;还有人说：本是同根生，相煎何太急&lt;br&gt;接下来，下面这张图，能帮助大家更好地学习&lt;strong&gt;神经网络和深度学习&lt;/strong&gt;，掌握理清脉络&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-bb38c57504d4a1a1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;mark&quot;&gt;&lt;br&gt;线性回归是最基本的&lt;br&gt;注释：红色是基础&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ＮＬＰ自然语言处理(nlp,natural language processing)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;机器学习(machine learning)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;ＣＮＮ卷积神经网络（convolutional neural network）&lt;/li&gt;
&lt;li&gt;ＲＮＮ递归神经网络(Recurrent Neural Network)&lt;/li&gt;
&lt;li&gt;LSTM Long Short Term Memory长的短时记忆长短时记忆长短时记忆模型
    
    </summary>
    
    
      <category term="神经网络" scheme="http://yoursite.com/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
      <category term="深度学习" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>吴恩达-神经网络和深度学习(第二周神经网络基础)</title>
    <link href="http://yoursite.com/2017/09/07/%E5%90%B4%E6%81%A9%E8%BE%BE-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%92%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0(%E7%AC%AC%E4%BA%8C%E5%91%A8%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80)/"/>
    <id>http://yoursite.com/2017/09/07/吴恩达-神经网络和深度学习(第二周神经网络基础)/</id>
    <published>2017-09-07T09:50:33.000Z</published>
    <updated>2018-03-11T17:23:40.266Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>学习如何用神经网络的思维模式提出机器学习问题、如何使用向量化加速你的模型。</p>
</blockquote>
<ul>
<li>先介绍一些名词<ul>
<li>training set (训练集)</li>
<li>feature vector(特征向量)</li>
<li>classifier(分类器)</li>
<li>calculus（微积分）</li>
<li>循环（loop）</li>
<li>数据集（datasets）</li>
<li>vectorization (向量化)</li>
<li>matrix(矩阵)</li>
<li>vector(向量) <a id="more"></a></li>
</ul>
</li>
<li>本周用到的一些符号【Notation】<ul>
<li>（x,y）表示一个单独的样本</li>
<li>x是xn维的特征向量</li>
<li>标签y值为0/1</li>
<li>训练集由m个训练样本构成</li>
<li>(x^(1), y^(1))表示样本一输入和输出，</li>
<li>{x^(1), y^(1),…..x^(n), y^(n).}整个训练集</li>
<li>测试集的 样本数。训练集的样本数</li>
<li>矩阵也可表示训练集输入x,输出标签y</li>
<li>注意：<strong>训练样本作为行向量堆叠</strong></li>
<li>输出y是1xm矩阵</li>
</ul>
</li>
</ul>
<p>如下图：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-ace3010bd66a3dc3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Notation"></p>
<h3 id="二分分类【Binary-Classification】"><a href="#二分分类【Binary-Classification】" class="headerlink" title="二分分类【Binary Classification】"></a>二分分类【Binary Classification】</h3><ul>
<li><p>神经网络的计算过程中，通常有一个正向过程【forward  pass】（或者正向传播步骤）,接着有一个反向过程【backward pass】(或者反向传播步骤)</p>
</li>
<li><p>logistic回归是一个用于二分分类的算法</p>
</li>
<li><p>计算机保存图片，要保存<strong>三个独立矩阵</strong>（Red红 blue绿 Green蓝）<br>如果有64X64的一张图片，则<strong>输入向量的维度n=64X64X3=12288</strong></p>
</li>
<li><p>在二分分类问题中，目标是训练出一个<strong>分类器</strong>，他以图片的特征向量x作为输入，，预测输出的结果y(<strong>只有两个值</strong>)</p>
</li>
</ul>
<h3 id="logistic回归"><a href="#logistic回归" class="headerlink" title="logistic回归"></a>logistic回归</h3><p>这是一个学习算法，用在监督学习中，<br>如下图：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-be2183af3f59d818.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="logistic"></p>
<h3 id="logistic回归损失函数"><a href="#logistic回归损失函数" class="headerlink" title="logistic回归损失函数"></a>logistic回归损失函数</h3><p>损失函数【error function】在单个训练样本中定义的，他衡量了在单个训练样本上的表现<br>成本函数【cost function 】在全体训练集样本下的表现–&gt;对损失函数求和<br>对以上函数要找到合适的<strong>参数w和b</strong><br>成本函数用于衡量参数w和b的效果</p>
<p>如下图：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-d24d5e999f6e5713.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br><img src="http://upload-images.jianshu.io/upload_images/4340772-0427fc753f631b58.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<h3 id="梯度下降法【Gradient-Descent】"><a href="#梯度下降法【Gradient-Descent】" class="headerlink" title="梯度下降法【Gradient Descent】"></a>梯度下降法【Gradient Descent】</h3><ul>
<li>训练或学习训练集上的参数w和b<br><img src="http://upload-images.jianshu.io/upload_images/4340772-8acc29d69d9d10d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="梯度下降法"><br><img src="http://upload-images.jianshu.io/upload_images/4340772-fd93c51f67066567.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="求最小值"></li>
</ul>
<h3 id="导数"><a href="#导数" class="headerlink" title="导数"></a>导数</h3><p>等于= be equal to </p>
<ul>
<li>pluse</li>
</ul>
<ul>
<li>minus<br>X times<br>/ divide</li>
</ul>
<h3 id="计算图"><a href="#计算图" class="headerlink" title="计算图"></a>计算图</h3><blockquote>
<p>可以说，一个神经网络的计算都是按照前向或者反向传播过程来实现的，<br>首先计算出神经网络的输出<br>首先计算出神经网络的输出，紧接着一个反向传播操作，后者我们用来计算出对应的梯度或者导数，流程图解释了为什么这样实现<br>流程图，是用蓝色箭头画出来的的，从左到右的计算</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-e97c6467621cc516.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="流程图"></p>
<h3 id="计算图的导数计算"><a href="#计算图的导数计算" class="headerlink" title="计算图的导数计算"></a>计算图的导数计算</h3><p>从右到左计算导数<br><img src="http://upload-images.jianshu.io/upload_images/4340772-da5ef2c60f6ae2d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<h3 id="logistic回归中的梯度下降法（用偏导数实现）"><a href="#logistic回归中的梯度下降法（用偏导数实现）" class="headerlink" title="logistic回归中的梯度下降法（用偏导数实现）"></a>logistic回归中的梯度下降法（用偏导数实现）</h3><p>导数流程图来计算梯度用偏导数有点大材小用，但对理解比较好<br><img src="http://upload-images.jianshu.io/upload_images/4340772-8eea77bbbe6c0632.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<h3 id="m个样本的梯度下降"><a href="#m个样本的梯度下降" class="headerlink" title="m个样本的梯度下降"></a>m个样本的梯度下降</h3><p>运用到整个样本集中<br><img src="http://upload-images.jianshu.io/upload_images/4340772-a457f3d3e4260106.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="for循环"></p>
<h3 id="向量化"><a href="#向量化" class="headerlink" title="向量化"></a>向量化</h3><p>循环很低效率，用向量化来加速运算(np.function)<br><code>z=np.dot(w, x) + b</code><br><img src="http://upload-images.jianshu.io/upload_images/4340772-e902e7f515075452.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>可能有人说：可扩展深度学习实现是在GPU(图像处理单元)上做的，而我们做的再jupyter notebook上（CPU）<br>但GPU和CPU都有并行化的指令，SIMD单指令流多数据流，这点对GPU和CPU上面是成立的，只是GPU更擅长SIMD运算</p>
<ul>
<li>for循环能不用就不用，如果可以使用内置函数或者其他方法计算循环，会比for循环更快<br><img src="http://upload-images.jianshu.io/upload_images/4340772-a95281da70ed860e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br><img src="http://upload-images.jianshu.io/upload_images/4340772-2e0b31d42927905e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></li>
</ul>
<h3 id="进一步向量化logistic回归"><a href="#进一步向量化logistic回归" class="headerlink" title="进一步向量化logistic回归"></a>进一步向量化logistic回归</h3><p><img src="http://upload-images.jianshu.io/upload_images/4340772-a3e45618ebeadbda.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<h3 id="向量化logistic回归的梯度输出"><a href="#向量化logistic回归的梯度输出" class="headerlink" title="向量化logistic回归的梯度输出"></a>向量化logistic回归的梯度输出</h3><p><img src="http://upload-images.jianshu.io/upload_images/4340772-311ff1bbbbce2c8d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>这就得到高度向量化的，高效的logistic回归梯度下降法</p>
<h3 id="python中的广播（使python和Numpy部分代码更高效）"><a href="#python中的广播（使python和Numpy部分代码更高效）" class="headerlink" title="python中的广播（使python和Numpy部分代码更高效）"></a>python中的广播（使python和Numpy部分代码更高效）</h3><p>广播（broadcasting）对列向量，行向量都有效<br>例子：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-114b9bd2669c3e05.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-61ed179a1a902989.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<p>实现神经网络算法时主要用到的广播形式<br><img src="http://upload-images.jianshu.io/upload_images/4340772-65f31aa1feadaf7f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<h3 id="关于python-numpy向量的说明"><a href="#关于python-numpy向量的说明" class="headerlink" title="关于python/numpy向量的说明"></a>关于python/numpy向量的说明</h3><p>千万不要用秩为1的数组<br>随意插入assert()声明，要仔细检查矩阵和数组的维度<br>不要害怕调用reshape,来确保你的矩阵和向量</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-2fa688c563527064.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<p>可以排除，简化甚至消灭代码中各种奇怪的bug</p>
<p>学习链接<br><a href="http://www.missshi.cn/api/view/blog/59aa08fee519f50d04000170" target="_blank" rel="external">4. Logistic代码实战</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;学习如何用神经网络的思维模式提出机器学习问题、如何使用向量化加速你的模型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;先介绍一些名词&lt;ul&gt;
&lt;li&gt;training set (训练集)&lt;/li&gt;
&lt;li&gt;feature vector(特征向量)&lt;/li&gt;
&lt;li&gt;classifier(分类器)&lt;/li&gt;
&lt;li&gt;calculus（微积分）&lt;/li&gt;
&lt;li&gt;循环（loop）&lt;/li&gt;
&lt;li&gt;数据集（datasets）&lt;/li&gt;
&lt;li&gt;vectorization (向量化)&lt;/li&gt;
&lt;li&gt;matrix(矩阵)&lt;/li&gt;
&lt;li&gt;vector(向量)
    
    </summary>
    
    
      <category term="神经网络" scheme="http://yoursite.com/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
      <category term="深度学习" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>吴恩达-神经网络和深度学习(第一周深度学习概论)</title>
    <link href="http://yoursite.com/2017/09/01/%E5%90%B4%E6%81%A9%E8%BE%BE-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%92%8C%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0(%E7%AC%AC%E4%B8%80%E5%91%A8%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%AE%BA)/"/>
    <id>http://yoursite.com/2017/09/01/吴恩达-神经网络和深度学习(第一周深度学习概论)/</id>
    <published>2017-09-01T09:50:33.000Z</published>
    <updated>2018-03-11T17:24:10.467Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>学习驱动神经网络兴起的主要技术趋势，了解现今深度学习在哪里应用、如何应用。</p>
<p>8 月 8 日，吴恩达正式发布了 Deepleanring.ai——基于 Coursera 的系列深度学习课程，但在中国无法访问这套课程（除非你连VPN），还有Coursera中是英文授课，就有点尴尬。幸好，之后，吴恩达和网易合作，将课程内容免费放到网易的教育平台上.所以，终于有机会学这门课了！特记下笔记，以备忘！</p>
</blockquote>
<ul>
<li>可以先看一下人工智能的完整学习图<br><img src="http://upload-images.jianshu.io/upload_images/4340772-21510de02952b0e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="原理"></li>
</ul>
<blockquote>
<p>有一起学习的同学，可以联系我，一起进步哦！！！<br><a id="more"></a><br><a href="https://www.coursera.org/specializations/deep-learning" target="_blank" rel="external">Coursera学习Deep Learning Specialization</a><br><a href="https://study.163.com/my#/smarts" target="_blank" rel="external">网易云学习地址</a></p>
</blockquote>
<h3 id="什么是神经网络"><a href="#什么是神经网络" class="headerlink" title="什么是神经网络"></a>什么是神经网络</h3><p>由输入到输出<br>修正线性单元（ReLU）</p>
<h3 id="用神经网络进行监督学习"><a href="#用神经网络进行监督学习" class="headerlink" title="用神经网络进行监督学习"></a>用神经网络进行监督学习</h3><p>神经网络（neutral networks）</p>
<ul>
<li>机器学习–&gt;监督学习</li>
<li><p>监督学习</p>
<ul>
<li>standard NN – 房屋价格预测，广告点金</li>
<li>卷积神经网络（CNN）—图像领域</li>
<li>循环神经网络（RNN）—一维序列，时间，音频(机器翻译，语音变文本)</li>
<li>复杂，混合神经网络（complex,hybrid,NN）—（无人驾驶）<br><img src="http://upload-images.jianshu.io/upload_images/4340772-ad9d565ad67bf421.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="supervised Learning"><br>基本图例：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-3dbe43160a7574c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="神经网络图"></li>
</ul>
</li>
<li><p>结构化数据和非结构化数据</p>
<ul>
<li>结构化数据：数据的数据库</li>
<li>非结构化数据：机器不容易理解的<strong>语音,图片,文本</strong>(用于<strong>语音识别，图像识别，自然语言文字处理</strong>)</li>
</ul>
</li>
</ul>
<p>如下图理解：</p>
<blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-4ba78efd91eadc78.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="结构化数据和非结构化数据"></p>
</blockquote>
<ul>
<li><p>符号规定<br>m–训练集的规模（训练样本的数量）</p>
</li>
<li><p>深度学习进行过程<br><img src="http://upload-images.jianshu.io/upload_images/4340772-f605b811f831e0a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="process"></p>
</li>
</ul>
<p>学完第一周的课程，特意找了一张图片，宏观把控，今后一定非常有用</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-21510de02952b0e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="原理"><br>待续…….</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;学习驱动神经网络兴起的主要技术趋势，了解现今深度学习在哪里应用、如何应用。&lt;/p&gt;
&lt;p&gt;8 月 8 日，吴恩达正式发布了 Deepleanring.ai——基于 Coursera 的系列深度学习课程，但在中国无法访问这套课程（除非你连VPN），还有Coursera中是英文授课，就有点尴尬。幸好，之后，吴恩达和网易合作，将课程内容免费放到网易的教育平台上.所以，终于有机会学这门课了！特记下笔记，以备忘！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;可以先看一下人工智能的完整学习图&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-21510de02952b0e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;原理&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;有一起学习的同学，可以联系我，一起进步哦！！！&lt;br&gt;
    
    </summary>
    
    
      <category term="神经网络" scheme="http://yoursite.com/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
      <category term="深度学习" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>mongoexport导出数据时遇到的种种问题（好坑）</title>
    <link href="http://yoursite.com/2017/08/26/mongoexport%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E7%A7%8D%E7%A7%8D%E9%97%AE%E9%A2%98%EF%BC%88%E5%A5%BD%E5%9D%91%EF%BC%89/"/>
    <id>http://yoursite.com/2017/08/26/mongoexport导出数据时遇到的种种问题（好坑）/</id>
    <published>2017-08-26T09:50:33.000Z</published>
    <updated>2018-03-11T17:12:43.286Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>想导出mongodb数据库里的数据，结果，搞了一天，踩了无数的坑，才终于导出数据，真的，要哭了，赶紧记录下来（说实话，网上有些文章真的随着版本的更新，有些过时了，真的是助我踩坑耶）<br>我主要讲我踩得坑哈，顺便说下！</p>
</blockquote>
<p>首先要开启服务，进入命令框<br><code>NET START MongoDB</code><br>然后进入安装目录（我的安装目录）：<code>cd D:\Program Files\Work\MongoDB\Server\3.4\bin</code>，执行<br><code>mongo</code></p>
<p>执行以上两步后，就可以输入有用的命令了<br>导出数据：<br><code>mongoexport -h 127.0.0.1 -u root -p
 12345 -d taobao -c prodect --type=cvs  -o D:\data\prodect_cvs.dat</code><br>不知上述意思的可以参见： <a href="http://www.cnblogs.com/limingluzhu/p/4323146.html" target="_blank" rel="external">Mongo的导出工具mongoexport介绍</a><br>然后就报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">2017-08-26T15:48:30.940+0800    error connecting to db server: server returned e</div><div class="line">rror on SASL authentication step: Authentication failed.</div></pre></td></tr></table></figure></p>
<p>网上搜了一下，说<strong>–authenticationDatabase admin   这是是必须的，否则会报上述错误：</strong><br>解决办法<br>再添加一串代码： <code>--authenticationDatabase admin</code><br>但是添加了之后还是报相同的错，又搜了一下,看了下面一篇博文</p>
<p><a href="http://blog.csdn.net/allen_jinjie/article/details/9235073" target="_blank" rel="external">mongoDB authentication</a></p>
<blockquote>
<p>连接到admin数据库，在admin数据库上创建一个用户，这个用户保存在admin.system.users中，它的权限比在其它数据库中设置的用户权限更大。（当admin.system.users中一个用户都没有时，即使mongod启动时添加了–auth参数，如果没有在admin数据库中添加用户，此时不进行任何认证还是可以做任何操作，直到在admin.system.users中添加了一个用户。）</p>
</blockquote>
<p>原来是我没<strong>创建一个用户</strong>，<strong>但大家要注意创建用户的命令版本不同，命令也有可能不同</strong>，我就遇到了这个问题，<br><img src="http://upload-images.jianshu.io/upload_images/4340772-89217a2bec8657c5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>mongodb3.X用的方法： <a href="http://blog.csdn.net/unixpro/article/details/47302855" target="_blank" rel="external">mongoDB add user in v3.0 问题的解决（Property ‘addUser’ of object admin is not a func）</a></p>
<p>我的版本是3.X的，所有我应该执行下面</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">use admin</div><div class="line">db.createUser(</div><div class="line">   &#123;</div><div class="line">     user: &quot;appAdmin&quot;,</div><div class="line">     pwd: &quot;password&quot;,</div><div class="line">     roles:</div><div class="line">       [</div><div class="line">         &#123; role: &quot;readWrite&quot;, db: &quot;config&quot; &#125;,</div><div class="line">         &quot;clusterAdmin&quot;</div><div class="line">       ]</div><div class="line">   &#125;</div><div class="line">)</div></pre></td></tr></table></figure>
<p>旧点的版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">use admin</div><div class="line">db.addUser(&apos;appAdmin&apos;, &apos;password&apos;)</div></pre></td></tr></table></figure></p>
<p>创建完成之后如下图：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-a20c1dedae69628b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<p>然后又遇到一个问题<code>csv mode requires a field list</code><br>,原因是<strong>第一次没有指明要导出的列，所以只是实现一个空的文件</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">user@user-xubuntu:/usr/lib/mongodb/bin$ sudo ./mongoexport -d wx_connect -c template --csv -o template_csv.dat  </div><div class="line">connected to: 127.0.0.1  </div><div class="line">csv mode requires a field list　　　　　　　　　　　　　　　　　　　　　------第一次没有指明要导出的列，所以只是实现一个空的文件  </div><div class="line">user@user-xubuntu:/usr/lib/mongodb/bin$ sudo ./mongoexport -d wx_connect -c template --csv -f msgId,templateId,status,toUser -o template_csv_new.dat  </div><div class="line">connected to: 127.0.0.1  </div><div class="line">exported 28 records　　　　　　　　　　　　　　　　　　　　　　　　　　　------导出成功</div></pre></td></tr></table></figure>
<p>所以在末尾再加上<code>-f 一列的名字</code><br><code>mongoexport -h 127.0.0.1 -u root -p
 12345 -d taobao -c prodect --type=cvs  -o D:\data\prodect_cvs.dat  --authenticationDatabase admin -f shop</code></p>
<p>参考博客：  <a href="http://blog.csdn.net/a25115/article/details/40862293" target="_blank" rel="external">mongoDB的基本操作以及数据的导入导出，备份和恢复</a><br>如下图<br><img src="http://upload-images.jianshu.io/upload_images/4340772-c9b2aac5e519d019.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<blockquote>
<p>哇。终于完成了，有点小激动啊！！</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;想导出mongodb数据库里的数据，结果，搞了一天，踩了无数的坑，才终于导出数据，真的，要哭了，赶紧记录下来（说实话，网上有些文章真的随着版本的更新，有些过时了，真的是助我踩坑耶）&lt;br&gt;我主要讲我踩得坑哈，顺便说下！&lt;/p&gt;
&lt;/blockquo
    
    </summary>
    
    
      <category term="mongodb" scheme="http://yoursite.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>windows下mongodb的安装与配置（全）</title>
    <link href="http://yoursite.com/2017/08/25/windows%E4%B8%8Bmongodb%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%EF%BC%88%E5%85%A8%EF%BC%89/"/>
    <id>http://yoursite.com/2017/08/25/windows下mongodb的安装与配置（全）/</id>
    <published>2017-08-25T09:50:33.000Z</published>
    <updated>2018-03-11T17:12:18.645Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/4340772-efb3b67cc9a34045.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mongodb"></p>
<blockquote>
<p>由于学Python存数据，需要用到mongodb数据库，自己在网上搜了很多教程，也踩了许多坑，特记录下来，希望能够对一些朋友有用,也记录下自己学的东西。</p>
</blockquote>
<h2 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h2><ol>
<li>下载地址：<a href="https://www.mongodb.com/download-center#community" target="_blank" rel="external">https://www.mongodb.com/download-center#community</a></li>
<li>下载符合你系统的版本，然后安装。默认安装到<code>C:\Program Files\MongoDB</code><br>,你也可以自定义安装目录。<br>我的目录是：·<code>D:\Program Files\Work\MongoDB\Server\3.4</code></li>
</ol>
<h2 id="创建数据目录"><a href="#创建数据目录" class="headerlink" title="创建数据目录"></a>创建数据目录</h2><p>MongoDB将数据目录存储在 db 目录下。但是这个数据目录<strong>不会主动创建</strong>，我们在安装完成后需要创建它。</p>
<p>请注意，数据目录应该放在<strong>根目录</strong>下（(如： C:\ 或者 D:\ 等 )。</p>
<p>这里我们新建<code>mongodb</code>文件夹在文件夹下新建各种东西<br>我们假设创建数据目录在<code>D:\mongodbData\data\db</code></p>
<h2 id="命令行运行mogondb服务"><a href="#命令行运行mogondb服务" class="headerlink" title="命令行运行mogondb服务"></a>命令行运行mogondb服务</h2><p>假设你的mongodb安装在<br><code>D:\Program Files\Work\MongoDB\Server\3.4</code></p>
<ul>
<li><p>打开cmd命令框进入<strong>安装目录</strong><br><code>D:\Program Files\Work\MongoDB\Server\3.4\bin</code></p>
</li>
<li><p>启动服务：<br><code>mongod.exe --dbpath D:\mongodbData\data\db</code></p>
</li>
</ul>
<p>出现下图数据即算成功<br><img src="http://upload-images.jianshu.io/upload_images/4340772-501e44701d615a0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mongod.exe --dbpath D:\mongodbData\data\db"></p>
<h2 id="将MongoDB服务器作为Windows服务运行"><a href="#将MongoDB服务器作为Windows服务运行" class="headerlink" title="将MongoDB服务器作为Windows服务运行"></a>将MongoDB服务器作为Windows服务运行</h2><p>先终止命令行，执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">D:\Program Files\Work\MongoDB\Server\3.4\bin&gt; mongod.exe --logpath &quot;D:\mongodbDa</div><div class="line">ta\data\log\mongodb.log&quot; --logappend --dbpath &quot;D:\mongodbData/data/db&quot; --port 27017 --serviceName &quot;MongoDB&quot; --install</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-3792bfb384bf1f45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="D:\Program Files\Work\MongoDB\Server\3.4\bin&gt; mongod.exe --logpath &quot;D:\mongodbDa
ta\data\log\mongodb.log&quot; --logappend --dbpath &quot;D:\mongodbData/data/db&quot; --port 27017 --serviceName &quot;MongoDB&quot; --install"></p>
<p>下表为mongodb启动的参数说明：<strong>自己注意按照自己的路径进行修改</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">--bind_ip	绑定服务IP，若绑定127.0.0.1，则只能本机访问，不指定默认本地所有IP</div><div class="line">--logpath	定MongoDB日志文件，注意是指定文件不是目录</div><div class="line">--logappend	使用追加的方式写日志</div><div class="line">--dbpath	指定数据库路径</div><div class="line">--port	    指定服务端口号，默认端口27017</div><div class="line">--serviceName	指定服务名称</div><div class="line">--serviceDisplayName	指定服务名称，有多个mongodb服务时执行。</div><div class="line">--install	指定作为一个Windows服务安装。</div></pre></td></tr></table></figure>
<p>终止命令行中的mongodb服务，打开刚才新建的mongodb服务：<br><code>NET START MongoDB</code><br>运行之后如下图<br><img src="http://upload-images.jianshu.io/upload_images/4340772-36bec45f50247d71.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="NET START MongoDB"></p>
<p>如果出现服务器无法正常启动的问题，是因为mongod.lock这个文件，在服务器异常退出时，该文件会影响下一次启动mongod服务的,我们首先关闭命令行mongodb服务，然后只需要删除该文件就行了：</p>
<p><code>mongod.exe --config e:\data\db\mongod.lock --remove</code></p>
<blockquote>
<p>windows删除服务命令： sc delete MongoDB</p>
</blockquote>
<h2 id="MongoDB后台管理-Shell"><a href="#MongoDB后台管理-Shell" class="headerlink" title="MongoDB后台管理 Shell"></a>MongoDB后台管理 Shell</h2><p>进入安装目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd D:\Program Files\Work\MongoDB\Server\3.4\bin`</div></pre></td></tr></table></figure></p>
<p>执行<code>mongo.exe</code>,如下图<br><img src="http://upload-images.jianshu.io/upload_images/4340772-acbcb771d56f9e3f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mongo.exe"></p>
<ul>
<li>启动MongoDB服务<br><code>net start MongoDB</code></li>
<li>关闭MongoDB服务<br><code>net stop MongoDB</code></li>
<li>移除MongoDB服务<br><code>D:\Program Files\Work\MongoDB\Server\3.4\bin\mongod.exe  --remove</code></li>
</ul>
<p>最后说一下：</p>
<ul>
<li><p>由于mongodb数据看不到摸不着，可视化工具是必须的<br>推荐，推荐一个<strong>MongoDB可视化工具RoboMongo</strong><br><a href="http://www.veryhuo.com/a/view/156974.html" target="_blank" rel="external">MongoDB可视化工具RoboMongo安装与连接教程</a><br>安装很简单，但是别忘了<strong>配置环境变量</strong></p>
</li>
<li><p>再推荐一个mongodbd的操作教程：<br><a href="http://wiki.jikexueyuan.com/project/mongodb/" target="_blank" rel="external">http://wiki.jikexueyuan.com/project/mongodb/</a></p>
</li>
</ul>
<p>好了接下来就可以好好玩数据了</p>
<p>参考文章：<br><a href="http://www.jianshu.com/p/4bda3b7a9ea6" target="_blank" rel="external">http://www.jianshu.com/p/4bda3b7a9ea6</a><br><a href="http://www.jianshu.com/p/bc088aa972e9" target="_blank" rel="external">http://www.jianshu.com/p/bc088aa972e9</a><br><a href="http://www.runoob.com/mongodb/mongodb-window-install.html" target="_blank" rel="external">http://www.runoob.com/mongodb/mongodb-window-install.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-efb3b67cc9a34045.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; 
    
    </summary>
    
    
      <category term="mongodb" scheme="http://yoursite.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>Python 爬虫必备-正则表达式（re模块）</title>
    <link href="http://yoursite.com/2017/08/19/Python-%E7%88%AC%E8%99%AB%E5%BF%85%E5%A4%87-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%88re%E6%A8%A1%E5%9D%97%EF%BC%89/"/>
    <id>http://yoursite.com/2017/08/19/Python-爬虫必备-正则表达式（re模块）/</id>
    <published>2017-08-19T09:50:33.000Z</published>
    <updated>2018-03-11T17:19:41.682Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/4340772-8403f99919beba25.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="正则表达式re模块"></p>
<h2 id="正则表达式须知"><a href="#正则表达式须知" class="headerlink" title="正则表达式须知"></a>正则表达式须知</h2><ul>
<li>正则表达式是用来匹配字符串非常强大的工具，在其他编程语言中同样有正则表达式的概念，Python同样不例外，利用了正则表达式，我们想要从返回的页面内容提取出我们想要的内容就易如反掌了。<blockquote>
<p>正则表达式的大致匹配过程是：<br>1.依次拿出表达式和文本中的字符比较，<br>2.如果每一个字符都能匹配，则匹配成功；一旦有匹配不成功的字符则匹配失败。<br>3.如果表达式中有量词或边界，这个过程会稍微有一些不同。</p>
</blockquote>
</li>
</ul>
<h2 id="正则表达式语法规则"><a href="#正则表达式语法规则" class="headerlink" title="正则表达式语法规则"></a>正则表达式语法规则</h2><p>下面是Python中正则表达式的一些匹配规则，图片资料来自CSDN<br><img src="http://upload-images.jianshu.io/upload_images/4340772-b0baf49f04744a80.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="正则表达式"><br><a id="more"></a></p>
<h2 id="正则表达式特别强调"><a href="#正则表达式特别强调" class="headerlink" title="正则表达式特别强调"></a>正则表达式特别强调</h2><ol>
<li><p>python转义字符</p>
<ul>
<li><p>正则表达式使用反斜杠” \ “来代表特殊形式或用作转义字符，这里跟Python的语法冲突，因此，Python用” \\ “表示正则表达式中的” \ “，因为正则表达式中如果要匹配” \ “，需要用\来转义，变成” \ “，而Python语法中又需要对字符串中每一个\进行转义，所以就变成了” \\ “。</p>
<ul>
<li>Python里的原生字符串很好地解决了这个问题，这个例子中的正则表达式可以使用r”\”表示。同样，匹配一个数字的”\d”可以写成r”\d”。有了原生字符串，妈妈也不用担心是不是漏写了反斜杠，写出来的表达式也更直观勒。</li>
</ul>
</li>
</ul>
</li>
<li>贪婪模式和非贪婪模式</li>
</ol>
<p>正则表达式通常用于在文本中查找匹配的字符串。Python里数量词默认是贪婪的（在少数语言里也可能是默认非贪婪），总是尝试匹配尽可能多的字符；非贪婪则相反，总是尝试匹配尽可能少的字符。在”*”,”?”,”+”,”{m,n}”后面加上？,使贪婪变成非贪婪。</p>
<p>可参考： <a href="http://blog.csdn.net/zcc_0015/article/details/53671189" target="_blank" rel="external">python 正则表达式的贪婪匹配与非贪婪匹配</a></p>
<h2 id="Python-Re模块"><a href="#Python-Re模块" class="headerlink" title="Python Re模块"></a>Python Re模块</h2><p>Python 自带了re模块，它提供了对正则表达式的支持。主要用到的方法列举如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#返回pattern对象</div><div class="line">re.compile(string[,flag])  </div><div class="line">#以下为匹配所用函数</div><div class="line">re.match(pattern, string[, flags])</div><div class="line">re.search(pattern, string[, flags])</div><div class="line">re.split(pattern, string[, maxsplit])</div><div class="line">re.findall(pattern, string[, flags])</div><div class="line">re.finditer(pattern, string[, flags])</div><div class="line">re.sub(pattern, repl, string[, count])</div><div class="line">re.subn(pattern, repl, string[, count])</div></pre></td></tr></table></figure>
<p>在介绍这几个方法之前，我们先来介绍一下pattern的概念，pattern可以理解为一个匹配模式，那么我们怎么获得这个<strong>匹配模式</strong>呢？很简单，我们需要利用re.compile方法就可以。例如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pattern = re.compile(r&apos;hello&apos;)</div></pre></td></tr></table></figure></p>
<p>另外大家可能注意到了另一个参数 flags，在这里解释一下这个参数的含义：</p>
<p>参数flag是匹配模式，取值可以使用按位或运算符’|’表示同时生效，比如re.I | re.M。</p>
<p>可选值有：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">• re.I(全拼：IGNORECASE): 忽略大小写（括号内是完整写法，下同）</div><div class="line">• re.M(全拼：MULTILINE): 多行模式，改变&apos;^&apos;和&apos;$&apos;的行为（参见上图）</div><div class="line">• re.S(全拼：DOTALL): 点任意匹配模式，改变&apos;.&apos;的行为</div><div class="line">• re.L(全拼：LOCALE): 使预定字符类 \w \W \b \B \s \S 取决于当前区域设定</div><div class="line">• re.U(全拼：UNICODE): 使预定字符类 \w \W \b \B \s \S \d \D 取决于unicode定义的字符属性</div><div class="line">• re.X(全拼：VERBOSE): 详细模式。这个模式下正则表达式可以是多行，忽略空白字符，并可以加入注释。</div></pre></td></tr></table></figure></p>
<p>在刚才所说的另外几个方法例如 re.match 里我们就需要用到这个pattern了，下面我们一一介绍。</p>
<h3 id="（1）re-match-pattern-string-flags"><a href="#（1）re-match-pattern-string-flags" class="headerlink" title="（1）re.match(pattern, string[, flags])"></a>（1）re.match(pattern, string[, flags])</h3><p>这个方法将会从string（我们要匹配的字符串）的开头开始，尝试匹配pattern，一直向后匹配，如果遇到无法匹配的字符，立即返回None，如果匹配未结束已经到达string的末尾，也会返回None。两个结果均表示匹配失败，否则匹配pattern成功，同时匹配终止，不再对string向后匹配。下面我们通过一个例子理解一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># 将正则表达式编译成Pattern对象，注意hello前面的r的意思是“原生字符串”</div><div class="line">pattern = re.compile(r&apos;hello&apos;)</div><div class="line"> </div><div class="line"># 使用re.match匹配文本，获得匹配结果，无法匹配时将返回None</div><div class="line">result1 = re.match(pattern,&apos;hello&apos;)</div><div class="line">result2 = re.match(pattern,&apos;helloo CQC!&apos;)</div><div class="line">result3 = re.match(pattern,&apos;helo CQC!&apos;)</div><div class="line">result4 = re.match(pattern,&apos;hello CQC!&apos;)</div><div class="line"> </div><div class="line">#如果1匹配成功</div><div class="line">if result1:</div><div class="line">    # 使用Match获得分组信息</div><div class="line">    print(result1.group())</div><div class="line">else:</div><div class="line">    print (&apos;1匹配失败！&apos;)</div><div class="line"> </div><div class="line"> </div><div class="line">#如果2匹配成功</div><div class="line">if result2:</div><div class="line">    # 使用Match获得分组信息</div><div class="line">    print(result2.group())</div><div class="line">else:</div><div class="line">    print( &apos;2匹配失败！&apos;)</div><div class="line"> </div><div class="line"> </div><div class="line">#如果3匹配成功</div><div class="line">if result3:</div><div class="line">    # 使用Match获得分组信息</div><div class="line">    print( result3.group())</div><div class="line">else:</div><div class="line">    print(&apos;3匹配失败！&apos;)</div><div class="line"> </div><div class="line">#如果4匹配成功</div><div class="line">if result4:</div><div class="line">    # 使用Match获得分组信息</div><div class="line">    print( result4.group())</div><div class="line">else:</div><div class="line">    print( &apos;4匹配失败！&apos;)</div></pre></td></tr></table></figure></p>
<p>我们还看到最后打印出了result.group()，这个是什么意思呢？下面我们说一下关于match对象的的属性和方法<br>Match对象是一次匹配的结果，包含了很多关于此次匹配的信息，可以使用Match提供的可读属性或方法来获取这些信息。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">1.group([group1, …]):</div><div class="line">获得一个或多个分组截获的字符串；指定多个参数时将以元组形式返回。group1可以使用编号也可以使用别名；编号0代表整个匹配的子串；不填写参数时，返回group(0)；没有截获字符串的组返回None；截获了多次的组返回最后一次截获的子串。</div><div class="line">2.groups([default]):</div><div class="line">以元组形式返回全部分组截获的字符串。相当于调用group(1,2,…last)。default表示没有截获字符串的组以这个值替代，默认为None。</div></pre></td></tr></table></figure>
<h3 id="（2）re-search-pattern-string-flags"><a href="#（2）re-search-pattern-string-flags" class="headerlink" title="（2）re.search(pattern, string[, flags])"></a>（2）re.search(pattern, string[, flags])</h3><p>search方法与match方法极其类似，区别在于match()函数只检测re是不是在string的开始位置匹配，search()会扫描整个string查找匹配，match（）只有在0位置匹配成功的话才有返回，如果不是开始位置匹配成功的话，match()就返回None。同样，search方法的返回对象同样match()返回对象的方法和属性。我们用一个例子感受一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># 将正则表达式编译成Pattern对象</div><div class="line">pattern = re.compile(r&apos;world&apos;)</div><div class="line"># 使用search()查找匹配的子串，不存在能匹配的子串时将返回None</div><div class="line"># 这个例子中使用match()无法成功匹配</div><div class="line">match = re.search(pattern,&apos;hello world!&apos;)</div><div class="line">if match:</div><div class="line">    # 使用Match获得分组信息</div><div class="line">    print( match.group())</div></pre></td></tr></table></figure>
<h3 id="（3）re-split-pattern-string-maxsplit"><a href="#（3）re-split-pattern-string-maxsplit" class="headerlink" title="（3）re.split(pattern, string[, maxsplit])"></a>（3）re.split(pattern, string[, maxsplit])</h3><p>按照能够匹配的子串将string分割后返回列表。maxsplit用于指定最大分割次数，不指定将全部分割。我们通过下面的例子感受一下。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">pattern = re.compile(r&apos;\d+&apos;)</div><div class="line">print( re.split(pattern,&apos;one1two2three3four4&apos;))</div><div class="line"> </div><div class="line">### 输出 ###</div><div class="line"># [&apos;one&apos;, &apos;two&apos;, &apos;three&apos;, &apos;four&apos;, &apos;&apos;]</div></pre></td></tr></table></figure>
<h3 id="（4）re-findall-pattern-string-flags"><a href="#（4）re-findall-pattern-string-flags" class="headerlink" title="（4）re.findall(pattern, string[, flags])"></a>（4）re.findall(pattern, string[, flags])</h3><p>搜索string，以列表形式返回全部能匹配的子串。我们通过这个例子来感受一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">pattern = re.compile(r&apos;\d+&apos;)</div><div class="line">print( re.findall(pattern,&apos;one1two2three3four4&apos;))</div><div class="line"> </div><div class="line">### 输出 ###</div><div class="line"># [&apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;4&apos;]</div></pre></td></tr></table></figure>
<h3 id="（5）re-finditer-pattern-string-flags"><a href="#（5）re-finditer-pattern-string-flags" class="headerlink" title="（5）re.finditer(pattern, string[, flags])"></a>（5）re.finditer(pattern, string[, flags])</h3><p>搜索string，返回一个顺序访问每一个匹配结果（Match对象）的迭代器。我们通过下面的例子来感受一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">pattern = re.compile(r&apos;\d+&apos;)</div><div class="line">for m in re.finditer(pattern,&apos;one1two2three3four4&apos;):</div><div class="line">    print( m.group()),</div><div class="line"> </div><div class="line">### 输出 ###</div><div class="line"># 1 2 3 4</div></pre></td></tr></table></figure>
<h3 id="（6）re-sub-pattern-repl-string-count"><a href="#（6）re-sub-pattern-repl-string-count" class="headerlink" title="（6）re.sub(pattern, repl, string[, count])"></a>（6）re.sub(pattern, repl, string[, count])</h3><p>使用repl替换string中每一个匹配的子串后返回替换后的字符串。<br>当repl是一个字符串时，可以使用\id或\g、\g引用分组，但不能使用编号0。<br>当repl是一个方法时，这个方法应当只接受一个参数（Match对象），并返回一个字符串用于替换（返回的字符串中不能再引用分组）。<br>count用于指定最多替换次数，不指定时全部替换。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">pattern = re.compile(r&apos;(\w+) (\w+)&apos;)</div><div class="line">s = &apos;i say, hello world!&apos;</div><div class="line"> </div><div class="line">print( re.sub(pattern,r&apos;\2 \1&apos;, s))</div><div class="line"> </div><div class="line">def func(m):</div><div class="line">    return m.group(1).title() + &apos; &apos; + m.group(2).title()</div><div class="line"> </div><div class="line">print( re.sub(pattern,func, s))</div></pre></td></tr></table></figure></p>
<h3 id="（7）re-subn-pattern-repl-string-count"><a href="#（7）re-subn-pattern-repl-string-count" class="headerlink" title="（7）re.subn(pattern, repl, string[, count])"></a>（7）re.subn(pattern, repl, string[, count])</h3><p>返回 (sub(repl, string[, count]), 替换次数)。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">pattern = re.compile(r&apos;(\w+) (\w+)&apos;)</div><div class="line">s = &apos;i say, hello world!&apos;</div><div class="line"> </div><div class="line">print( re.subn(pattern,r&apos;\2 \1&apos;, s))</div><div class="line"> </div><div class="line">def func1(m):</div><div class="line">    return m.group(1).title() + &apos; &apos; + m.group(2).title()</div><div class="line"> </div><div class="line">print( re.subn(pattern,func1, s))</div><div class="line"> </div><div class="line">### output ###</div><div class="line"># (&apos;say i, world hello!&apos;, 2)</div><div class="line"># (&apos;I Say, Hello World!&apos;, 2)</div></pre></td></tr></table></figure></p>
<p>参考：<a href="http://cuiqingcai.com/" target="_blank" rel="external">静觅</a> » <a href="http://cuiqingcai.com/977.html" target="_blank" rel="external">Python爬虫入门七之正则表达式</a><br><a href="http://lihuipeng.blog.51cto.com/3064864/1270525/" target="_blank" rel="external">python中re项目详解</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-8403f99919beba25.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;正则表达式re模块&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;正则表达式须知&quot;&gt;&lt;a href=&quot;#正则表达式须知&quot; class=&quot;headerlink&quot; title=&quot;正则表达式须知&quot;&gt;&lt;/a&gt;正则表达式须知&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;正则表达式是用来匹配字符串非常强大的工具，在其他编程语言中同样有正则表达式的概念，Python同样不例外，利用了正则表达式，我们想要从返回的页面内容提取出我们想要的内容就易如反掌了。&lt;blockquote&gt;
&lt;p&gt;正则表达式的大致匹配过程是：&lt;br&gt;1.依次拿出表达式和文本中的字符比较，&lt;br&gt;2.如果每一个字符都能匹配，则匹配成功；一旦有匹配不成功的字符则匹配失败。&lt;br&gt;3.如果表达式中有量词或边界，这个过程会稍微有一些不同。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;正则表达式语法规则&quot;&gt;&lt;a href=&quot;#正则表达式语法规则&quot; class=&quot;headerlink&quot; title=&quot;正则表达式语法规则&quot;&gt;&lt;/a&gt;正则表达式语法规则&lt;/h2&gt;&lt;p&gt;下面是Python中正则表达式的一些匹配规则，图片资料来自CSDN&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-b0baf49f04744a80.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;正则表达式&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python3X安装beautifulsoup&amp;&amp;BS64遇到的一些error</title>
    <link href="http://yoursite.com/2017/08/19/python3X%E5%AE%89%E8%A3%85beautifulsoup&amp;&amp;BS64%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9Berror/"/>
    <id>http://yoursite.com/2017/08/19/python3X安装beautifulsoup&amp;&amp;BS64遇到的一些error/</id>
    <published>2017-08-19T09:50:33.000Z</published>
    <updated>2018-03-11T17:11:18.856Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1503121701573&amp;di=6299ff4b6aefe2b11141cae630eb6da1&amp;imgtype=0&amp;src=http%3A%2F%2Fimage.lxway.com%2Fupload%2Fa%2F1b%2Fa1bc79d237bf05535330b1af1dc28afc_thumb.jpg" alt="beautifulsoup&amp;&amp;BS64"><br><a href="https://github.com/HuangCongQing/python-NLP/blob/master/%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96.py" target="_blank" rel="external">用beautifulsoup写的没错的小爬虫地址：</a><br><img src="http://upload-images.jianshu.io/upload_images/4340772-4cd3cf67dceb2a50.gif?imageMogr2/auto-orient/strip" alt=""></p>
<blockquote>
<p>前言: Beautiful Soup 3 目前已经停止开发，推荐在现在的项目中使用Beautiful Soup 4，不过它已经被移植到BS4了，也就是说导入时我们需要 import bs4 。所以这里我们用的版本是 Beautiful Soup 4.3.2 (简称BS4)，另外据说 BS4 对 Python3 的支持不够好，虽然我用的Python35，如果有小伙伴用的是 Python3 版本，可以考虑下载 BS3 版本。<br>自己搞网页数据爬取时，需要 <code>from bs4 import BeautifulSoup</code>,所以在py程序运行中遇到了一系列错误…….<br><a id="more"></a></p>
</blockquote>
<h2 id="错误一：ImportError-No-module-named-39-bs4-39"><a href="#错误一：ImportError-No-module-named-39-bs4-39" class="headerlink" title="错误一：ImportError: No module named &#39;bs4&#39;"></a>错误一：<code>ImportError: No module named &#39;bs4&#39;</code></h2><p>错误如下：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-b364e751ce6cbd53.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ImportError: No module named &#39;bs4"></p>
<ul>
<li>解决方法如下</li>
</ul>
<p>Python如何安装模块：</p>
<p>1.下载BS4模块：</p>
<p><a href="http://www.crummy.com/software/BeautifulSoup/bs4/download/4.3/beautifulsoup4-4.3.2.tar.gz" target="_blank" rel="external">http://www.crummy.com/software/BeautifulSoup/bs4/download/4.3/beautifulsoup4-4.3.2.tar.gz</a></p>
<p>2.解压到Python安装目录下的根目录中：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-7210e5b25ea26561.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="根目录"></p>
<p>3.运行cmd，进入解压缩后的目录（如果Python默认安装在C盘下，打开cmd之后可以使用cd …语句先返回根目录，再进入Python27\beautifulsoup4-4.3.2）<br><img src="http://upload-images.jianshu.io/upload_images/4340772-40d18bbfcd7bffb1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>4.进入Python27\beautifulsoup4-4.3.2之后安装BS4模块：<br>执行：<code>python setup.py install</code></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-ebac366f3a3386b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="python setup.py install"></p>
<p>可参考链接：<a href="http://www.cnblogs.com/victor5230/p/6397449.html" target="_blank" rel="external">http://www.cnblogs.com/victor5230/p/6397449.html</a></p>
<hr>
<p>然而又出现错误：</p>
<h2 id="错误二：-ImportError-cannot-import-name-39-HTMLParseError-39"><a href="#错误二：-ImportError-cannot-import-name-39-HTMLParseError-39" class="headerlink" title="错误二： ImportError: cannot import name &#39;HTMLParseError&#39;"></a>错误二： <code>ImportError: cannot import name &#39;HTMLParseError&#39;</code></h2><p>解决bs4在Python 3.5下出现“ImportError: cannot import name ‘HTMLParseError’”错误</p>
<ul>
<li>解决方法如下：<br>直接在cmd命令框中执行<code>pip --upgrade beautifulsoup4</code></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-5f48c2ff74be1dcd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="pip --upgrade beautifulsoup4"></p>
<p>可参考链接：<a href="http://blog.csdn.net/sinat_26599509/article/details/50609646" target="_blank" rel="external">http://blog.csdn.net/sinat_26599509/article/details/50609646</a></p>
<hr>
<h2 id="错误三：bs4-FeatureNotFound"><a href="#错误三：bs4-FeatureNotFound" class="headerlink" title="错误三：bs4.FeatureNotFound"></a>错误三：<code>bs4.FeatureNotFound</code></h2><p>又出现错误:如下<br>  <code>bs4.FeatureNotFound: Couldn&#39;t find a tree builder with the features you requested: lxml. Do you need to install a parser library?</code><br><img src="http://upload-images.jianshu.io/upload_images/4340772-0824f13ed3aa237d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="bs4.FeatureNotFound"></p>
<ul>
<li>解决方法：<br>首先安装’pip install wheel’<br><a href="https://www.zhihu.com/question/49221958/answer/115712155" target="_blank" rel="external">https://www.zhihu.com/question/49221958/answer/115712155</a><br><img src="http://upload-images.jianshu.io/upload_images/4340772-c64102d6ece6724a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="pip install wheel"></li>
</ul>
<p>安装<code>pip install lxml</code><br><img src="http://upload-images.jianshu.io/upload_images/4340772-e7ada87d9ee63707.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="pip install lxml"><br>可参考链接1：<a href="https://www.zhihu.com/question/49221958/answer/115712155" target="_blank" rel="external">https://www.zhihu.com/question/49221958/answer/115712155</a><br>可参考链接2：<a href="http://study.163.com/forum/detail/1002230039.htm" target="_blank" rel="external">http://study.163.com/forum/detail/1002230039.htm</a></p>
<p>竟然就好了！！！！！！！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1503121701573&amp;amp;di=6299ff4b6aefe2b11141cae630eb6da1&amp;amp;imgtype=0&amp;amp;src=http%3A%2F%2Fimage.lxway.com%2Fupload%2Fa%2F1b%2Fa1bc79d237bf05535330b1af1dc28afc_thumb.jpg&quot; alt=&quot;beautifulsoup&amp;amp;&amp;amp;BS64&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/HuangCongQing/python-NLP/blob/master/%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用beautifulsoup写的没错的小爬虫地址：&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-4cd3cf67dceb2a50.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;前言: Beautiful Soup 3 目前已经停止开发，推荐在现在的项目中使用Beautiful Soup 4，不过它已经被移植到BS4了，也就是说导入时我们需要 import bs4 。所以这里我们用的版本是 Beautiful Soup 4.3.2 (简称BS4)，另外据说 BS4 对 Python3 的支持不够好，虽然我用的Python35，如果有小伙伴用的是 Python3 版本，可以考虑下载 BS3 版本。&lt;br&gt;自己搞网页数据爬取时，需要 &lt;code&gt;from bs4 import BeautifulSoup&lt;/code&gt;,所以在py程序运行中遇到了一系列错误…….&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python35下的NLTK工具的安装和配置</title>
    <link href="http://yoursite.com/2017/08/17/python35%E4%B8%8B%E7%9A%84NLTK%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2017/08/17/python35下的NLTK工具的安装和配置/</id>
    <published>2017-08-17T09:50:33.000Z</published>
    <updated>2018-03-11T17:10:19.454Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>首先要说明的是我的安装环境是win7 64位，安装了python35</p>
</blockquote>
<ul>
<li>官网下载NLTK<br><a href="https://pypi.python.org/pypi/nltk" target="_blank" rel="external">https://pypi.python.org/pypi/nltk</a><br>我安装的是nltk-3.2.4.tar.gz<br>安装上述软件，我的安装目录是<br>D:\Program Files\Computer-learning<br>解压缩nltk-3.2.4.tar.gz，在 <strong>cmd</strong> 中进入到<code>D:\Program Files\Computer-learning\nltk-3.2.4</code>目录，执行</li>
<li><code>python setup.py install</code></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-8ba2cc3afcd51f17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="python setup.py install"><br><a id="more"></a><br>成功标志：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Installed c:\users\hasee\appdata\local\programs\python\python35\lib\site-package</div><div class="line">s\six-1.10.0-py3.5.egg</div><div class="line">Finished processing dependencies for nltk==3.2.4</div></pre></td></tr></table></figure></p>
<p>安装完成后，在IDLE中运行：执行下面两行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">import nltk</div><div class="line">nltk.download()</div></pre></td></tr></table></figure>
<p>出现一个NLTK Downloader对话框，修改Download Diretory（E盘或其他盘符下），我放在了C:\Users\hasee\AppData\Roaming\nltk_data。点击<code>all</code>开始下载，如下<br><img src="http://upload-images.jianshu.io/upload_images/4340772-add2072ff4e4636b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<p>下载完成后<br><img src="http://upload-images.jianshu.io/upload_images/4340772-d53a863c565b0757.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<p>下载慢还可以到<strong>NLTK Corpora</strong> <a href="http://nltk.org/nltk_data/" target="_blank" rel="external">http://nltk.org/nltk_data/</a>手工下载缺失的，然后放到Download Diretory，zip别删。重装系统后nltk_data文件夹可以保留，避免重复下载。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;首先要说明的是我的安装环境是win7 64位，安装了python35&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;官网下载NLTK&lt;br&gt;&lt;a href=&quot;https://pypi.python.org/pypi/nltk&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://pypi.python.org/pypi/nltk&lt;/a&gt;&lt;br&gt;我安装的是nltk-3.2.4.tar.gz&lt;br&gt;安装上述软件，我的安装目录是&lt;br&gt;D:\Program Files\Computer-learning&lt;br&gt;解压缩nltk-3.2.4.tar.gz，在 &lt;strong&gt;cmd&lt;/strong&gt; 中进入到&lt;code&gt;D:\Program Files\Computer-learning\nltk-3.2.4&lt;/code&gt;目录，执行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python setup.py install&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-8ba2cc3afcd51f17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;python setup.py install&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python安装与Eclipse环境配置（踩坑,看完这篇就够了）</title>
    <link href="http://yoursite.com/2017/08/12/Python%E5%AE%89%E8%A3%85%E4%B8%8EEclipse%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%EF%BC%88%E8%B8%A9%E5%9D%91,%E7%9C%8B%E5%AE%8C%E8%BF%99%E7%AF%87%E5%B0%B1%E5%A4%9F%E4%BA%86%EF%BC%89/"/>
    <id>http://yoursite.com/2017/08/12/Python安装与Eclipse环境配置（踩坑,看完这篇就够了）/</id>
    <published>2017-08-12T09:50:33.000Z</published>
    <updated>2018-03-11T17:05:39.691Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装python（配置环境变量）"><a href="#安装python（配置环境变量）" class="headerlink" title="安装python（配置环境变量）"></a>安装python（配置环境变量）</h3><p><a href="http://www.runoob.com/python/python-tutorial.html" target="_blank" rel="external">http://www.runoob.com/python/python-tutorial.html</a></p>
<h3 id="配置Eclipse（路径）"><a href="#配置Eclipse（路径）" class="headerlink" title="配置Eclipse（路径）"></a>配置Eclipse（路径）</h3><p><a href="http://www.runoob.com/python/python-ide.html" target="_blank" rel="external">http://www.runoob.com/python/python-ide.html</a></p>
<h3 id="配置PyDev"><a href="#配置PyDev" class="headerlink" title="配置PyDev"></a>配置PyDev</h3><ul>
<li>点击help按钮–&gt;Install New Software</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-f1554c0413db063c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>Name:取PyDev<br>Location：<a href="http://www.pydev.org/updates" target="_blank" rel="external">http://www.pydev.org/updates</a><br><img src="http://upload-images.jianshu.io/upload_images/4340772-1e188cb6b039d5e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>进去之后只需选择第一个包，点击next，之后一直点击下一步即可（有任何弹框，选择accept）<br><img src="http://upload-images.jianshu.io/upload_images/4340772-ac84019523237109.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>完成，点击Yes重新启动Eclipse<br><img src="http://upload-images.jianshu.io/upload_images/4340772-89470378e26cab82.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br><a id="more"></a></p>
<h3 id="新建python项目流程"><a href="#新建python项目流程" class="headerlink" title="新建python项目流程"></a>新建python项目流程</h3><p>点击new Project，会出现Pydev文件夹，选择PyDev Project，点击Next<br><img src="http://upload-images.jianshu.io/upload_images/4340772-fddf5233928133c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br><img src="http://upload-images.jianshu.io/upload_images/4340772-a97bc67d839709e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br><img src="http://upload-images.jianshu.io/upload_images/4340772-62a0922c50f3adc7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br><img src="http://upload-images.jianshu.io/upload_images/4340772-5db6e45ce76d99d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>点击OK<br><img src="http://upload-images.jianshu.io/upload_images/4340772-5261b186d991bd80.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>点击apply应用<br><img src="http://upload-images.jianshu.io/upload_images/4340772-b1e1bbe63cb685d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>点击next<br><img src="http://upload-images.jianshu.io/upload_images/4340772-ee2b49c6b67b264f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>点击finish<br><img src="http://upload-images.jianshu.io/upload_images/4340772-66319da28569cccd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>然后在新建的Project（python35）右击，new一个PyDev Module<br><img src="http://upload-images.jianshu.io/upload_images/4340772-8d5892f51b04bfe8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>这样基本就完成了<br><img src="http://upload-images.jianshu.io/upload_images/4340772-80028a852af151ec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>下面写一行代码测试一下<br>选直接运行就行，目前不需要单元测试<br><img src="http://upload-images.jianshu.io/upload_images/4340772-96367501041bfe8e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>运行之后报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Python脚本语法错误：SyntaxError: (unicode error) &apos;utf8&apos; codec can&apos;t decode byte 0xc0 in position 0: invalid start byte  </div><div class="line">![mark](http://upload-images.jianshu.io/upload_images/4340772-e7845b15c4257aa3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</div></pre></td></tr></table></figure></p>
<p>这是因为编码格式出现问题<br>具体了解可参考下面这个文章<br><a href="http://againinput4.blog.163.com/blog/static/1727994912011112224749861/" target="_blank" rel="external">http://againinput4.blog.163.com/blog/static/1727994912011112224749861/</a><br>要加两行代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/python  </div><div class="line"># -*- coding: UTF-8 -*-</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-4e3566b0a63c3d90.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>有个尴尬的问题：我加上那两行代码，还是出错，删除那两行代码，又可以运行了,可能之前我安装了python27,这次安装了python35，第一次运行没反应过来，哈哈。<br><img src="http://upload-images.jianshu.io/upload_images/4340772-8c3c5f5d803b858e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>总结一下：</p>
<blockquote>
<p>python2.X版本需要加下面这两行代码，python3.X则不需要<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/python  </div><div class="line"># -*- coding: UTF-8 -*-</div></pre></td></tr></table></figure></p>
</blockquote>
<p>接下来就可以好好玩Python（蛇）了</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装python（配置环境变量）&quot;&gt;&lt;a href=&quot;#安装python（配置环境变量）&quot; class=&quot;headerlink&quot; title=&quot;安装python（配置环境变量）&quot;&gt;&lt;/a&gt;安装python（配置环境变量）&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.runoob.com/python/python-tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.runoob.com/python/python-tutorial.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;配置Eclipse（路径）&quot;&gt;&lt;a href=&quot;#配置Eclipse（路径）&quot; class=&quot;headerlink&quot; title=&quot;配置Eclipse（路径）&quot;&gt;&lt;/a&gt;配置Eclipse（路径）&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.runoob.com/python/python-ide.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.runoob.com/python/python-ide.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;配置PyDev&quot;&gt;&lt;a href=&quot;#配置PyDev&quot; class=&quot;headerlink&quot; title=&quot;配置PyDev&quot;&gt;&lt;/a&gt;配置PyDev&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;点击help按钮–&amp;gt;Install New Software&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-f1554c0413db063c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;mark&quot;&gt;&lt;br&gt;Name:取PyDev&lt;br&gt;Location：&lt;a href=&quot;http://www.pydev.org/updates&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.pydev.org/updates&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-1e188cb6b039d5e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;mark&quot;&gt;&lt;br&gt;进去之后只需选择第一个包，点击next，之后一直点击下一步即可（有任何弹框，选择accept）&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-ac84019523237109.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;mark&quot;&gt;&lt;br&gt;完成，点击Yes重新启动Eclipse&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-89470378e26cab82.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;mark&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Windows环境下msysgit下安装gitflow步骤</title>
    <link href="http://yoursite.com/2017/08/11/Windows%E7%8E%AF%E5%A2%83%E4%B8%8Bmsysgit%E4%B8%8B%E5%AE%89%E8%A3%85gitflow%E6%AD%A5%E9%AA%A4/"/>
    <id>http://yoursite.com/2017/08/11/Windows环境下msysgit下安装gitflow步骤/</id>
    <published>2017-08-11T09:50:33.000Z</published>
    <updated>2018-03-11T17:04:51.762Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/4340772-18d99fc9b9ca9dad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="gitflow"></p>
<blockquote>
<p>在网上，查了好多资料，不过网上说法有好多坑，所有自己特意写了一篇，以便看此博文的人少踩坑！！</p>
<p>#一、Git相关配置（Windows）</p>
<p>##1.安装git和git flow<br>Windows下git客户端：Git-1.9.2-preview20140411.exe<br>参考文档，来自github的gitflow的wiki，链接：<a href="https://github.com/nvie/gitflow/wiki/Windows" target="_blank" rel="external">https://github.com/nvie/gitflow/wiki/Windows</a>  这里只介绍msysgit环境下的gitflow安装。<br>首先需要下载两个文件：<code>getopt.exe</code>和<code>libintl3.dll</code><br>下载地址：（可以在浏览器下载就直接下载，如果不行（反正我是不行），复制网址到 迅雷直接下载）<br><a href="http://sourceforge.net/projects/gnuwin32/files/util-linux/2.14.1/util-linux-ng-2.14.1-bin.zip/download" target="_blank" rel="external">http://sourceforge.net/projects/gnuwin32/files/util-linux/2.14.1/util-linux-ng-2.14.1-bin.zip/download</a><br><a href="http://sourceforge.net/projects/gnuwin32/files/util-linux/2.14.1/util-linux-ng-2.14.1-dep.zip/download" target="_blank" rel="external">http://sourceforge.net/projects/gnuwin32/files/util-linux/2.14.1/util-linux-ng-2.14.1-dep.zip/download</a><br><a id="more"></a><br>上面两个链接，分别下载到两个文件：util-<a href="http://lib.csdn.net/base/linux" target="_blank" rel="external">Linux</a>-ng-2.14.1-bin.zip和util-<a href="http://lib.csdn.net/base/linux" target="_blank" rel="external">linux</a>-ng-2.14.1-dep.zip<br>我们需要的文件，getopt.exe文件在util-linux-ng-2.14.1-bin.zip文件中的bin目录下，<br>libintl3.dll也在util-linux-ng-2.14.1-dep.zip文件的bin目录下，将这两个文件<br>拷贝到msysgit安装目录的bin目录下。</p>
</blockquote>
<p>然后打开“<a href="http://lib.csdn.net/base/git" target="_blank" rel="external">git</a> Bash”输入下面的命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone --recursive git://github.com/nvie/gitflow.git</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-562c68c7d5d2050d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="git clone --recursive git://github.com/nvie/gitflow.git"></p>
<p>等下载完毕，打开windows下的命令行工具，进入到刚才下载的文件目录中，例如：如果刚才是在c盘下执行的git clone命令，则进入到F:\Front-End\gitflow目录，然后执行下面命令（可能需要管理员权限）<br>F:\Front-End\gitflow&gt; contrib\msysgit-install.cmd<br>如下图：出现<code>MsysGit installation directory not found</code>不用管<br><img src="http://upload-images.jianshu.io/upload_images/4340772-54354d6831920395.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="F:\Front-End\gitflow&gt; contrib\msysgit-install.cmd"></p>
<p>执行完毕，打开“Git Bash”，输入命令 git flow，若安装成功，出现下图界面：<br><img src="http://upload-images.jianshu.io/upload_images/4340772-c4f84e81127d7dad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="gitflow"></p>
<p>如果你看到这，恭喜，你完成了，接下来，享受gitflow吧。</p>
<hr>
<h2 id="2-clone项目并初始化git-flow"><a href="#2-clone项目并初始化git-flow" class="headerlink" title="2 clone项目并初始化git flow"></a>2 clone项目并初始化git flow</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/Tours4Fun/yiifrontendtff.git</div><div class="line"><span class="built_in">cd</span> yiifrontendtff</div><div class="line">git flow init</div><div class="line"><span class="comment">#一路回车</span></div></pre></td></tr></table></figure>
<p>#二、本地开发流程</p>
<p>##1. 切换到develop分支<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout develop</div></pre></td></tr></table></figure></p>
<p>##2. 更新develop分支<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git pull origin develop</div></pre></td></tr></table></figure></p>
<p>##3. 基于develop新建分支<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git flow feature start proj&#123;项目ID&#125;_&#123;项目简要描述&#125;</div><div class="line">        <span class="comment">#假设项目2312:</span></div><div class="line">        git flow feature start proj2312_update_sitemap</div></pre></td></tr></table></figure></p>
<p>##4. 进行开发<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git status <span class="comment">#提交前最好先查看修改了哪些文</span></div><div class="line">        git add . <span class="comment">#添加文件</span></div><div class="line">        git commit -m <span class="string">"update sitemap.xml 注释"</span> <span class="comment">#提交日志</span></div></pre></td></tr></table></figure></p>
<p>##5. 完成开发后把分支push到远程:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push origin feature/proj2312_update_sitemap</div></pre></td></tr></table></figure></p>
<p>##6. 工单上线后可以定义删除本地无用分支(可选):<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git branch -d feature/proj2312_update_sitemap</div><div class="line">        git branch -D feature/proj2312_update_sitemap <span class="comment">#强制删除</span></div></pre></td></tr></table></figure></p>
<p>##7. 常用命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git branch <span class="comment">#查看本地分支</span></div><div class="line">        git checkout branch-name <span class="comment">#切换分支</span></div><div class="line">        git remote update -p <span class="comment">#远程分支拉到本地</span></div><div class="line">        git branch -a | grep 关键字 <span class="comment">#搜索分支</span></div><div class="line">        git branch -m <span class="comment">#重命名分支名</span></div><div class="line">        git push origin :feature/feature/proj2312_update_sitemap <span class="comment">#删除远端分支</span></div></pre></td></tr></table></figure></p>
<p>###8. 更多命令<br><a href="http://blog.csdn.net/dengsilinming/article/details/8000622" target="_blank" rel="external">更多命令</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-18d99fc9b9ca9dad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;gitflow&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在网上，查了好多资料，不过网上说法有好多坑，所有自己特意写了一篇，以便看此博文的人少踩坑！！&lt;/p&gt;
&lt;p&gt;#一、Git相关配置（Windows）&lt;/p&gt;
&lt;p&gt;##1.安装git和git flow&lt;br&gt;Windows下git客户端：Git-1.9.2-preview20140411.exe&lt;br&gt;参考文档，来自github的gitflow的wiki，链接：&lt;a href=&quot;https://github.com/nvie/gitflow/wiki/Windows&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/nvie/gitflow/wiki/Windows&lt;/a&gt;  这里只介绍msysgit环境下的gitflow安装。&lt;br&gt;首先需要下载两个文件：&lt;code&gt;getopt.exe&lt;/code&gt;和&lt;code&gt;libintl3.dll&lt;/code&gt;&lt;br&gt;下载地址：（可以在浏览器下载就直接下载，如果不行（反正我是不行），复制网址到 迅雷直接下载）&lt;br&gt;&lt;a href=&quot;http://sourceforge.net/projects/gnuwin32/files/util-linux/2.14.1/util-linux-ng-2.14.1-bin.zip/download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://sourceforge.net/projects/gnuwin32/files/util-linux/2.14.1/util-linux-ng-2.14.1-bin.zip/download&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://sourceforge.net/projects/gnuwin32/files/util-linux/2.14.1/util-linux-ng-2.14.1-dep.zip/download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://sourceforge.net/projects/gnuwin32/files/util-linux/2.14.1/util-linux-ng-2.14.1-dep.zip/download&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>域名解析后主机记录和记录值怎么填写？都是什么意思？</title>
    <link href="http://yoursite.com/2017/07/31/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E5%90%8E%E4%B8%BB%E6%9C%BA%E8%AE%B0%E5%BD%95%E5%92%8C%E8%AE%B0%E5%BD%95%E5%80%BC%E6%80%8E%E4%B9%88%E5%A1%AB%E5%86%99%EF%BC%9F%E9%83%BD%E6%98%AF%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D%EF%BC%9F/"/>
    <id>http://yoursite.com/2017/07/31/域名解析后主机记录和记录值怎么填写？都是什么意思？/</id>
    <published>2017-07-31T09:50:33.000Z</published>
    <updated>2018-03-11T17:03:09.533Z</updated>
    
    <content type="html"><![CDATA[<h2 id="gt-之前我买的域名在腾讯云解析之后，需要添加记录，开始一脸懵啊，在网上搜查了一些资料，整理了一下，希望为大家解点惑吧！"><a href="#gt-之前我买的域名在腾讯云解析之后，需要添加记录，开始一脸懵啊，在网上搜查了一些资料，整理了一下，希望为大家解点惑吧！" class="headerlink" title="&gt;之前我买的域名在腾讯云解析之后，需要添加记录，开始一脸懵啊，在网上搜查了一些资料，整理了一下，希望为大家解点惑吧！"></a>&gt;之前我买的域名在腾讯云解析之后，需要添加记录，开始一脸懵啊，在网上搜查了一些资料，整理了一下，希望为大家解点惑吧！</h2><p><img src="http://upload-images.jianshu.io/upload_images/4340772-6a5c1d2eee05d348.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加记录"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-20f7cdb784a973e4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="记录类型"></p>
<h3 id="主机记录："><a href="#主机记录：" class="headerlink" title="主机记录："></a>主机记录：</h3><p>主机记录就是域名前缀，常见用法有：</p>
<ul>
<li>www：解析后的域名为 www.1756260160.com</li>
<li>@：直接解析主域名 1756260160.com</li>
<li><p>：泛解析，匹配其他所有域名 *.1756260160.com</p>
<a id="more"></a>
<h3 id="记录类型："><a href="#记录类型：" class="headerlink" title="记录类型："></a>记录类型：</h3><p>要指向空间商提供的 IP 地址，选择「类型 A」，要指向一个域名，选择「类型 CNAME」</p>
</li>
<li><p>A记录：地址记录，用来指定域名的IPv4地址（如：8.8.8.8），如果需要将域名指向一个IP地址，就需要添加A记录。</p>
</li>
<li><p>CNAME： 如果需要将域名指向另一个域名，再由另一个域名提供ip地址，就需要添加CNAME记录。</p>
</li>
<li>NS：域名服务器记录，如果需要把子域名交给其他DNS服务商解析，就需要添加NS记录。</li>
<li>AAA：用来指定主机名（或域名）对应的IPv6地址（例如：ff06:0:0:0:0:0:0:c3）记录。</li>
<li>MX：如果需要设置邮箱，让邮箱能收到邮件，就需要添加MX记录。</li>
</ul>
<h3 id="线路："><a href="#线路：" class="headerlink" title="线路："></a>线路：</h3><p>让指定线路的用户访问这个IP<br>常见用法有：</p>
<ul>
<li>默认：必须添加，否则只有单独指定的线路才能访问您的网站。如果双线解析，建议「默认」线路填写「电信IP」</li>
<li>联通：单独为「联通用户」指定服务器 IP，其他用户依然访问「默认」</li>
<li>搜索引擎：指定一个服务器 IP 让抓取</li>
</ul>
<h3 id="记录值："><a href="#记录值：" class="headerlink" title="记录值："></a>记录值：</h3><p>最常见的是将空间商提供的「IP地址」填写在这里哦～<br>比如我用的就是github上的IP<br><img src="http://upload-images.jianshu.io/upload_images/4340772-ce30a9a6834c950a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>各类型的记录值一般是这样的：<br>A记录：填写您服务器 IP，如果您不知道，请咨询您的空间商<br>CNAME记录：填写空间商给您提供的域名，例如：2.com<br>MX记录：填写您邮件服务器的IP地址或企业邮局给您提供的域名，如果您不知道，请咨询您的邮件服务提供商<br>AAAA：不常用。解析到 IPv6 的地址。<br>NS记录：不常用。系统默认添加的两个NS记录请不要修改。NS向下授权，填写dns域名，例如：ns3.dnsv3.com<br>TTL: 我们默认的 600 秒是最常用的，不用修改<br>即 Time To Live，缓存的生存时间。指地方dns缓存您域名记录信息的时间，缓存失效后会再次到DNSPod获取记录值。<br><strong>600（10分钟）：建议正常情况下使用 600。</strong><br>60（1分钟）：如果您经常修改IP，修改记录一分钟即可生效。长期使用 60，解析速度会略受影响。 3600（1小时）：如果您IP极少变动（一年几次），建议选择 3600，解析速度快。如果要修改IP，提前一天改为 60，即可快速生效。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;gt-之前我买的域名在腾讯云解析之后，需要添加记录，开始一脸懵啊，在网上搜查了一些资料，整理了一下，希望为大家解点惑吧！&quot;&gt;&lt;a href=&quot;#gt-之前我买的域名在腾讯云解析之后，需要添加记录，开始一脸懵啊，在网上搜查了一些资料，整理了一下，希望为大家解点惑吧！&quot; class=&quot;headerlink&quot; title=&quot;&amp;gt;之前我买的域名在腾讯云解析之后，需要添加记录，开始一脸懵啊，在网上搜查了一些资料，整理了一下，希望为大家解点惑吧！&quot;&gt;&lt;/a&gt;&amp;gt;之前我买的域名在腾讯云解析之后，需要添加记录，开始一脸懵啊，在网上搜查了一些资料，整理了一下，希望为大家解点惑吧！&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-6a5c1d2eee05d348.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;添加记录&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-20f7cdb784a973e4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;记录类型&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;主机记录：&quot;&gt;&lt;a href=&quot;#主机记录：&quot; class=&quot;headerlink&quot; title=&quot;主机记录：&quot;&gt;&lt;/a&gt;主机记录：&lt;/h3&gt;&lt;p&gt;主机记录就是域名前缀，常见用法有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;www：解析后的域名为 www.1756260160.com&lt;/li&gt;
&lt;li&gt;@：直接解析主域名 1756260160.com&lt;/li&gt;
&lt;li&gt;&lt;p&gt;：泛解析，匹配其他所有域名 *.1756260160.com&lt;/p&gt;
    
    </summary>
    
    
      <category term="域名" scheme="http://yoursite.com/tags/%E5%9F%9F%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>各种邮箱pop，SMTP设置</title>
    <link href="http://yoursite.com/2017/07/31/%E5%90%84%E7%A7%8D%E9%82%AE%E7%AE%B1pop%EF%BC%8CSMTP%E8%AE%BE%E7%BD%AE/"/>
    <id>http://yoursite.com/2017/07/31/各种邮箱pop，SMTP设置/</id>
    <published>2017-07-31T09:50:33.000Z</published>
    <updated>2018-03-11T17:03:59.101Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>看到很多用户在绑定邮箱时出现各种各样的问题，特将主流邮箱的配置问题汇总,供大家参考也供自己参考</p>
</blockquote>
<ul>
<li>首先向大家简单介绍一下尚邮绑定邮箱的注意事项： 1、请先确认您的邮箱支持pop3<br>只要支持pop3或者imap4协议的公众邮箱和企业邮箱都可以使用尚邮。 目前大多数免费公众邮箱都支持pop功能，但是部分需要要手动开启（在本文的后面我们会针对几个常见的公众邮箱开通POP服务以及服务器配置方式进行介绍）。确认您的邮箱支持pop3或者imap4协议后您就可以绑定邮箱了<a id="more"></a>
</li>
</ul>
<h3 id="新浪-sina-邮箱配置方法及介绍"><a href="#新浪-sina-邮箱配置方法及介绍" class="headerlink" title="新浪(sina)邮箱配置方法及介绍"></a>新浪(sina)邮箱配置方法及介绍</h3><p>新浪邮箱自今年（08年）6月分服务器被攻击后开始对pop取件频率进行了严格限制，同时新注册的用户需要手动才能开通pop功能（老用户不需要）。 手动开通pop的方法：<br>登录新浪邮箱后点击“邮箱设置”-“帐户”-“pop-smtp设置”勾选“开启”后“保存”，如图所示：<br>服务器配置方法： 类型： POP3<br>接收邮件服务器： pop.sina.com 接收端口： 110    SSL 否<br>发送邮件服务器： smtp.sina.com 发送端口： 25    SSL 否  </p>
<h3 id="QQ邮箱配置方法及介绍"><a href="#QQ邮箱配置方法及介绍" class="headerlink" title="QQ邮箱配置方法及介绍"></a>QQ邮箱配置方法及介绍</h3><p>登陆您的QQ邮箱页面后点击页面上方的“设置”-“账号”-“POP3/SMTP服务”勾选“开启POP3/SMTP服务”后“保存修改”<br>服务器配置方法：<br>类型： POP3<br>接收邮件服务器： pop.qq.com<br> 接收端口： 110    SSL 否<br>发送邮件服务器： smtp.qq.com<br>发送端口： 25    SSL 否<br>补充说明：由于QQ邮箱服务器与尚邮服务器之间的通讯速度受到网通与电信间冲突的影响，经常出现通讯超时的情况，因此即便绑定成功也会延迟较为严重。另外，QQ邮箱服务器也开始对pop频次进行限制，一旦超过会被拖入黑名单。由于尚邮的腾讯用户非常多，为解决此问题已与腾讯进行协商，将pop频次上线提高，但若添加人数很多仍会超限。因此如果您的QQ邮箱已开通pop功能但仍添加失败，很可能是pop超限导致的。基于如上几点因素，QQ邮箱在尚邮上的用户体验不是很好，不推荐您使用。建议您将QQ邮箱邮件转发至其他支持pop的邮箱上代收。</p>
<h3 id="网易-126-163-yeah-net-邮箱配置方法及介绍"><a href="#网易-126-163-yeah-net-邮箱配置方法及介绍" class="headerlink" title="网易(126/163/yeah.net)邮箱配置方法及介绍"></a>网易(126/163/yeah.net)邮箱配置方法及介绍</h3><p> 网易免费邮箱对pop取信频率有严格的限制，因此相对取信速度比较慢。网易免费邮箱中126和163邮箱06年后注册的以及yeah.net邮箱07年后的注册用户不再支持pop功能，需要定制其“随身邮服务”方可开通，老用户本身就是支持pop功能的，无需定制。 126邮箱配置方法：<br>类型： POP3<br>接收邮件服务器： pop.126.com<br>接收端口： 110    SSL 否<br>发送邮件服务器： smtp.126.com<br>发送端口： 25    SSL 否<br>特别说明：如果您确认您的126邮箱开通了POP功能，但还是不能绑定成功，可以尝试在邮箱用户名处填写126邮箱地址全称，再看是否能绑定成功。通常，126邮箱无论使用@符号前内容或者用邮箱全称来填写“邮箱用户名”都可以成功绑定。您可以多尝试下。<br>163邮箱配置方法：<br>类型： POP3<br>接收邮件服务器： pop.163.com<br>接收端口： 110    SSL 否<br>发送邮件服务器： smtp.163.com<br>发送端口： 25    SSL 否</p>
<h3 id="Gmail邮箱配置方法及介绍"><a href="#Gmail邮箱配置方法及介绍" class="headerlink" title="Gmail邮箱配置方法及介绍"></a>Gmail邮箱配置方法及介绍</h3><p>Gmail邮箱也需要手动配置pop或者imap功能。 配置方法如下：  登录Gmail邮箱后点击“设置”-“转发和pop  smtp”-“pop下载”下勾选“对从现在起所收到的邮件启用pop”或者“IMAP访问”中勾选“启用IMAP”然后“保存更改”<br>POP3配置方法：<br>类型： POP3<br>接收邮件服务器： pop.gmail.com<br>接收端口： 995    SSL 是<br>发送邮件服务器： smtp.gmail.com<br>发送端口：： 587 /25   SSL 是  （465说是可以但是测试总是超时）<br>IMAP配置方法：<br>类型： IMAP4<br>接收邮件服务器： imap.gmail.com<br>接收端口： 993    SSL 是<br> 发送邮件服务器： smtp.gmail.com<br>发送端口： 587 /25   SSL 是  （465说是可以但是测试总是超时  25推荐）<br>补充说明：由于Gmail邮箱服务器本身设置的原因，Gmail邮箱邮件只允许邮件客户端软件pop收取一次，因此尚邮取过的邮件，pc客户端如outlook将收不到，反之亦然。解决方案可以参考二楼“Gmail邮件只POP一次怎么办？   ”贴。另外，Gmail邮箱是将已发送邮件和收到的邮件存放在一起的，所以使用客户端软件收Gmail的邮件会将已发送的邮件一同收取下来。</p>
<h3 id="腾讯企业邮箱POP-SMTP分别是什么"><a href="#腾讯企业邮箱POP-SMTP分别是什么" class="headerlink" title="腾讯企业邮箱POP,SMTP分别是什么"></a>腾讯企业邮箱POP,SMTP分别是什么</h3><p>我今天想用QQ邮箱代收我的腾讯企业邮箱就遇到这个问题，</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-a64b03b83daa8e4a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>上图中如果是腾讯企业邮箱的话：POP地址应填：<br><strong>pop.exmail.qq.com</strong></p>
<ul>
<li><p>腾讯企业邮箱POP3/SMTP协议<br>接收邮件服务器：pop.exmail.qq.com (端口 110)，使用SSL，端口号995<br>发送邮件服务器：smtp.exmail.qq.com (端口 25)，使用SSL，端口号465</p>
</li>
<li><p>海外用户可使用以下服务器<br>接收邮件服务器：hwpop.exmail.qq.com (端口 110)，使用SSL，端口号995<br>发送邮件服务器：hwsmtp.exmail.qq.com (端口 25)，使用SSL，端口号465</p>
</li>
<li><p>腾讯企业邮箱IMAP协议<br>接收邮件服务器：imap.exmail.qq.com  (端口 143)，使用SSL，端口号993<br>发送邮件服务器：smtp.exmail.qq.com (端口 25)，使用SSL，端口号465</p>
</li>
<li><p>海外用户可使用以下服务器<br>接收邮件服务器：hwimap.exmail.qq.com  (端口 143)，使用SSL，端口号993<br>发送邮件服务器：hwsmtp.exmail.qq.com (端口 25)，使用SSL，端口号465</p>
</li>
</ul>
<p>QQ还开发了邮我功能：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-92598536682d6972.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br><img src="http://upload-images.jianshu.io/upload_images/4340772-776fad760ed07301.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;看到很多用户在绑定邮箱时出现各种各样的问题，特将主流邮箱的配置问题汇总,供大家参考也供自己参考&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;首先向大家简单介绍一下尚邮绑定邮箱的注意事项： 1、请先确认您的邮箱支持pop3&lt;br&gt;只要支持pop3或者imap4协议的公众邮箱和企业邮箱都可以使用尚邮。 目前大多数免费公众邮箱都支持pop功能，但是部分需要要手动开启（在本文的后面我们会针对几个常见的公众邮箱开通POP服务以及服务器配置方式进行介绍）。确认您的邮箱支持pop3或者imap4协议后您就可以绑定邮箱了
    
    </summary>
    
    
      <category term="邮箱" scheme="http://yoursite.com/tags/%E9%82%AE%E7%AE%B1/"/>
    
  </entry>
  
  <entry>
    <title>post和get的真正区别？</title>
    <link href="http://yoursite.com/2017/07/30/%E5%9C%A8%E8%85%BE%E8%AE%AF%E4%BC%81%E4%B8%9A%E9%82%AE%E7%AE%B1%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D%E9%82%AE%E7%AE%B1/"/>
    <id>http://yoursite.com/2017/07/30/在腾讯企业邮箱设置自己的域名邮箱/</id>
    <published>2017-07-30T09:50:33.000Z</published>
    <updated>2018-03-11T17:02:28.519Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一步-买域名"><a href="#第一步-买域名" class="headerlink" title="第一步  买域名"></a>第一步  买域名</h3><ul>
<li><p>这一步网上有很多的相关教程，大家可以查阅，自己亦可摸索，增加实践的机会。</p>
</li>
<li><p>如果是大学生，建议大家可以在<a href="https://www.aliyun.com/" target="_blank" rel="external">阿里云</a>或<a href="https://www.qcloud.com/" target="_blank" rel="external">腾讯云</a>里买，有学生优惠，</p>
</li>
</ul>
<h4 id="第二步-注册腾讯企业邮箱账号"><a href="#第二步-注册腾讯企业邮箱账号" class="headerlink" title="第二步 注册腾讯企业邮箱账号"></a>第二步 注册腾讯企业邮箱账号</h4><p>1.打开浏览器.输入”exmail.qq.com/”</p>
<ul>
<li>新用户注册<br><img src="http://upload-images.jianshu.io/upload_images/4340772-17d0e0fc78eca792.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><a id="more"></a></li>
<li>点击立即开通<br><img src="http://upload-images.jianshu.io/upload_images/4340772-f2bc0b0525d6a159.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></li>
<li>按域名–填写管理员信息–添加企业邮箱–一步步来就行<br><img src="http://upload-images.jianshu.io/upload_images/4340772-d119a72a78d79944.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>因为我买的腾讯云的域名，所以方法一直接就能自动设置<br>手动设置也行<br><img src="http://upload-images.jianshu.io/upload_images/4340772-70c60d5c8dd98dca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></li>
<li>上图片自动设置成功<br><img src="http://upload-images.jianshu.io/upload_images/4340772-04776e9a5a6d8635.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br><img src="http://upload-images.jianshu.io/upload_images/4340772-b7095bfff32e5541.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br><img src="http://upload-images.jianshu.io/upload_images/4340772-76608010857bb87c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></li>
<li>设置基本完成，然后进入你的企业邮箱，就可以添加成员了<br><img src="http://upload-images.jianshu.io/upload_images/4340772-7eb730e137ae196c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br><img src="http://upload-images.jianshu.io/upload_images/4340772-3ef5caa60420ad15.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></li>
</ul>
<blockquote>
<p>好了，这样就大功告成了，好好耍耍吧</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;第一步-买域名&quot;&gt;&lt;a href=&quot;#第一步-买域名&quot; class=&quot;headerlink&quot; title=&quot;第一步  买域名&quot;&gt;&lt;/a&gt;第一步  买域名&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;这一步网上有很多的相关教程，大家可以查阅，自己亦可摸索，增加实践的机会。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果是大学生，建议大家可以在&lt;a href=&quot;https://www.aliyun.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阿里云&lt;/a&gt;或&lt;a href=&quot;https://www.qcloud.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;腾讯云&lt;/a&gt;里买，有学生优惠，&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;第二步-注册腾讯企业邮箱账号&quot;&gt;&lt;a href=&quot;#第二步-注册腾讯企业邮箱账号&quot; class=&quot;headerlink&quot; title=&quot;第二步 注册腾讯企业邮箱账号&quot;&gt;&lt;/a&gt;第二步 注册腾讯企业邮箱账号&lt;/h4&gt;&lt;p&gt;1.打开浏览器.输入”exmail.qq.com/”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新用户注册&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-17d0e0fc78eca792.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;mark&quot;&gt;
    
    </summary>
    
    
      <category term="邮箱" scheme="http://yoursite.com/tags/%E9%82%AE%E7%AE%B1/"/>
    
      <category term="域名" scheme="http://yoursite.com/tags/%E5%9F%9F%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>Github自身踩到的坑</title>
    <link href="http://yoursite.com/2017/07/28/Github%E8%87%AA%E8%BA%AB%E8%B8%A9%E5%88%B0%E7%9A%84%E5%9D%91/"/>
    <id>http://yoursite.com/2017/07/28/Github自身踩到的坑/</id>
    <published>2017-07-28T15:36:05.000Z</published>
    <updated>2018-03-11T16:52:04.810Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/4340772-4134778cdc246b6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<blockquote>
<p>用Github有一两年了，是时候总结一下以前踩得坑了，这些坑开始时还真把自己摔得不轻！！！！！<br>小插曲：自己以前用hexo搭建的博客，每次写博客都要新建.md文件等初始化步骤,然后提交，有些繁琐，再加上自己又换了台电脑，又要部署hexo（虽然不需要重新部署），但还是有些步骤，索性用简书写，方便快捷些！</p>
</blockquote>
<a id="more"></a>
<h3 id="git-pull时ssh-Could-not-resolve-hostname-github-com-Name-or-service-not-known-fatal-Could-not-read-from-remote-repository"><a href="#git-pull时ssh-Could-not-resolve-hostname-github-com-Name-or-service-not-known-fatal-Could-not-read-from-remote-repository" class="headerlink" title="git pull时ssh: Could not resolve hostname github.com: Name or service not known, fatal: Could not read from remote repository."></a>git pull时<code>ssh: Could not resolve hostname github.com: Name or service not known, fatal: Could not read from remote repository.</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ git pull</div><div class="line">ssh: Could not resolve hostname github.com: Name or service not known</div><div class="line">fatal: Could not read from remote repository.</div><div class="line"></div><div class="line">Please make sure you have the correct access rights</div><div class="line">and the repository exists.</div></pre></td></tr></table></figure>
<p><strong>这个错误好醉，是因为没网了，就很皮</strong></p>
<h3 id="git本地仓库首次push到远程仓库出现错误-rejected-master-gt-master-fetch-first"><a href="#git本地仓库首次push到远程仓库出现错误-rejected-master-gt-master-fetch-first" class="headerlink" title="git本地仓库首次push到远程仓库出现错误 ! [rejected] master -&gt; master (fetch first)"></a>git本地仓库首次push到远程仓库出现错误 ! [rejected] master -&gt; master (fetch first)</h3><p>新建好本地的仓库和远程仓库之后，</p>
<p>经过<br><code>git add .</code><br>然后<br><code>git commit -m &quot;......&quot;</code><br>最后想推送到远程仓库的时候</p>
<p><code>git push -u origin master</code><br>出现下图错误</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-92f06947d40a738d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>解决很简单，使用强制推送<br>使用下面的命令<br><code>git push -f origin master</code></p>
<p><em>附上git push 的说明</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">NAME</div><div class="line"></div><div class="line">git-push - Update remote refs along with associated objects</div><div class="line"></div><div class="line">SYNOPSIS</div><div class="line"></div><div class="line">git push [--all | --mirror | --tags] [--follow-tags] [--atomic] [-n | --dry-run] [--receive-pack=&lt;git-receive-pack&gt;]</div><div class="line">       [--repo=&lt;repository&gt;] [-f | --force] [--prune] [-v | --verbose]</div><div class="line">       [-u | --set-upstream]</div><div class="line">       [--[no-]signed|--sign=(true|false|if-asked)]</div><div class="line">       [--force-with-lease[=&lt;refname&gt;[:&lt;expect&gt;]]]</div><div class="line">       [--no-verify] [&lt;repository&gt; [&lt;refspec&gt;…​]]</div><div class="line"></div><div class="line">-f  --force</div><div class="line">Usually, the command refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it. Also, when --force-with-lease option is used, the command refuses to update a remote ref whose current value does not match what is expected.</div><div class="line"></div><div class="line">This flag disables these checks, and can cause the remote repository to lose commits; use it with care.</div><div class="line"></div><div class="line">Note that --force applies to all the refs that are pushed, hence using it with push.default set to matching or with multiple push destinations configured with remote.*.push may overwrite refs other than the current branch (including local refs that are strictly behind their remote counterpart). To force a push to only one branch, use a + in front of the refspec to push (e.g git push origin +master to force a push to the master branch). See the&lt;refspec&gt;... section above for details.</div></pre></td></tr></table></figure></p>
<h3 id="github上传时出现error-src-refspec-master-does-not-match-any"><a href="#github上传时出现error-src-refspec-master-does-not-match-any" class="headerlink" title="github上传时出现error: src refspec master does not match any"></a>github上传时出现error: src refspec master does not match any</h3><p>如下：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-ee916947d8e430af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p><strong>引起该错误的原因是，目录中没有文件，空目录是不能提交上去的</strong></p>
<p>解决方法:<strong>先提交文件<code>git add . git commit -m &quot;&quot;</code></strong><br>例如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">touch README</div><div class="line">git add README </div><div class="line">git commit -m &apos;first commit&apos;</div><div class="line">git push origin master</div></pre></td></tr></table></figure></p>
<h3 id="fatal：-unable-to-create-‘-git-index-lock’-File-exists"><a href="#fatal：-unable-to-create-‘-git-index-lock’-File-exists" class="headerlink" title="fatal： unable to create ‘../../.git/index.lock’:File exists"></a>fatal： unable to create ‘../../.git/index.lock’:File exists</h3><p>  <img src="http://upload-images.jianshu.io/upload_images/4340772-427e594cf0d5fe04.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"><br>  解决方法：<strong>把文件index.lock删掉</strong></p>
<p>###Permission denied (publickey).<br>fatal: The remote end hung up unexpectedly</p>
<p>错误原因：github上没有配置公钥<br>解决方法：配置公钥，并放到github上<br>GitHub设置公钥在windows下面</p>
<ol>
<li>安装git，从程序目录打开 “Git Bash” </li>
<li>键入命令：ssh-keygen -t rsa -C “email@email.com”<br>“email@email.com”是github账号</li>
<li>提醒你输入key的名称，输入如id_rsa<br>如果执行成功。返回</li>
</ol>
<p>Generating public/private rsa key pair.<br>Enter file in which to save the key (/home/forwhat.cn/.ssh/id_rsa):<br>在这里就是设置存储地址了.反正我是直接按的回车，一直回车</p>
<ol>
<li>在C:\Documents and Settings\Administrator\下产生两个文件：id_rsa和id_rsa.pub</li>
<li>把4中生成的密钥文件复制到C:\Documents and Settings\Administrator.ssh\ 目 录下。</li>
<li>用记事本打开id_rsa.pub文件，复制内容，<strong>在github.com的网站上到ssh密钥管理页面，添加新公钥，随便取个名字例如你的电脑名</strong></li>
</ol>
<p>需要注意步骤2中产生的密钥文件在当前用户的根目录，必须把这两个文件放到当前用户目录的“.ssh”目录下才能生效。</p>
<p>————2017/8/14</p>
<h3 id="There-is-no-tracking-information-for-the-current-branch-Please-specify-which-branch-you-want-to-merge-with"><a href="#There-is-no-tracking-information-for-the-current-branch-Please-specify-which-branch-you-want-to-merge-with" class="headerlink" title="There is no tracking information for the current branch. Please specify which branch you want to merge with."></a><code>There is no tracking information for the current branch. Please specify which branch you want to merge with.</code></h3><p><img src="http://upload-images.jianshu.io/upload_images/4340772-102101ffa8f94bcd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mark"></p>
<blockquote>
<p>是因为本地分支和远程分支没有建立联系  (使用git branch -vv  可以查看本地分支和远程分支的关联关系)  .根据命令行提示只需要执行以下命令即可</p>
<ul>
<li>如果不想新建分支<br><code>git branch --set-upstream master origin/master</code></li>
<li>如果想新建分支<br><code>git branch --set-upstream-to=origin/远程分支的名字 本地分支的名字</code></li>
</ul>
</blockquote>
<p> <code>git branch –set-upstream-to=origin/develop develop</code><br>或<br><code>git branch --set-upstream develop origin/develop</code><br>（develop为新建分支name）<br>同时推荐大家看一下下面这篇–创建于合并分支<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840038939c291467cc7c747b1810aab2fb8863508000" target="_blank" rel="external">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001375840038939c291467cc7c747b1810aab2fb8863508000</a></p>
<hr>
<h3 id="2018-2-26关闭-pull-request（Closing-a-pull-request）"><a href="#2018-2-26关闭-pull-request（Closing-a-pull-request）" class="headerlink" title="2018-2-26关闭 pull request（Closing a pull request）"></a>2018-2-26关闭 pull request（Closing a pull request）</h3><p>因为pull request错了，所以想取消pull request，怎么做呢？<br>看图吧<br><img src="http://upload-images.jianshu.io/upload_images/4340772-d732e12bd4ea7f26.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4340772-1d695f3e9dd00329.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>坑不会踩完的，但会一直进步着，大家加油……</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/4340772-4134778cdc246b6f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;用Github有一两年了，是时候总结一下以前踩得坑了，这些坑开始时还真把自己摔得不轻！！！！！&lt;br&gt;小插曲：自己以前用hexo搭建的博客，每次写博客都要新建.md文件等初始化步骤,然后提交，有些繁琐，再加上自己又换了台电脑，又要部署hexo（虽然不需要重新部署），但还是有些步骤，索性用简书写，方便快捷些！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Sublime侧边栏[SideBar]字体变大</title>
    <link href="http://yoursite.com/2017/01/15/Sublime%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%AD%97%E4%BD%93%E5%8F%98%E5%A4%A7/"/>
    <id>http://yoursite.com/2017/01/15/Sublime侧边栏字体变大/</id>
    <published>2017-01-15T08:05:40.000Z</published>
    <updated>2017-07-28T15:03:14.573Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>MPic神器-上传照片直接生成外链</title>
    <link href="http://yoursite.com/2017/01/12/Mpic%E7%A5%9E%E5%99%A8/"/>
    <id>http://yoursite.com/2017/01/12/Mpic神器/</id>
    <published>2017-01-12T06:31:40.000Z</published>
    <updated>2018-03-11T16:46:29.034Z</updated>
    
    <content type="html"><![CDATA[<p>一直以来写博文，上传本地照片是一个特别麻烦的事，一来webstorm收费，其次cmd Markdown上传照片只支持外联，而上传照片到七牛云不失为一个好方法，但操作过程复杂，正在我愁眉不展时，上网一搜，搜到了一神器<strong>Mpic-图床神器</strong>。可以和七牛云绑定一起发挥威力。<br><a href="http://mpic.lzhaofu.cn/" target="_blank" rel="external">下载链接</a><br>经过自己的一番折腾，最终发现MPic果然省时省事不少，目前我知道的上传方式有2种：</p>
<ul>
<li>截图上传（QQ截图个人感觉不错）</li>
<li>拖拽本地图片上传<br>下载之后的界面：<br><img src="http://ojmcn9nlw.qnssl.com/blog/20170116/230234883.png" alt="mark"><h2 id="下面介绍一下下载软件之后的操作步骤："><a href="#下面介绍一下下载软件之后的操作步骤：" class="headerlink" title="下面介绍一下下载软件之后的操作步骤："></a>下面介绍一下下载软件之后的操作步骤：</h2><a id="more"></a>
下载之后首先就是注册账号<br><img src="http://ojmcn9nlw.qnssl.com/blog/20170112/143020429.png" alt="mark"><br>注意几个问题：</li>
<li>首先你用默认域名时，<strong>账户余额应不少于10元</strong>;</li>
<li>申请存储空间七牛云自己会带个域名，用这个自带的域名就可以，如下图，当然，用自己绑定的域名也可以，不过域名必须是注册过的，注册很麻烦耗时，不嫌麻烦的也可以试试。<br><img src="http://ojmcn9nlw.qnssl.com/blog/20170116/225538657.png" alt="mark"></li>
</ul>
<ul>
<li>在我的上传中，可<strong>查看和删除</strong>自己之前上传过的照片</li>
</ul>
<p><img src="http://ojmcn9nlw.qnssl.com/blog/20170116/222915013.png" alt="上传记录"></p>
<p><img src="http://ojmcn9nlw.qnssl.com/blog/20170116/230234883.png" alt="mark"></p>
<p>好，大功告成，终于可以好好地写自己的博客，顺带肆意的上传自已的照片了！！哈哈哈</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直以来写博文，上传本地照片是一个特别麻烦的事，一来webstorm收费，其次cmd Markdown上传照片只支持外联，而上传照片到七牛云不失为一个好方法，但操作过程复杂，正在我愁眉不展时，上网一搜，搜到了一神器&lt;strong&gt;Mpic-图床神器&lt;/strong&gt;。可以和七牛云绑定一起发挥威力。&lt;br&gt;&lt;a href=&quot;http://mpic.lzhaofu.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载链接&lt;/a&gt;&lt;br&gt;经过自己的一番折腾，最终发现MPic果然省时省事不少，目前我知道的上传方式有2种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;截图上传（QQ截图个人感觉不错）&lt;/li&gt;
&lt;li&gt;拖拽本地图片上传&lt;br&gt;下载之后的界面：&lt;br&gt;&lt;img src=&quot;http://ojmcn9nlw.qnssl.com/blog/20170116/230234883.png&quot; alt=&quot;mark&quot;&gt;&lt;h2 id=&quot;下面介绍一下下载软件之后的操作步骤：&quot;&gt;&lt;a href=&quot;#下面介绍一下下载软件之后的操作步骤：&quot; class=&quot;headerlink&quot; title=&quot;下面介绍一下下载软件之后的操作步骤：&quot;&gt;&lt;/a&gt;下面介绍一下下载软件之后的操作步骤：&lt;/h2&gt;
    
    </summary>
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>HTML5-canvas之绘制圆弧和贝塞尔曲线(3)</title>
    <link href="http://yoursite.com/2017/01/01/HTML5-canvas%E4%B9%8B%E7%BB%98%E5%88%B6%E5%9C%86%E5%BC%A7%E5%92%8C%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF/"/>
    <id>http://yoursite.com/2017/01/01/HTML5-canvas之绘制圆弧和贝塞尔曲线/</id>
    <published>2017-01-01T09:50:33.000Z</published>
    <updated>2018-03-11T16:46:21.125Z</updated>
    
    <content type="html"><![CDATA[<hr>
<p>今天我们主要是学习如何绘制圆弧和贝塞尔曲线。</p>
<h3 id="圆弧的绘制"><a href="#圆弧的绘制" class="headerlink" title="圆弧的绘制"></a>圆弧的绘制</h3><p>圆弧可以理解为一个圆上的某部分线段，在canvas中，绘制一条圆弧的语法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctx.arc( 圆心x坐标, 圆心y坐标, 圆的半径r , 开始角度, 结束角度 );</div></pre></td></tr></table></figure></p>
<p>其中的 “开始角度” 和 “结束角度” 是相对360度的 <strong>顺时针</strong> 的极坐标而言的，可配合下图理解：</p>
<p><img src="http://images.cnitblog.com/i/561179/201408/201729364715288.gif" alt="圆弧"></p>
<p>我们来一个例子，绘制一个圆心坐标为(80,80)，半径为40，开始角度为30度，结束角度为90度，那么可以这样绘制：<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;canvas id=&quot;myCanvas&quot; width=&quot;200&quot; height=&quot;200&quot; style=&quot;border:solid 1px #CCC;&quot;&gt;</div><div class="line">您的浏览器不支持canvas，建议使用最新版的Chrome</div><div class="line">&lt;/canvas&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var c = document.getElementById(&quot;myCanvas&quot;);</div><div class="line">var ctx = c.getContext(&quot;2d&quot;); //获取该canvas的2D绘图环境对象</div><div class="line">ctx.arc( 80, 80, 40, 1/6*Math.PI, 1/2*Math.PI);</div><div class="line">ctx.stroke();  //描边</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<p>其中开始角和结束角我们分别设定为“1/6<em>Math.PI”和“1/2</em>Math.PI”，是因为canvas里的角度是以PI（π）为单位的，在js中写作Math.PI，你可以把一个PI理解为180度，那么30度便是1/6个PI。上述代码效果如下：<br><img src="http://images.cnitblog.com/i/561179/201408/201738597688778.jpg" alt="圆弧2"></p>
<hr>
<p>开始角和结束角也可以是负值，则角度从0度开始以逆时针方式获取：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var c = document.getElementById(&quot;myCanvas&quot;);</div><div class="line">var ctx = c.getContext(&quot;2d&quot;); //获取该canvas的2D绘图环境对象</div><div class="line">ctx.arc( 80, 80, 40, -1/6*Math.PI, -1/2*Math.PI);</div><div class="line">ctx.stroke();  //描边</div></pre></td></tr></table></figure></p>
<p><img src="http://images.cnitblog.com/i/561179/201408/201742493788091.jpg" alt="yuanhu3"></p>
<p>我们可以很轻松地来绘制一个完整的圆，将起始角设为0度，结束角设为360度（2*Math.PI）即可：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var c = document.getElementById(&quot;myCanvas&quot;);</div><div class="line">var ctx = c.getContext(&quot;2d&quot;); //获取该canvas的2D绘图环境对象</div><div class="line">ctx.arc( 80, 80, 40, 0, 2*Math.PI);</div><div class="line"></div><div class="line">ctx.lineWidth = 3;  //描边宽度为3px</div><div class="line">ctx.strokeStyle = &quot;yellow&quot;;</div><div class="line">ctx.stroke();  //描边</div><div class="line">ctx.fillStyle = &quot;#4DA6FF&quot;;</div><div class="line">ctx.fill(); //填充颜色</div></pre></td></tr></table></figure>
<p><img src="http://images.cnitblog.com/i/561179/201408/211112488934332.jpg" alt="full"></p>
<p>注意给圆填充颜色我们使用的是 .fill() 方法，和多边形的填充方式一样。</p>
<hr>
<p>接着说说 arc() 的好兄弟 arcTo() 方法，它可以在两条线段之间连接起一条弧线，其语法如下</p>
<p>ctx.arcTo( 起点切线末端x坐标, 起点切线末端y坐标, 终点x坐标, 终点y坐标, 圆的半径r );</p>
<p>可以配合下图理解：</p>
<p><img src="http://images.cnitblog.com/i/561179/201408/211417258624242.gif" alt="此处输入图片的描述"></p>
<p>我们先不管什么“连接两条线段”的事情，单纯看下arcTo()绘制了怎样的一条圆弧：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;canvas id=&quot;myCanvas&quot; width=&quot;200&quot; height=&quot;200&quot; style=&quot;border:solid 1px #CCC;&quot;&gt;</div><div class="line">您的浏览器不支持canvas，建议使用最新版的Chrome</div><div class="line">&lt;/canvas&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var c = document.getElementById(&quot;myCanvas&quot;);</div><div class="line">var ctx = c.getContext(&quot;2d&quot;); //获取该canvas的2D绘图环境对象</div><div class="line">ctx.moveTo(20,20);           // 创建开始点</div><div class="line">ctx.arcTo(60,20,60,60,40); // 创建圆弧路径</div><div class="line">ctx.stroke();                </div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<p><img src="http://images.cnitblog.com/i/561179/201408/211421063934449.jpg" alt="此处输入图片的描述"></p>
<hr>
<p>那么我们利用arcTo()方法来连接两条直线吧：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;canvas id=&quot;myCanvas&quot; width=&quot;200&quot; height=&quot;200&quot; style=&quot;border:solid 1px #CCC;&quot;&gt;</div><div class="line">您的浏览器不支持canvas，建议使用最新版的Chrome</div><div class="line">&lt;/canvas&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var c = document.getElementById(&quot;myCanvas&quot;);</div><div class="line">var ctx = c.getContext(&quot;2d&quot;); //获取该canvas的2D绘图环境对象</div><div class="line">ctx.moveTo(20,20);</div><div class="line">ctx.lineTo(60,20);</div><div class="line">ctx.arcTo(100,20,100,60,40); // 创建圆弧路径</div><div class="line">ctx.lineTo(100,100);</div><div class="line">ctx.stroke();                </div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p><img src="http://images.cnitblog.com/i/561179/201408/211430314097497.jpg" alt="此处输入图片的描述"><br>需要知道的是 arc() 不会影响画笔的位置，而 arcTo() 会把画笔移到圆弧线的终点位置。</p>
<hr>
<h3 id="曲线的绘制"><a href="#曲线的绘制" class="headerlink" title="曲线的绘制"></a>曲线的绘制</h3><p>无论是arc()抑或arcTo()，均是绘制了一个正圆上的部分圆弧线段，下面讲讲更灵活的曲线的绘制。</p>
<p>首先介绍的是canvas中贝塞尔曲线的绘制。使用过AI等专业矢量制图软件的朋友相信能很好地理解这一部分。我们先看下在制图软件中用钢笔工具绘制一条贝塞尔曲线的过程：</p>
<p><img src="http://images.cnitblog.com/i/561179/201408/201751196283442.gif" alt="此处输入图片的描述"></p>
<p>可以看到每两点可以连成一条贝塞尔路径，且每一个点都有一条方位控制线来控制曲线的弯曲程度和走向，在canvas中也是以类似形式控制贝塞尔曲线的形状。</p>
<p>我们先来看看bezierCurveTo()的实现方式，它称作“三次方贝塞尔曲线”，其语法为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctx.bezierCurveTo( CSx, CSy, CEx, CEy, Ex, Ey );</div></pre></td></tr></table></figure></p>
<p>其中CSx、CSy表示贝塞尔曲线起点方向控制线末端的x坐标和y坐标。CEx、CEy表示贝塞尔曲线终点方向控制线末端的x坐标和y坐标。Ex、Ey表示贝塞尔曲线终点坐标。</p>
<p>参考图如下，图中的贝塞尔曲线起点坐标为（20,20），终点坐标为（200,20），起点的方向控制线末端坐标为（20,100），终点的方向控制线末端坐标为（200,100）：</p>
<p><img src="http://images.cnitblog.com/i/561179/201408/201758386594269.gif" alt="此处输入图片的描述"><br>有的朋友可能会问为何bezierCurveTo()方法没有起始点的参数，答案是起始点默认为bezierCurveTo()方法执行之前画笔所在的位置<strong>，我们可以通过ctx.moveTo(x,y)来确定起始点的位置。</strong></p>
<p>如上图所示的贝塞尔曲线我们可以这样绘制：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;canvas id=&quot;myCanvas&quot; width=&quot;300&quot; height=&quot;150&quot; style=&quot;border:solid 1px #CCC;&quot;&gt;</div><div class="line">您的浏览器不支持canvas，建议使用最新版的Chrome</div><div class="line">&lt;/canvas&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var c = document.getElementById(&quot;myCanvas&quot;);</div><div class="line">var ctx = c.getContext(&quot;2d&quot;); //获取该canvas的2D绘图环境对象</div><div class="line">ctx.moveTo(20,20);   //确定起始点</div><div class="line">ctx.bezierCurveTo( 20, 100, 200, 100, 200, 20 );</div><div class="line">ctx.stroke();  //描边</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<hr>
<p>我们可以绘制两条或者多条连在一起的贝塞尔曲线，从而塑造我们想要的曲线：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;canvas id=&quot;myCanvas&quot; width=&quot;400&quot; height=&quot;250&quot; style=&quot;border:solid 1px #CCC;&quot;&gt;</div><div class="line">您的浏览器不支持canvas，建议使用最新版的Chrome</div><div class="line">&lt;/canvas&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var c = document.getElementById(&quot;myCanvas&quot;);</div><div class="line">var ctx = c.getContext(&quot;2d&quot;); //获取该canvas的2D绘图环境对象</div><div class="line">ctx.moveTo(20,120);   //确定起始点</div><div class="line">ctx.bezierCurveTo( 20, 200, 200, 200, 200, 120 );   //绘制第一条贝塞尔曲线</div><div class="line">ctx.bezierCurveTo( 200, 20, 380, 20, 380, 120 );  //绘制第二条贝塞尔曲线，该曲线起点为上一条曲线终点（200，120）</div><div class="line">ctx.stroke();  //描边</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p><img src="http://images.cnitblog.com/i/561179/201408/211005404402751.jpg" alt="此处输入图片的描述"></p>
<hr>
<p>使用过矢量制图软件的朋友可能有个地方会困惑，那就是我们很多时候开始绘制一条曲线时（起点不做拉伸），该曲线的起点是没有任何方向控制线的，如下图：</p>
<p><img src="http://images.cnitblog.com/i/561179/201408/211020209099104.gif" alt="此处输入图片的描述"><br>如果我们要绘制一条起点不做方向控制的曲线，那么bezierCurveTo()方法就不再适用了。</p>
<p>针对这种情况，可以通过 quadraticCurveTo() 方法来解决，它称作“二次方贝塞尔曲线”，语法为</p>
<p>ctx.quadraticCurveTo( CEx, CEy, Ex, Ey );</p>
<p>其中CEx、CEy表示曲线终点方向控制线末端的x坐标和y坐标。Ex、Ey表示曲线终点坐标。至于曲线起点则跟bezierCurveTo()一样，为该方法执行前画笔所在的位置。</p>
<hr>
<p>我们试着来绘制一条这样的曲线，它是我在AI中用钢笔工具绘制出来的：</p>
<p><img src="http://images.cnitblog.com/i/561179/201408/211030157377261.gif" alt="此处输入图片的描述"></p>
<p>它的矢量轮廓是这样的：</p>
<p><img src="http://images.cnitblog.com/i/561179/201408/211032006124068.gif" alt="此处输入图片的描述"></p>
<p>由于起点是没有方向控制线的，我们很容易知道得先绘制一条quadraticCurve，然后再紧接着绘制一条bezierCurve来完成这条曲线。</p>
<p>我们先确定下各点的坐标：</p>
<p><img src="http://images.cnitblog.com/i/561179/201408/211043359247757.gif" alt="此处输入图片的描述"></p>
<p>然后轻松写出代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;canvas id=&quot;myCanvas&quot; width=&quot;490&quot; height=&quot;270&quot; style=&quot;border:solid 1px #CCC;&quot;&gt;</div><div class="line">您的浏览器不支持canvas，建议使用最新版的Chrome</div><div class="line">&lt;/canvas&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">var c = document.getElementById(&quot;myCanvas&quot;);</div><div class="line">var ctx = c.getContext(&quot;2d&quot;); //获取该canvas的2D绘图环境对象</div><div class="line">ctx.moveTo(52,37);   //确定起始点</div><div class="line">ctx.quadraticCurveTo( 45, 175, 172, 157 );   //绘制第一条曲线</div><div class="line">ctx.bezierCurveTo( 298, 140, 337, 201, 312, 236 );  //绘制第二条曲线</div><div class="line">ctx.stroke();  //描边</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>效果杠杠的</p>
<p><img src="http://images.cnitblog.com/i/561179/201408/211046495814886.jpg" alt="此处输入图片的描述"><br>建议有兴趣的朋友多实践，其中贝塞尔曲线部分的知识点可以通过AI等矢量设计软件来加深理解。共勉~ 啦啦啦<br>还有，大家元旦快乐啊！</p>
<p>有关链接</p>
<p><a href="http://www.cnblogs.com/vajoy/p/3925190.html" target="_blank" rel="external">http://www.cnblogs.com/vajoy/p/3925190.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;今天我们主要是学习如何绘制圆弧和贝塞尔曲线。&lt;/p&gt;
&lt;h3 id=&quot;圆弧的绘制&quot;&gt;&lt;a href=&quot;#圆弧的绘制&quot; class=&quot;headerlink&quot; title=&quot;圆弧的绘制&quot;&gt;&lt;/a&gt;圆弧的绘制&lt;/h3&gt;&lt;p&gt;圆弧可以理解为一个圆上的某部分线段，在canvas中，绘制一条圆弧的语法如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ctx.arc( 圆心x坐标, 圆心y坐标, 圆的半径r , 开始角度, 结束角度 );&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中的 “开始角度” 和 “结束角度” 是相对360度的 &lt;strong&gt;顺时针&lt;/strong&gt; 的极坐标而言的，可配合下图理解：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://images.cnitblog.com/i/561179/201408/201729364715288.gif&quot; alt=&quot;圆弧&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们来一个例子，绘制一个圆心坐标为(80,80)，半径为40，开始角度为30度，结束角度为90度，那么可以这样绘制：&lt;br&gt;
    
    </summary>
    
    
      <category term="html5" scheme="http://yoursite.com/tags/html5/"/>
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
</feed>
